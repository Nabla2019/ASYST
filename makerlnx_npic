#  Builds executables for the two precompilers and a utility (no
#  longer used), builds executable for program to determine
#  dependencies, builds lower level makefile for main compile of code,
#  calls nmake to build RELAP-SCDAP libraries, executable, and
#  thermodynamic property files.
#
#  To prepare a Compile Library Transmittal from an installed version:
#  make -f makerlnx preparecpl
#  To prepare an Extended Compile Library Transmittal from an installed 
#  version: 
#  make -f makerlnx prepareextcpl

cpl =
IUA =
LOADC =
RK3D =
IUACPL =
LOADCCPL =
RK3DCPL =
RK3DOBJ =
3DKIN =

cple := $(wildcard relap/adechk.ff)
extcple := $(wildcard relap/icmpf.ff)
ifndef cple
cpl = extcpl
endif
ifndef extcple
cpl = cpl
endif
iuae := $(wildcard relap/uncdata.ff)
ifdef iuae
IUA = "IUA"
endif
loadce := $(wildcard relap/hydrolod.ff)
ifdef loadce
LOADC = "LOADC"
endif
rk3de := $(wildcard relap/irkptr.ff)
ifdef rk3de
RK3D = "RK3D"
endif
3dkine := $(wildcard rk3d/main.f9)
ifndef 3dkine
3DKIN = "3DKIN"
endif

ifeq ($(debug),yes)
NM = d
FFLAGS = "-O0 -g"
O = obj
else
ifeq ($(dbg),y)
NM = d
FFLAGS = "-O0 -g"
O = obj
else
NM = o
FFLAGS = -O2
O = o
endif
endif

rk3da := $(wildcard rk3d/rk3d$(NM).a)
ifdef rk3da
RK3DOBJ = "RK3DOBJ"
endif

def = definelnx

ifeq ($(fpstop),y)
FPSTOP = -fpe0
else
FPSTOP =
endif

defo = $(def)
defcpl = $(defo)cpl

f90 = ifort

ifeq ($(rk3d),y)
RK3DCPL = "RK3DCPL"
RK3DOBJ = "RK3DOBJ"
else
ifeq ($(3dkin),y)
RK3DCPL = "RK3DCPL"
RK3DOBJ = "RK3DOBJ"
3DKIN = "3DKIN"
else
endif
endif

ifeq ($(iua),y)
IUACPL = "IUACPL"
else
endif

ifeq ($(loadc),y)
LOADCCPL = "LOADCCPL"
else
endif


.IGNORE :

ifeq ($(cpl),cpl)
all:
else
ifeq ($(cpl),extcpl)
all:
else
all: auxx/$(defcpl) auxx/select.x auxx/cnv32.x auxx/usplit.x \
auxx/builderm.x auxx/setdattim.x  auxx/rmifdef.x lib/rlmclient.o
endif
endif
	ifort -logo
	if [ ! -d "$(NM)" ]; then mkdir "$(NM)"; fi
	cd envrl ; ls *.hh >filedoth
	cd envrl ; ls *.ff >filedotf
	cd matpro ; ls *.hh >filedoth
	cd matpro ; ls *.ff >filedotf
	cd relap ; ls *.hh >filedoth
	cd relap ; ls *.ff >filedotf
	cd scdap ; ls *.hh >filedoth
	cd scdap ; ls *.ff >filedotf
ifeq ($(rk3d),y)
	cd rk3d ; ls *.f9 >filedotf
endif
ifeq ($(3dkin),y)
	cd rk3d ; ls *.f9 >filedotf
endif
	auxx/setdattim.x
	auxx/builderm.x makerlnxp_npic

	cd ..
	make -f makrelap NM=$(NM) FFLAGS=$(FFLAGS) FPSTOP=$(FPSTOP) \
	O=$(O) cpl=$(cpl) defcpl=$(defcpl) RK3DOBJ=$(RK3DOBJ) \
	IUA=$(IUA) LOADC=$(LOADC) RK3D=$(RK3D) 3DKIN=$(3DKIN)

auxx/$(defcpl):
	cp auxx/$(defo) auxx/$(defcpl)
ifeq ($(loadc),y)
	echo \$$define hydrolod >> auxx/$(defcpl)
endif
ifeq ($(3dkin),y)
	echo \$$define rk3d >> auxx/$(defcpl)
	echo \$$define 3dkin >> auxx/$(defcpl)
endif
ifeq ($(rk3d),y)
	echo \$$define rk3d >> auxx/$(defcpl)
endif
ifeq ($(iua),y)
	echo \$$define iua >> auxx/$(defcpl)
endif
ifeq ($(dbgprnt),y)
	echo \$$define dbgprnt >> auxx/$(defcpl)
endif
ifeq ($(scdapext),y)
	echo \$$define scdapext >> auxx/$(defcpl)
endif
ifeq ($(lic),0)
	echo \$$define lic0 >> auxx/$(defcpl)
else
ifeq ($(lic),1)
	echo \$$define lic1 >> auxx/$(defcpl)
else
ifeq ($(lic),2)
	echo \$$define lic2 >> auxx/$(defcpl)
else
ifeq ($(lic),3)
	echo \$$define lic3 >> auxx/$(defcpl)
else
ifeq ($(lic),4)
	echo \$$define lic4 >> auxx/$(defcpl)
else
ifeq ($(lic),5)
	echo \$$define lic5 >> auxx/$(defcpl)
else
ifeq ($(lic),6)
	echo \$$define lic6 >> auxx/$(defcpl)
else
ifeq ($(lic),7)
	echo \$$define lic7 >> auxx/$(defcpl)
else
ifeq ($(lic),8)
	echo \$$define lic8 >> auxx/$(defcpl)
else
ifeq ($(lic),9)
	echo \$$define lic9 >> auxx/$(defcpl)
else
	echo \$$define lic0 >> auxx/$(defcpl)
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
ifeq ($(cpl),y)
	echo \$$define cpl >> auxx/$(defcpl)
endif
ifeq ($(extcpl),y)
	echo \$$define extcpl >> auxx/$(defcpl)
endif

auxx/select.x: auxx/select.f
	$(f90) -o auxx/select.x auxx/select.f

auxx/rmifdef.x: auxx/rmifdef.f
	$(f90) -o auxx/rmifdef.x auxx/rmifdef.f

auxx/cnv32.x: auxx/cnv32.f
	$(f90) -o auxx/cnv32.x auxx/cnv32.f

auxx/usplit.x: auxx/usplit.f
	$(f90) -o auxx/usplit.x auxx/usplit.f

auxx/setdattim.x: auxx/setdattim.f
	$(f90) -o auxx/setdattim.x auxx/setdattim.f

auxx/builderm.x: auxx/builderm.f
	@cat auxx/$(defcpl) auxx/builderm.f | auxx/select.x \
	>builderm.for
	$(f90) -auto -ansi_alias-  -w95 -cm -pad_source \
	-o auxx/builderm.x builderm.for
	rm -f builderm.for fort.1

lib/rlmclient.o :

ifeq ($(64bit),y)
	cd reprise_linux/x86_l2 ; make -f make_64bit
	cp reprise_linux/x86_l2/rlm.a reprise_linux/
	cd reprise_linux/ ; make -f make_64bit
else
	cd reprise_linux/x86_l2 ; make -f makefile
	cp reprise_linux/x86_l2/rlm.a reprise_linux/
	cd reprise_linux ; make -f makefile
endif
	mv reprise_linux/rlm.a lib/
	mv reprise_linux/rlmclient.o lib/

clean :
	rm -f makrelap relap5*.x relap5*.exe tpf* *.mod *.pdb 
	rm ./auxx/defin*cpl
	rm -f *.dsp *.dsw *.opt f1 f2
	rm -R -f o d
	cd auxx ; rm -f *.exe *.x *.obj
	cd graphics ; rm -f *.f90 *,o *.obj s*.mod *.lib *.a *.pdb
	cd envrl ; rm -f *.o *.obj *.h *.for *.mod *.a *.lib *.x *.exe *.pr
	cd envrl ; rm -f *.pdb filedot*
	cd matpro ; rm -f *.o *.obj *.h *.for *.mod *.a *.lib *.pdb
	cd matpro; rm -f filedot*
	cd relap ; rm -f *.o *.obj *.h *.for *.mod *.a *.lib *.pdb filedot*
	cd scdap ; rm -f *.o *.obj *.h *.for *.mod *.a *.lib *.pdb filedot*
	cd rk3d ; rm -f *.o *.obj *.h *.for *.mod *.a *.lib *.pdb filedot*
	cd lib; rm -f rlmclient.o rlm.a

preparetramtl :
	cd envrl ; ls *.hh >filedoth
	cd envrl ; ls *.ff >filedotf
	cd matpro ; ls *.hh >filedoth
	cd matpro ; ls *.ff >filedotf
	cd relap ; ls *.hh >filedoth
	cd relap ; ls *.ff >filedotf
	cd scdap ; ls *.hh >filedoth
	cd scdap ; ls *.ff >filedotf
ifeq ($(rk3d),y)
	cd rk3d ; ls *.f9 >filedotf
endif
ifeq ($(3dkin),y)
	cd rk3d ; ls *.f9 >filedotf
endif

	auxx/builderm.x makerlnxp_npic
	make -f makrelap cpl=cpl RK3DCPL=$(RK3DCPL) \
	IUACPL=$(IUACPL) LOADCCPL=$(LOADCCPL) \
	defcpl=$(defcpl) preparetramtl
	
preparecpl :
	cd envrl ; ls *.hh >filedoth
	cd envrl ; ls *.ff >filedotf
	cd matpro ; ls *.hh >filedoth
	cd matpro ; ls *.ff >filedotf
	cd relap ; ls *.hh >filedoth
	cd relap ; ls *.ff >filedotf
	cd scdap ; ls *.hh >filedoth
	cd scdap ; ls *.ff >filedotf
ifeq ($(rk3d),y)
	cd rk3d ; ls *.f9 >filedotf
endif
ifeq ($(3dkin),y)
	cd rk3d ; ls *.f9 >filedotf
endif

	auxx/builderm.x makerlnxp_npic
	make -f makrelap cpl=cpl RK3DCPL=$(RK3DCPL) \
	IUACPL=$(IUACPL) LOADCCPL=$(LOADCCPL) 3DKIN=$(3DKIN) \
	defcpl=$(defcpl) preparecpl

prepareextcpl :
	cd envrl ; ls *.hh >filedoth
	cd envrl ; ls *.ff >filedotf
	cd matpro ; ls *.hh >filedoth
	cd matpro ; ls *.ff >filedotf
	cd relap ; ls *.hh >filedoth
	cd relap ; ls *.ff >filedotf
	cd scdap ; ls *.hh >filedoth
	cd scdap ; ls *.ff >filedotf
ifeq ($(rk3d),y)
	cd rk3d ; ls *.f9 >filedotf
endif
ifeq ($(3dkin),y)
	cd rk3d ; ls *.f9 >filedotf
endif

	auxx/builderm.x makerlnxp_npic
	make -f makrelap cpl=extcpl RK3DCPL=$(RK3DCPL) \
	IUACPL=$(IUACPL) LOADCCPL=$(LOADCCPL) 3DKIN=$(3DKIN) \
	defcpl=$(defcpl) prepareextcpl

.PRECIOUS: relap5.x relap5d.x
