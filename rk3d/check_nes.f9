      SUBROUTINE CHECK_NES(IOERROR)
C     
C     THIS SUBROUTINE RECOGNIZES THE DIFFERENT NON-PERMISSIBLE RUNS AND
C     FLAGS BACK AN ERROR MESSAGE ALONG WITH SUGGESTION FOR THE
C     ALTERNATIVE RUN CASE
C     
      include 'param.fcb'
      include 'cntl.fcb'
      include 'xeopt.fcb'
      include 'bcshex.fcb'
      include 'bcs.fcb'
      include 'burn.fcb'
C     
C-----CHECKING FOR THE FIXED-SOURCE  PROBLEM [FSP]
C     
      IF(ITYPE.EQ.'FSP')THEN
       DO 111 I=1,NBU+1
        IF(IXE(I).EQ.4.OR.IXE(I).EQ.5)THEN
         WRITE(6,*)
     &     '####ERROR, NON-PERMISSABLE RUN CASE [ CHOOSE EITHER : ]'
         WRITE(6,*) '         "  ITYPE=`EVP`  "    '
         WRITE(6,*) ' OR      "  IXE=1 OR 3   "  '
         IOERROR = 1
        ENDIF
 111   CONTINUE
       
       IF(ASRCH.EQ.'Y'.AND.IWHICH.EQ.1)THEN
        WRITE(6,*)
     &    '####ERROR, NON-PERMISSABLE RUN CASE [ CHOOSE EITHER : ]'
        WRITE(6,*)'           " ITYPE=`EVP`        " '
        WRITE(6,*)'           " IWHICH=2 OR 3 OR 4 " '
        IOERROR = 1
       ENDIF
      ENDIF
C     
C-----CHECKING FOR THE TRANSIENT CASES
C     
      IF(ITRAN.EQ.'Y')THEN
       DO 112 I=1,NBU+1
        IF(IXE(I).EQ.4.OR.IXE(I).EQ.5)THEN
         WRITE(6,*)
     &     '####ERROR, NON-PERMISSABLE RUN CASE [ CHOOSE EITHER : ]'
         WRITE(6,*) '         "  ITRAN=`N`  "    '
         WRITE(6,*) ' OR      "  IXE=1 OR 3   "  '
         IOERROR = 1
        ENDIF
 112   CONTINUE
      ENDIF
      
      
C     
C-----CHECKING FOR CONSISTENCY OF GEOMETRY & BC
C     
      
      IF(LIZU.EQ.3.OR.LIZD.EQ.3) GOTO 10
      IF(LIHO.EQ.3) GOTO 10
      IF(LIPS.EQ.1.OR.LIPS.EQ.2) GOTO 10
      GOTO 20
      
 10   CONTINUE
      WRITE(6,*)
     &  '####ERROR, NON-PERMISSABLE RUN CASE ',              
     &  '[ GEOMETRY & B.C. INCONSISTENCY ]'
      IOERROR=1
      STOP 'CHECK_NES.FOR'
      
 20   CONTINUE
      
 40   CONTINUE
      
      RETURN
      END
