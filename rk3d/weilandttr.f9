C23456789012345678901234567890123456789012345678901234567890123456789012
C                                                                      C
                SUBROUTINE WEILANDTTR(NOUTIT,IRETRN,
     &      FNSWT,FNPPOT,NCOLXY,NCOLZ,SW,SWPPOT,RESIDUAL)
C                                                                      C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C
C  THIS SUBROUTINE IS APPLICABLE TO WEILANDT SHIFT WITH STATIONARY
C  ACCELERATION AND CHECKS FOR CONVERGENCE FOR THE TRANSIENT PROBLEM
C
C
C12345678901234567890123456789012345678901234567890123456789012345678901
C
 
      include 'param.fcb'
      include 'che.fcb'
      include 'cntl.fcb'
      include 'conv.fcb' !vmq
      include 'geom.fcb'
      include 'opti.fcb'
      include 'xsec1.fcb'
      include 'only.fcb'
      include 'nonfue.fcb'
      include 'nemcnt.fcb'
      include 'flamdold.fcb'
      include 'varlen.fcb'
      include 'array.fcb'
 
       DIMENSION
     &   FNSWT(NXYL,*)                      ,FNPPOT(NXYL,*)      ,
     &   NCOLZ(*)                           ,NCOLXY(NXYLMAX,*)   ,
     &   SW(NXYL,NZ,*)                      ,SWPPOT(NXYL,NZ,*)

       REAL*8 FISDEL,ERRATD
C
C INITIALIZE PARAMETERS :
C
        INEWCP=0
        GAMMAD=0.0
	ERRATD=ERRATN
        ERRATN=0.0
        FLAMNEW = 0.D0
        WSCALE=1.000
C
C IS WEILANDT SHIFT CYCLE PERMITTED OR ALREADY IN PROGRESS ? :
C
        IF(NEWCP .EQ. 1) THEN
C
C INITIALIZE THE BEGINNING OF A WEILANDT SHIFT CYCLE :
C
          INEWCP=1
          NEWCP=0
          NORDCP=0
        ENDIF  
        NORDCP=NORDCP+1
C
C CALCULATE FISSION SOURCE NORM AND RELATED QUANTITIES :
C
C    ERRATN = L-2 NORM OF THE OUTER ITERATIVE RESIDUAL (S(L)-S(L-1))
C    FLAMNEW = MAXIMUM RELATIVE POINTWISE GROWTH OF S(L) (S(L)/S(L-1))
C    GAMMAD = NORMALIZED INNER PRODUCT OF S(L) AND S(L-1) [S(L),S(L-1)]
C
       DO 1 IZ=1,NZ
         DO 1 IXY=1,NXYL
           ICC = NCOLXY(IXY,NCOLZ(IZ))
           IF(ICC .GT. NFUEXY) THEN
             FISDEL=ABS((FNSWT(IXY,IZ))-(FNPPOT(IXY,IZ)))
             FISDELN = FISDEL/FNSWT(IXY,IZ)
             FLAMNEW = MAX(FLAMNEW,FISDELN)
             ERRATN=ERRATN+FISDEL*FISDEL
             GAMMAD=GAMMAD+ABS(FNSWT(IXY,IZ))*(FNPPOT(IXY,IZ))/ERRATD
           ENDIF  
 1     CONTINUE
C
C COMPUTE RESIDUAL
C
       CALL RESID(
     &   A(LVOLUN),A(LBETATN),A(LBETATLAMN),
     &   A(LFILAMDT1N),A(LSWN),A(LTNFN),A(LXHIPN),A(LSEFFN),
     &   AINT(LLSEXTRN),AINT(LLSEXTZN),A(LSEXTN),A(LSCWN),
     &   A(LFNSHIFTN),EIGEN,RESIDUAL )
C
C COMPUTE RESIDUAL RELATIVE REDUCTION
C
       DIFFIS=(1.-WEILANDT)*SQRT((ERRATN/GAMMAD)/ERRATD)
       IF(INEWCP.EQ.1) DIFFISOLD=DIFFIS
       IF(DIFFISOLD.GT.0.0) THEN
         DIFRESID=SQRT(DIFFIS/DIFFISOLD)
       ELSE  
         DIFRESID=1.
       ENDIF  
C
C ONE-TERM FIXED EXTRAPOLATION ACCELERATION :
C
       IF(OMEGAEXT.NE.1.0.AND.NOUTIT.GE.3.AND.NORDCP.GT.1) THEN
         DO 3 IZ=1,NZ
           DO 3 IXY=1,NXYL
             DO 2 IG=1,NG
               SW(IXY,IZ,IG)=SWPPOT(IXY,IZ,IG)
     &          +OMEGAEXT*(SW(IXY,IZ,IG)-SWPPOT(IXY,IZ,IG))
2            CONTINUE
             FNSWT(IXY,IZ)=FNPPOT(IXY,IZ)+
     &                         OMEGAEXT*(FNSWT(IXY,IZ)-FNPPOT(IXY,IZ))
3        CONTINUE
       ENDIF
C
C COMPUTE FISSION SOURCE ERRORS :
C 
        DIFLAMNEW = ABS(FLAMNEW)

        IF(NORDCP.GE.IUPOUTER.OR.DIFRESID.LE.EPREDRESID)THEN
          NEWCP=1
        ELSE
          NEWCP=0
        ENDIF
       
        IF(IMETHOD.EQ.1.AND.(ANFDBK.EQ.'N'.OR.
     *                 (ANFDBK.EQ.'Y'.AND.ANFDBKIMP.EQ.'N'))) INEWCP=1
C
C CHECK CONVERGENCE :
C
        IRETRN=1
        IF(NOUTIT .GE. KITR) IRETRN=2
 
C !vmq        IF(CRTON.EQ.'Y') THEN
C !vmq          WRITE(*,87)DIFFIS,EPSOT
C !vmq          IF(EPSRESID.LT.1.0) WRITE(*,92)RESIDUAL,EPSRESID
C !vmq          WRITE(*,91)DIFRESID,EPREDRESID
C !vmq          WRITE(*,90)NORDCP
C !vmq        ENDIF
 
        IF(ACONV.EQ.'Y') THEN
          IF(      DIFFIS.LE.EPSOT
     &       .AND. INEWCP.EQ.1
     &       .AND. INEM.EQ.0
     &       .AND. RESIDUAL.LE.EPSRESID)IRETRN=3
        ELSE
          IF(      DIFFIS.LE.EPSOT
     &       .AND. RESIDUAL.LE.EPSRESID)IRETRN=3
        ENDIF
        
        IF(NPC.EQ.'Y') THEN
          IF(EPSRESID.LT.1.0) THEN
            WRITE(55,300) DIFLAMNEW,DIFFIS,RESIDUAL,NORDCP
          ELSE
            WRITE(55,301) DIFLAMNEW,DIFFIS,NORDCP
          ENDIF
	ENDIF
 
 87     FORMAT(T2,' L_2 OUTER ITER RESID CONV. CRITERIA: ',
     &                                          2X,E12.5,2X,E12.5)
 90     FORMAT(T2,' WEILANDT SHIFT CYCLE               : ',4X,I2)
 91     FORMAT(T2,' L_2 RELATIVE RESID KICKOUT CRITERIA: ',
     &                                          2X,E12.5,2X,E12.5)
 92     FORMAT(T2,' L_2 TRUE RESIDUAL CONV. CRITERIA   : ',
     &                                          2X,E12.5,2X,E12.5)
300     FORMAT(/6X,'L_INF OUTER ITERATIVE REL RESIDUAL =',E12.5,
     &         /6X,'L_2 OUTER ITERATIVE REL RESIDUAL   =',E12.5,
     &         /6X,'L_2 TRUE RELATIVE RESIDUAL         =',E12.5,
     &         /6X,'WEILANDT SHIFT CYCLE=',I3/)
301     FORMAT(/6X,'L_INF OUTER ITERATIVE REL RESIDUAL =',E12.5,
     &         /6X,'L_2 OUTER ITERATIVE REL RESIDUAL   =',E12.5,
     &         /6X,'WEILANDT SHIFT CYCLE=',I3/)

        RETURN
        END
