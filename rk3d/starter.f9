      SUBROUTINE STARTER(
     &  ALAMDAT,BETA,CI,
     &  ALPHA, ZETA,DI,ALPHAT,PWRDNOLD,PWRDN,
     &  HEFFOLD,TCOLCOLD,TAVFOLD,RHOWOLD,TAVF,
     &  HEFF,RHOW,TCOLC,FNOLDT,FNSWT,HEATFLUX,SW,SWOLD,AREA,
     &  NCOLXY,NCOLZ,TPF,TTCOLINOLD,UOLD,UNEW,DU34,
     &  DU35,DU38,DPU39,DPU40,DPU41,DPU42,FU4,FU5,FU8,FPU9,FPU0,FPU1,
     &  FPU2,ALPHAI,NMAX,DU36,FU6,TTCOLIN)
C     
C     THIS SUBROUTINE SETS INITIAL VALUES TO INITIATE THE TRANSIENT FROM
C     
      include 'param.fcb'
      include 'veloc.fcb'
      include 'thermk.fcb'
      include 'power.fcb'
      include 'geom.fcb'
      include 'cntl.fcb'
      include 'start.fcb'
      include 'perttr.fcb'
      include 'soln2.fcb'
      include 'thermo.fcb'
      include 'nonfue.fcb'
      include 'bpitch.fcb'
      include 'che.fcb'
      include 'xsec2.fcb'
      include 'adj.fcb'

      DIMENSION
     &  NCOLXY(NXYLMAX,*)                        ,NCOLZ(*)           ,
     &  ALAMDAT(NXYL,NZ,*),BETA(NXYL,NZ,*)    ,
     &  CI(NXYL,NZ,*)                            ,TTCOLIN(*)         ,
     &  ALPHA(NXYL,NZ,NG,*)                      ,ZETA(*)            ,
     &  DI(NXYL,NZ,*)                            ,ALPHAT(NXYL,NZ,*)  ,
     &  SW(NXYL,NZ,*)                            ,SWOLD(NXYL,NZ,*)   ,
     &  FNSWT(NXYL,*)                            ,FNOLDT(NXYL,*)     ,
     &  HEFFOLD(NXYL,*)                          ,TCOLCOLD(NXYL,*)   ,
     &  TAVFOLD(NXYL,*)                          ,RHOWOLD(NXYL,*)    ,
     &  TAVF(NXYL,*)                             ,HEFF(NXYL,*)       ,
     &  TCOLC(NXYL,*)                            ,RHOW(NXYL,*)       ,
     &  PWRDN(NXYL,*)                            ,TTCOLINOLD(*)      ,
     &  PWRDNOLD(NXYL,*)                         ,HEATFLUX(NXYL,*)   ,
     &  AREA(*)                                  ,TPF(NXYL,NZ,*)     ,
     &  UOLD(NXYL,*)                             ,UNEW(NXYL,*)       ,
     &  DU38(NXYL,*)                             ,DPU39(NXYL,*)      ,
     &  DPU40(NXYL,*)                            ,DPU41(NXYL,*)      ,
     &  DU35(NXYL,*)                             ,NMAX(*)            ,
     &  FU5(NXYL,NZ,*)                           ,DPU42(NXYL,*)      ,
     &  FU8(NXYL,NZ,*)                           ,FPU9(NXYL,NZ,*)    ,
     &  FPU0(NXYL,NZ,*)                          ,FPU1(NXYL,NZ,*)    ,
     &  FPU2(NXYL,NZ,*)                          ,ALPHAI(NISOT,*)    ,
     &  DU36(NXYL,*)                             ,FU6(NXYL,NZ,*)     ,
     &  FU4(NXYL,NZ,*)                           ,DU34(NXYL,*)
C     
C...  CI        = PRECURSOR DENSITIES FOR GROUPS AT (N+1) TIME STEP
C...  DI        = PRECURSOR DECAY HEAT FOR GROUPS AT (N+1) TIME STEP
C...  ALAMDAT   = NODE-WISE DECAY CONSTANTS FOR THE GROUPS.
C...  BETA      = DELAYED NEUTRON FRACTION
C...  ALPHA     = DECAY CONSTANTS FOR THE DECAYED HEAT PRECURSORS.
C...  ZETA      = DECAYED PRECURSOR FRACTION
C...  DELTAT    = TIME INTERVAL  [SEC]
C...  NPREC     = NUMBER OF NEUTRON PRECURSORS
C...  NDECAY    = NUMBER OF DECAY HEAT PRECURSORS
C...  ITRAN     = CONTROL VARIABLE [ CONTROLS TRANSIENT CASE ]
C...  PWRDNP    = TRANSIENT PROMPT POWER DENSITY [ MEV/CM**3-SEC ]
C     
C     UPDATE ALPHA
      
      IF(IMICRO.EQ.'Y')THEN
       SCAL=1.0E-24
       DO 11 IZ=1,NZ
        DO 10 IXY=1,NXYL
         I=NCOLXY(IXY,NCOLZ(IZ))
         NMX=NMAX(I)
         
         IF(I.LE.NFUEXY)GOTO 10
         
         DO 235 J=1,NDECAY
          DO 236 IG=1,NG
           
           DSIGAF1=
     *       (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RKU34*ALPHAI(1,J)
     *       +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RKU35*ALPHAI(2,J)
     *       +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RKU36*ALPHAI(3,J)
     *       +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RKU38*ALPHAI(4,J)
     *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RKPU39*ALPHAI(5,J)
     *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RKPU40*ALPHAI(6,J)
     *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RKPU41*ALPHAI(7,J)
     *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RKPU42*ALPHAI(8,J))
           
           DSIGAF2=
     *       (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RKU34
     *       +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RKU35
     *       +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RKU36
     *       +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RKU38
     *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RKPU39
     *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RKPU40
     *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RKPU41
     *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RKPU42)
           
           ALPHA(IXY,IZ,IG,J)  =  DSIGAF1/DSIGAF2
           
 236      CONTINUE
 235     CONTINUE
 10     CONTINUE
 11    CONTINUE
      ENDIF
      
      IF(.NOT.(IRSTRT.EQ.'Y'.AND.IRSTRTB.EQ.'TR')) THEN 

C     COMPUTE KINETIC PARAMETERS
C============================
C     
       DO 1992 I=1,NPREC
        DO 1993 IZ=IZCOLS,IZCOLE
         DO 1994 IXY=1,NXYL
          ICOL=NCOLXY(IXY,NCOLZ(IZ))
          IF(ICOL.LE.NFUEXY)GOTO 1994
          CI(IXY,IZ,I) =
     $      (BETA(IXY,IZ,I)/ALAMDAT(IXY,IZ,I))*FNSWT(IXY,IZ)/FLAMDA
 1994    CONTINUE
 1993   CONTINUE
 1992  CONTINUE
       
       DO 1998 I=1,NDECAY
        DO 1996 IZ=1,NZ
         DO 1995 IXY=1,NXYL
          SDECAY=0.0
          DO 18 IG=1,NG
           SDECAY=SDECAY+ALPHA(IXY,IZ,IG,I)*SW(IXY,IZ,IG)*
     &       TPF(IXY,IZ,IG)
 18       CONTINUE
          DI(IXY,IZ,I) =
     &      (1./ZETA(I)) * SDECAY
 1995    CONTINUE
 1996   CONTINUE
 1998  CONTINUE
      ENDIF
      
      DO 2995 IZ=1,NZ
       DO 2996 IXY=1,NXYL
        DO 2997 IG=1,NG
         ALPHAT(IXY,IZ,IG) = 0.D0
         DO 1997 I=1,NDECAY
          ALPHAT(IXY,IZ,IG) = ALPHAT(IXY,IZ,IG)
     &      + ALPHA(IXY,IZ,IG,I)
 1997    CONTINUE
 2997   CONTINUE
 2996  CONTINUE
 2995 CONTINUE
      
C     
C     INITIALIZING OLD POWER DENSITY
C===========================================
C     
      DO 2011 IZ=1,NZ
       DO 2001 IXY=1,NXYL
        PWRDNOLD(IXY,IZ) = PWRDN(IXY,IZ)
 2001  CONTINUE
 2011 CONTINUE
      
C     
C     INITIALIZING OLD FISSION SOURCE  (T_N)
C===========================================
C     *
      DO 2013 IZ=1,NZ
       DO 2003 IXY=1,NXYL
        FNOLDT(IXY,IZ)  = FNSWT(IXY,IZ)
 2003  CONTINUE
 2013 CONTINUE
      
C     INITIALIZING OLD TH PROPERTIES  (T_N)
C===========================================
C     *
      DO 2014 IXY=1,NXYL
       IF(.NOT.(IRSTRT.EQ.'Y'.AND.IRSTRTB.EQ.'TR')) THEN 
        TTCOLINOLD(IXY)=TCOLIN
       ELSE
        TTCOLINOLD(IXY)=TTCOLIN(IXY)
       ENDIF
       DO 2004 IZ=1,NZ
        RHOWOLD(IXY,IZ)  = RHOW(IXY,IZ)
        HEFFOLD(IXY,IZ)  = HEFF(IXY,IZ)
        TAVFOLD(IXY,IZ)  = TAVF(IXY,IZ)
        TCOLCOLD(IXY,IZ) = TCOLC(IXY,IZ)
        UOLD(IXY,IZ)     = UNEW(IXY,IZ)
 2004  CONTINUE
 2014 CONTINUE
      IF(.NOT.(IRSTRT.EQ.'Y'.AND.IRSTRTB.EQ.'TR')) THEN 

C     
C     INITIALIZING HEATFLUX FOR TRANSIENT TH ROUTINE (T_N+1)& (T_N)
C================================================================
C     *
       DO 2016 IZ=IZCOLS,IZCOLE
        DO 2006 IXY=1,NXYL
         I=NCOLXY(IXY,NCOLZ(IZ))
         IF(I .LE. NFUEXY) GOTO 2006
         FNFRODS = NFRODS *(AREA(IXY)/BAREA)
         HEATFLUX(IXY,IZ) =
     &     ( FNFRODS )*
     &     (   ( HEFF(IXY,IZ)+ HEFFOLD(IXY,IZ) )/4.0  )
     &     * ( ( TAVF(IXY,IZ)+ TAVFOLD(IXY,IZ) )
     &     -(TCOLC(IXY,IZ)+TCOLCOLD(IXY,IZ))  )
         
 2006   CONTINUE
 2016  CONTINUE
      ENDIF

C     
C     INITIALIZING OLD FLUX
C===========================================
C     *
      DO 2027 IG=1,NG
       DO 2017 IZ=1,NZ
        DO 2007 IXY=1,NXYL
         SWOLD(IXY,IZ,IG) = SW(IXY,IZ,IG)
 2007   CONTINUE
 2017  CONTINUE
 2027 CONTINUE
      RETURN
      END
