      SUBROUTINE AVGEDIT(
     &  VOLU,NCOLXY,NCOLZ,IBIYNDEL,IBIXWDEL,NBCXXEND,NBCXXSTART,
     &  IBIXW,IBIYN,NDNUM,EDITTOP,EDITBOT,AXIALTOP,AXIALBOT,
     &  Z,DZ,FRACTB,IEDITLOG )
C
C  THIS SUBROUTINE EDITS OUT RADIAL AND AXIAL CORE AVERAGED PROPERTIES
C
      include 'param.fcb'
      include 'nonfue.fcb'
      include 'bundle.fcb'
      include 'varlen.fcb'
 
      DIMENSION
     &  IBIYNDEL(NX,*)                         ,IBIXWDEL(NX,*)       ,
     &  NBCXXEND(*)                            ,NBCXXSTART(*)        ,
     &  IBIXW(NX,*)                            ,IBIYN(NX,*)          ,
     &  NCOLXY(NXYLMAX,*)                      ,NCOLZ(*)             ,
     &  EDITBOT(NXYL,*)                        ,EDITTOP(NXYL,*)      ,
     &  VOLU(NXYL,*)                           ,AXIALTOP(*)          ,
     &  Z(*)                                   ,FRACTB(*)            ,
     &  NDNUM(-1:NX+2,0:*)                     ,DZ(0:*)              ,
     &  AXIALBOT(*)
      
      DIMENSION
     &  BUNDTOP(50,50)                          ,BUNDBOT(50,50)      ,
     &  IXX(80)                                 ,VOLASSY(50,50)
      
      CHARACTER*80 ABUNDTOP,ABUNDBOT
      CHARACTER*4 STAR,ASTRSK(100)
      DATA STAR/'*'/
      
      DO 1 I=1,80
       IXX(I)=I
 1    CONTINUE
      
      DO 5100 I=1,100
       ASTRSK(I)=STAR
 5100 CONTINUE
C
C===== EVALUATING THE AXIAL HEIGHT FOR THE AXIAL POWER DISTRIBUTION
C
      Z(IZCOLS) = DZ(IZCOLS)/(2.0*2.54)
      
      DO 865 IZ=IZCOLS,IZCOLE-1
       Z(IZ+1)= Z(IZ) + DZ(IZ)/(2.0*2.54) + DZ(IZ+1)/(2.54*2.0)
 865  CONTINUE
 
      DO 1987 II=1,NBCX
       DO 1988 JJ=1,NBCY
        BUNDTOP(II,JJ) = 0.00
        BUNDBOT(II,JJ) = 0.00
        VOLASSY(II,JJ)=0.00
 1988  CONTINUE
 1987 CONTINUE
      FMAXTOP=0.0
      FMAXBOT=0.0
      SUMTMAX=0.0
      SUMBMAX=0.0
      AXIALAVTOP=0.0
      AXIALAVBOT=0.0
      AXIALDZ=0.0
      IXMAXT=0   !vmq
      IYMAXT=0   !vmq
      IZMAXT=0   !vmq
      IXMAXB=0   !vmq
      IYMAXB=0   !vmq
      IZMAXB=0   !vmq
      IBCXTMAX=0 !vmq
      IBCYTMAX=0 !vmq
      IZTMAX=0 !vmq
      IBCXBMAX=0 !vmq
      IBCYBMAX=0 !vmq
      IZBMAX=0 !vmq

C     
C     FOR OFFSET FUELS
C     
      IZ=INT((IZCOLS+IZCOLE)/2,8) !vmq
      VOLREF=0.0
      DO 151 IBCY=1,NBCY
       DO 152 IBCX=NBCXXSTART(IBCY),NBCXXEND(IBCY),IODDEVENX
        IMIN=IBIXW(IBCX,IBCY)
        JMIN=IBIYN(IBCX,IBCY)
        IF(IMIN.EQ.0.OR.JMIN.EQ.0) GOTO 152
        IMAX=IMIN+IBIXWDEL(IBCX,IBCY)-1
        JMAX=JMIN+IBIYNDEL(IBCX,IBCY)-1
        VOLSUM = 0.00
        DO 121 IY=JMIN,JMAX
         DO 122 IX=IMIN,IMAX
          IXY=NDNUM(IX,IY)
          ICOL=NCOLXY(IXY,NCOLZ(IZ))
          IF(ICOL.GT.NFUEXY)VOLSUM=VOLSUM+VOLU(IXY,IZ)*FRACTB(IXY)
 122	 CONTINUE
 121    CONTINUE
        VOLREF=VOLREF+VOLSUM
 152   CONTINUE
 151  CONTINUE
      izref=iz

      DO 49 IZ=IZCOLS,IZCOLE
       VOLZ=0.0
       AXIALBOT(IZ) = 0.00
       AXIALTOP(IZ) = 0.00
       DO 53 IBCY=1,NBCY
        DO 52 IBCX=NBCXXSTART(IBCY),NBCXXEND(IBCY),IODDEVENX
         IMIN=IBIXW(IBCX,IBCY)
         JMIN=IBIYN(IBCX,IBCY)
         IF(IMIN.EQ.0.OR.JMIN.EQ.0) GOTO 52
         IMAX=IMIN+IBIXWDEL(IBCX,IBCY)-1
         JMAX=JMIN+IBIYNDEL(IBCX,IBCY)-1
         SUM1=0.0
         SUM2=0.0
         VOLSUM = 0.00
         DO 222 IY=JMIN,JMAX
          DO 200 IX=IMIN,IMAX
           IXY=NDNUM(IX,IY)
           ICOL=NCOLXY(IXY,NCOLZ(IZ))
           IF(ICOL.GT.NFUEXY) THEN
            SUM1=SUM1 + EDITBOT(IXY,IZ)*VOLU(IXY,IZ)*FRACTB(IXY)
            SUM2=SUM2 + EDITTOP(IXY,IZ)*VOLU(IXY,IZ)*FRACTB(IXY)
            VOLSUM=VOLSUM+VOLU(IXY,IZ)*FRACTB(IXY)
            IF(EDITBOT(IXY,IZ).GT.FMAXBOT) THEN
             FMAXBOT=EDITBOT(IXY,IZ)
             IXMAXB=IX
             IYMAXB=IY
             IZMAXB=IZ
            ENDIF
            IF(EDITTOP(IXY,IZ).GT.FMAXTOP) THEN
             FMAXTOP=EDITTOP(IXY,IZ)
             IXMAXT=IX
             IYMAXT=IY
             IZMAXT=IZ
            ENDIF
           ENDIF
 200      CONTINUE
 222     CONTINUE
         IF(VOLSUM.GT..0) THEN
          IF((SUM1/VOLSUM).GT.SUMBMAX) THEN
           SUMBMAX=SUM1/VOLSUM
           IZBMAX=IZ
           IBCYBMAX=IBCY
           IBCXBMAX=IBCX
          ENDIF
          IF((SUM2/VOLSUM).GT.SUMTMAX) THEN
           SUMTMAX=SUM2/VOLSUM
           IZTMAX=IZ
           IBCYTMAX=IBCY
           IBCXTMAX=IBCX
          ENDIF
         ENDIF
         BUNDBOT(IBCX,IBCY)=BUNDBOT(IBCX,IBCY)+SUM1
         BUNDTOP(IBCX,IBCY)=BUNDTOP(IBCX,IBCY)+SUM2
         
         VOLASSY(IBCX,IBCY)=VOLASSY(IBCX,IBCY)+VOLSUM
         AXIALBOT(IZ) = AXIALBOT(IZ) + SUM1
         AXIALTOP(IZ) = AXIALTOP(IZ) + SUM2
         VOLZ=VOLZ+VOLSUM
 52     CONTINUE
 53    CONTINUE
       AXIALBOT(IZ)=AXIALBOT(IZ)/VOLZ
       AXIALTOP(IZ)=AXIALTOP(IZ)/VOLZ
       AMULT=(VOLZ/DZ(IZ))/(VOLREF/DZ(IZREF))
       AXIALAVBOT=AXIALAVBOT+AXIALBOT(IZ)*DZ(IZ)*AMULT
       AXIALAVTOP=AXIALAVTOP+AXIALTOP(IZ)*DZ(IZ)*AMULT
       AXIALDZ=AXIALDZ+DZ(IZ)*AMULT
 49   CONTINUE
      AXIALAVBOT=AXIALAVBOT/AXIALDZ
      AXIALAVTOP=AXIALAVTOP/AXIALDZ
      
      DO 61 IBCY=1,NBCY
       DO 60 IBCX=NBCXXSTART(IBCY),NBCXXEND(IBCY),IODDEVENX
        IF(VOLASSY(IBCX,IBCY).GT.0) THEN
         BUNDBOT(IBCX,IBCY)=BUNDBOT(IBCX,IBCY)/VOLASSY(IBCX,IBCY)
         BUNDTOP(IBCX,IBCY)=BUNDTOP(IBCX,IBCY)/VOLASSY(IBCX,IBCY)
        ENDIF
 60    CONTINUE
 61   CONTINUE
 
      IF(IEDITLOG.EQ.0) THEN
       WRITE (55,5)
       WRITE (55,6) AXIALAVTOP
       WRITE (55,7) AXIALAVBOT
       WRITE (55,111)                                              
       WRITE (55,12) IXMAXT,IYMAXT,IZMAXT,FMAXTOP                  
       WRITE (55,13) IXMAXB,IYMAXB,IZMAXB,FMAXBOT                  
       WRITE (55,11)                                               
       WRITE (55,12) IBCXTMAX,IBCYTMAX,IZTMAX,SUMTMAX              
       WRITE (55,13) IBCXBMAX,IBCYBMAX,IZBMAX,SUMBMAX              
      ELSEIF(IEDITLOG.EQ.1)THEN                                    
       WRITE (55,5)
       WRITE (55,8) AXIALAVTOP
       WRITE (55,9) AXIALAVBOT
       WRITE (55,111)
       WRITE (55,16) IXMAXT,IYMAXT,IZMAXT,FMAXTOP
       WRITE (55,17) IXMAXB,IYMAXB,IZMAXB,FMAXBOT
       WRITE (55,11)
       WRITE (55,16) IBCXTMAX,IBCYTMAX,IZTMAX,SUMTMAX
       WRITE (55,17) IBCXBMAX,IBCYBMAX,IZBMAX,SUMBMAX
      ENDIF
      
      NXSTRING=70
      NPRINTCX=8
      NCOLYPAGE=20
      NBCXDEL=NBCX/NPRINTCX
      NLEFT = NBCX - NBCXDEL*NPRINTCX
      IF(NLEFT.GT.0)NBCXDEL = NBCXDEL+1
      IF(NBCXDEL.EQ.0) NBCXDEL=1
      
      IF(IEDITLOG.EQ.0) THEN
       WRITE (55,22)
      ELSEIF(IEDITLOG.EQ.1)THEN
       WRITE (55,23)
      ENDIF
      
      DO 30 IBCXDEL=1,NBCXDEL
       DO 6111 I=1,NXSTRING-1
        ABUNDTOP(I:I+1)=' '
        ABUNDBOT(I:I+1)=' '
 6111  CONTINUE
       NCOLXSTART=(IBCXDEL-1)*NPRINTCX+1
       NCOLXEND=NCOLXSTART+(NPRINTCX-1)
       IF(NCOLXEND.GT.NBCX) NCOLXEND=NBCX
       DO 29 ICY=1,NBCY
        ICYPAGE=INT((ICY-1)/NCOLYPAGE,8)*NCOLYPAGE !vmq
        IF(ICYPAGE.EQ.(ICY-1)) THEN
         WRITE (55,201) (IXX(ICX),ICX=NCOLXSTART,NCOLXEND)
        ENDIF
        NCOLXSTARTB=NBCXXSTART(ICY)
        NCOLXENDB=NBCXXEND(ICY)
        ICXLOCALE= 4
        ICXLOCALS=ICXLOCALE-(NPRINTCX-1)
        
        DO 28 ICX=NCOLXSTART,NCOLXEND,1
         ICXLOCALS=ICXLOCALS+NPRINTCX
         ICXLOCALE=ICXLOCALS+5
         IF(BUNDTOP(ICX,ICY).EQ.0.0) THEN
          ABUNDTOP(ICXLOCALS:ICXLOCALE)=' '
          ABUNDBOT(ICXLOCALS:ICXLOCALE)=' '
         ELSE
          CALL RSTRING(BUNDTOP(ICX,ICY),
     &      ABUNDTOP(ICXLOCALS:ICXLOCALE))
          IF(IEDITLOG.EQ.0) THEN
           BUGWDBOT=BUNDBOT(ICX,ICY)/1000.
          ELSE
           BUGWDBOT=BUNDBOT(ICX,ICY)
          ENDIF
          CALL RSTRING(BUGWDBOT,ABUNDBOT(ICXLOCALS:ICXLOCALE))
         ENDIF
         
         IF(ICX.LT.NCOLXEND) THEN
          ABUNDTOP(ICXLOCALE+1:ICXLOCALE+2)=' '
          ABUNDBOT(ICXLOCALE+1:ICXLOCALE+2)=' '
         ELSE
          ABUNDTOP(ICXLOCALE+1:NXSTRING)=' '
          ABUNDBOT(ICXLOCALE+1:NXSTRING)=' '
         ENDIF
         
 28     CONTINUE
        
        WRITE(55,33) ICY,ABUNDTOP(1:NXSTRING)
        WRITE(55,34)     ABUNDBOT(1:NXSTRING)
 29    CONTINUE
 30   CONTINUE
      
      WRITE (55,202)
      WRITE (55,*)
      WRITE (55,203) (ASTRSK(I),I=1,11)
      WRITE (55,205) (ASTRSK(I),I=1,2)
      IF(IEDITLOG.EQ.0) THEN
       WRITE (55,206) (ASTRSK(I),I=1,2)
       WRITE (55,208) (ASTRSK(I),I=1,2)
      ELSEIF(IEDITLOG.EQ.1)THEN
       WRITE (55,207) (ASTRSK(I),I=1,2)
       WRITE (55,209) (ASTRSK(I),I=1,2)
      ENDIF
      WRITE (55,205) (ASTRSK(I),I=1,2)
      WRITE (55,203) (ASTRSK(I),I=1,11)

      IEDITCNT=0
 35   CONTINUE
      IF(IEDITCNT.EQ.0) THEN
       IF(IEDITLOG.EQ.0) THEN
        WRITE (55,622)
       ELSEIF(IEDITLOG.EQ.1)THEN
        WRITE (55,722)
       ELSEIF(IEDITLOG.EQ.2)THEN
        WRITE (55,724)
       ENDIF
      ELSE
       IF(IEDITLOG.EQ.0) THEN
        WRITE (55,623)
       ELSEIF(IEDITLOG.EQ.1)THEN
        WRITE (55,723)
       ELSEIF(IEDITLOG.EQ.2)THEN
        WRITE (55,725)
       ENDIF
      ENDIF
      NZAX = IZCOLE-IZCOLS+1
      IF(NZAX.EQ.1)    THEN
       WRITE(55,9193)
       WRITE(55,9195)
      ELSEIF(NZAX.EQ.2)THEN
       WRITE(55,9293)
       WRITE(55,9295)
      ELSEIF(NZAX.EQ.3)THEN
       WRITE(55,9393)
       WRITE(55,9395)
      ELSEIF(NZAX.EQ.4)THEN
       WRITE(55,9493)
       WRITE(55,9495)
      ELSEIF(NZAX.GE.5)THEN
       WRITE(55,9993)
       WRITE(55,9995)
      ENDIF
      
      IF(IEDITCNT.EQ.0) THEN
       IF(IEDITLOG.EQ.0) THEN
        WRITE(55,1393)(Z(IZ),AXIALTOP(IZ),IZ=IZCOLS,IZCOLE)
	ndum=izcole-izcols+1
	if(mod(ndum,2).eq.0)then
	 nhalf=ndum/2
	elseif(mod(ndum,2).eq.1)then
	 nhalf=(ndum+1)/2
	endif
	nmid=izcols-1+nhalf
	sumaotop=0.0
	sumaobot=0.0
	do iz=izcols,izcole
	 if(mod(ndum,2).eq.0)then	 
	  if(iz.le.nmid)sumaobot=sumaobot+axialtop(iz)*dz(iz)
	  if(iz.gt.nmid)sumaotop=sumaotop+axialtop(iz)*dz(iz)
	 elseif(mod(ndum,2).eq.1)then	 
	  if(iz.lt.nmid)then
           sumaobot=sumaobot+axialtop(iz)*dz(iz)
	  elseif(iz.eq.nmid)then
           sumaobot=sumaobot+axialtop(iz)*dz(iz)/2.
           sumaotop=sumaotop+axialtop(iz)*dz(iz)/2.
	  elseif(iz.ge.nmid)then
           sumaotop=sumaotop+axialtop(iz)*dz(iz)
	  endif
	 endif
	enddo
	ao=(sumaotop-sumaobot)/(sumaotop+sumaobot)
	write(55,*)
	write(55,*)
	write(55,*)'Axial Offset (%) :',ao*100.
	write(55,*)
        
       ELSEIF(IEDITLOG.EQ.1)THEN
        WRITE(55,1395)(Z(IZ),AXIALTOP(IZ),IZ=IZCOLS,IZCOLE)
       ELSEIF(IEDITLOG.EQ.2)THEN
        WRITE(55,1396)(Z(IZ),AXIALTOP(IZ),IZ=IZCOLS,IZCOLE)
       ENDIF
      ELSE
       IF(IEDITLOG.EQ.0) THEN
        WRITE(55,1394)(Z(IZ),AXIALBOT(IZ),IZ=IZCOLS,IZCOLE)
       ELSEIF(IEDITLOG.EQ.1)THEN
        WRITE(55,1395)(Z(IZ),AXIALBOT(IZ),IZ=IZCOLS,IZCOLE)
       ELSEIF(IEDITLOG.EQ.2)THEN
        WRITE(55,1397)(Z(IZ),AXIALBOT(IZ),IZ=IZCOLS,IZCOLE)
       ENDIF
      ENDIF
      
      IF(IEDITCNT.EQ.0) THEN
       IEDITCNT=1
       GOTO 35
      ENDIF
C     
C.........START OF THE FORMAT STATEMENTS.......
C
 5    FORMAT(//' CORE AVERAGE CHARACTERISTICS'/)
 6    FORMAT(' RELATIVE POWER                 ',8X,
     &  '  = ',F12.4)
 7    FORMAT(' BURNUP                         ',8X,
     &  '  = ',F12.4)
 8    FORMAT(' COOLANT TEMPERATURE (DEG-F)    ',8X,
     &  '  = ',F12.4)
 9    FORMAT(' FUEL TEMPERATURE (DEG-F)       ',8X,
     &  '  = ',F12.4)
 11   FORMAT(//' MAXIMUM FUEL BUNDLE CHARACTERISTICS @ ',
     &  'BUNDLE (X,Y,Z) EDIT'/)
 12   FORMAT(' RELATIVE POWER              @ (',I2,',',I2,',',I2,
     &  ') = ',F12.4)
 13   FORMAT(' BURNUP                      @ (',I2,',',I2,',',I2,
     &  ') = ',F12.4)
 16   FORMAT(' COOLANT TEMPERATURE (DEG-F) @ (',I2,',',I2,',',I2,
     &  ') = ',F12.4)
 17   FORMAT(' FUEL TEMPERATURE (DEG-F)    @ (',I2,',',I2,',',I2,
     &  ') = ',F12.4)
 22   FORMAT(//T23,
     &  '(( ASSY RADIAL RELATIVE POWER AND BURNUP EDIT',' ))'//)
 23   FORMAT(//T23,
     &  '(( ASSY RADIAL COOLANT AND FUEL TEMPERATURE (DEG-F) EDIT',
     &  ' ))'//)
 33   FORMAT (/,T1,I2,A)
 34   FORMAT (  T1,2X,A)
 111  FORMAT(//' MAXIMUM FUEL NODE CHARACTERISTICS @ ',
     &  'NODE (X,Y,Z) EDIT'/)
 201  FORMAT (/T2,'Y|X',2X,8(I4,4X))
 202  FORMAT (/T63,'KEY')
 203  FORMAT (57X,11A1)
 205  FORMAT (57X,A1,9X,A1)
 206  FORMAT (57X,A1,' POWER   ',A1)
 208  FORMAT (57X,A1,' BURNUP  ',A1)
 207  FORMAT (57X,A1,' COOLANT ',A1)
 209  FORMAT (57X,A1,' FUEL    ',A1)
 622  FORMAT(//T23,
     &  '(( ASSY AXIAL RELATIVE POWER EDIT',' ))'//)
 623  FORMAT(//T23,
     &  '(( ASSY AXIAL BURNUP EDIT',' ))'//)
 722  FORMAT(//T23,
     &  '(( ASSY AXIAL COOLANT TEMPERATURE (DEG-F) EDIT',' ))'//)
 723  FORMAT(//T23,
     &  '(( ASSY AXIAL FUEL TEMPERATURE (DEG-F) EDIT',' ))'//)
 724  FORMAT(//T23,
     &  '(( ASSY AXIAL KINF EDIT',' ))'//)
 725  FORMAT(//T23,
     &  '(( ASSY AXIAL COOLANT DENSITY EDIT',' ))'//)
 1393 FORMAT ((/1X,5(F6.2,1X,F7.4,1X)))
 1394 FORMAT ((/1X,5(F6.2,1X,F7.0,1X)))
 1395 FORMAT ((/1X,5(F6.2,1X,F10.4,1X)))
 1396 FORMAT ((/1X,5(F6.2,1X,F7.4,1X)))
 1397 FORMAT ((/1X,5(F6.2,1X,F9.5,1X)))
 6966 FORMAT(5X,'BANK # : ',3X,8(I2,6X))
 8966 FORMAT(14X,8(F6.2,2X))
 9993 FORMAT (/1X,5('Z(IN.)',1X,' VALUE',2X))
 9493 FORMAT (/1X,4('Z(IN.)',1X,' VALUE',2X))
 9393 FORMAT (/1X,3('Z(IN.)',1X,' VALUE',2X))
 9293 FORMAT (/1X,2('Z(IN.)',1X,' VALUE',2X))
 9193 FORMAT (/1X,1('Z(IN.)',1X,' VALUE',2X))
 9995 FORMAT (1X,5('______',1X,'_______',1X))
 9495 FORMAT (1X,4('______',1X,'_______',1X))
 9395 FORMAT (1X,3('______',1X,'_______',1X))
 9295 FORMAT (1X,2('______',1X,'_______',1X))
 9195 FORMAT (1X,1('______',1X,'_______',1X))
      
 1000 RETURN
      END
      
