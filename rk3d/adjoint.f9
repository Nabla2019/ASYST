C23456789012345678901234567890123456789012345678901234567890123456789012
C
C                                                                      C
                           SUBROUTINE ADJOINT(
     &    BETAT,BETATLAM,VOLU,FNSWT,FNPPOT,SW,XHIP )
C                                                                      C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C
C     THIS SUBROUTINE CONTROLS THE CALCULATION OF THE ADJOINT FLUX
C
C
C12345678901234567890123456789012345678901234567890123456789012345678901
C
      include 'param.fcb'
      include 'tim.fcb'
      include 'restinp.fcb'
      include 'veloc.fcb'
      include 'thermk.fcb'
      include 'thermo.fcb'
      include 'xeopt.fcb'
      include 'che.fcb'
      include 'cntl.fcb'
      include 'geom.fcb'
      include 'perttr.fcb'
      include 'nonfue.fcb'
      include 'power.fcb'
      include 'burn.fcb'
      include 'soln2.fcb'
      include 'start.fcb'
      include 'xsec1.fcb'
      include 'crit.fcb'
      include 'bypass.fcb'
      include 'numsurf.fcb'
      include 'varlen.fcb'
      include 'array.fcb'
      include 'depletepc.fcb'
      include 'nemcnt.fcb'
      include 'opti.fcb'
 
      DIMENSION
     &   BETATLAM(NXYL,NZ,*)              ,BETAT(NXYL,*)          ,
     &   SW(NXYL,NZ,*)                    ,VOLU(NXYL,*)           ,
     &   FNSWT(NXYL,*)                    ,FNPPOT(NXYL,*)         ,
     &   XHIP(NXYL,NZ,*)
 
 
       IWFLAG=2
       TXSFDST=0.0
       TSCALST=0.0
       TTHST=0.0
       TLSST=0.0
       ACONV='N'

       IF(IMETHOD.EQ.2) THEN
         CALL XSFDADJ(
     &     A(LDCLN),A(LDLNN),A(LDCWN),A(LDCNVN),A(LDCNUN),A(LDLLN),
     &     A(LDLWN),A(LDCNN),A(LDLNVN),A(LDLNUN),A(LRIVELON),
     &     A(LDXN),A(LDYN),A(LDZN),A(LVOLUN),A(LAWXN),
     &     A(LAWUN),A(LAWVN),A(LAWZN),A(LAWYN),A(LBWYN),A(LBWXN),
     &     A(LBWUN),A(LBWVN),A(LBWZN),A(LAQN),AINT(LNBCN),
     &     AINT(LNXSTARTN),AINT(LNXENDN),AINT(LNDNUMN),A(LTXTN) )
       ENDIF
       
C !vmq no weilandt       IF(IOUTER.EQ.2) THEN
C !vmq no weilandt         WSCALE=0.0
C !vmq no weilandt         CALL WSHIFT(A(LTNFN),
C !vmq no weilandt     &     A(LSWN),A(LFNSWTN),A(LFNSHIFTN),A(LBETATN),
C !vmq no weilandt     &     A(LXHIPN),A(LBETATLAMN),A(LFILAMDT1N))
C !vmq no weilandt       ENDIF
  
       IF(IMETHOD.EQ.2.OR.IOUTER.EQ.2) THEN
         CALL TRIDIA0( A(LRBWXVN),A(LBBWXVN),
     &     A(LRBFVN),A(LBBFVN),A(LRQWVN),A(LBQWVN),
     &     A(LYBWXVN),A(LYBFVN),A(LYQWVN),A(LAWZN),
     &     A(LBWZN),A(LAQN),AINT(LIRPLANN),AINT(LIBPLANN),
     &     AINT(LIYPLANN),A(LBFN),A(LQWN),
     &     A(LFNSHIFTN) )
         CALL GTIME(TIN)	  
         CALL LSORB0(A(LSSWN),AINT(LITRRN),A(LWOMN),
     &                A(LWOMON),A(LFLUXN) )
         CALL GTIME(TOUT)
         TLSST=TLSST+(TOUT-TIN)
       ENDIF
 
       SN = 0.
       DO 468 IZ=1,NZ
         DO 468 IXY=1,NXYL
           FNSWT(IXY,IZ) = 0.0
           DO 467 IG=1,NG
             FNSWT(IXY,IZ) = FNSWT(IXY,IZ)
     *           +     ( (1.0 - BETAT(IXY,IZ))*XHIP(IXY,IZ,IG)
     *           +     BETATLAM(IXY,IZ,IG) )*SW(IXY,IZ,IG)
 467       CONTINUE
           FNSWT(IXY,IZ)=FNSWT(IXY,IZ)*VOLU(IXY,IZ)
           SN=SN+FNSWT(IXY,IZ)
 468   CONTINUE 
  
       FISLNM=SN
       FISLNN=FISLNM
C
C---- INITIALIZE THE STEADY-STATE OUTER ITERATION INDEX
C
      KSST = 0
 
      DO 90 IZ=1,NZ
        DO 90 IXY=1,NXYL
          FNPPOT(IXY,IZ)=FNSWT(IXY,IZ)
 90   CONTINUE
 
      CALL OUTINADJ(
     &  A(LBETATN),A(LBETATLAMN),A(LAVBUN),A(LVOLUN),A(LFNSWTN),
     &  A(LFNPPOTN),A(LFNPPPOTN),A(LSWN),A(LTNFN),A(LSIGDSNN),
     &  A(LXHIPN),A(LSCWN),A(LSCATN),AINT(LITRRN),A(LWOMN),
     &  A(LWOMOLDN),A(LFNSHIFTN),
     &  A(LSWPPOTN) )
 
      ICRT = 1
      NADJ=1
C !vmq      IF(CRTON.EQ.'Y')
C !vmq     *         CALL OUTPCRT(NADJ,ICRT,A(LAVBUN),A(LZBN),A(LZBTRN) )
 
      RETURN
      END
 
