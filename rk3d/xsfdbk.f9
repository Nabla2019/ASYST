      SUBROUTINE XSFDBK(
     &  DCL,DLN,DCW,DCNV,DCNU,DLL,DLW,DCN,DLNV,DLNU,RIVELO,
     &  RNURO,RNURI,
     &  B2,DOPL,RHOW,DXE,DSM,DX,DY,DZ,VOLU,AWX,AWU,AWV,AWZ,AWY,
     &  BWY,BWX,BWU,BWV,BWZ,AQ,TCD,TCA,TCR,TNF,TPF,TXT,SIGDSN,
     &  BETA,BETAMI,XHIP,XHIPMI,
     &  BETAT,XHIDMI,BETATLAM,FU5,FU8,FPU9,FPU0,FPU1,FPU2,SW,
     &  DU38,DPU39,DPU40,DPU41,DU35,DPU42,RNUU5,RNUU8,RNUP9,RNUP0,
     &  RNUP1,RNUP2,NCOLXY,NCOLZ,NBC,NXSTART,NXEND,NDNUM,NMAX,
     &  XXEAB,XSMAB,RNU,TCOLC,FRACT,RHOWREF,TCOLREF,GI,GX,GP,GINMI,
     &  GXNMI,GPNMI, FU5PYRO,FU8PYRO,FPU9PYRO,FPU0PYRO,FPU1PYRO,
     &  FPU2PYRO,FU5PYRI,FU8PYRI,FPU9PYRI,FPU0PYRI,FPU1PYRI,
     &  FPU2PYRI,LTHSHORT,TTCOLIN,FU6,DU36,RNUU6,FU6PYRO,FU6PYRI,
     &  FU4,DU34,RNUU4,FU4PYRO,FU4PYRI,RHOWMREF,
     &  REFB,DAM41,FAM1,FAM1PYRO,FAM1PYRI,RNUA1,
     &  ALAMDAT,ALAMDAMI,BFACT,TXTO,TNFO,TPFO)
C     
C     THIS SUBROUTINE DETERMINES THE MACROSCOPIC AND MICROSCOPIC
C     CROSS-SECTIONS AND OTHER NEUTRONIC NODE VALUES AND USES THEM
C     IN DETERMINING THE COEFFICIENT MATRIX
C     
      use     rkinc, only:ppmrk3d  !vmq
!
      include 'param.fcb'
      include 'buckl.fcb'
      include 'crod.fcb'
      include 'xsec1.fcb'
      include 'xsec2.fcb'
      include 'thermo.fcb'
      include 'geom.fcb'
      include 'soln2.fcb'
      include 'bcs.fcb'
      include 'nonfue.fcb'
      include 'cntl.fcb'
      include 'burn.fcb'
      include 'hexdim.fcb'
      include 'numsurf.fcb'
      include 'convfact.fcb'
      include 'fpxs.fcb'
      include 'varlen.fcb'
      include 'varlens.fcb'
      include 'xspolycom.fcb'
      include 'nterm.fcb'
      include 'array.fcb'
      include 'th_cof.fcb'
      include 'thcoef.fcb'
      include 'xeopt.fcb'
      include 'veloc.fcb'
      include 'bcshex.fcb'
      include 'che.fcb'
      include 'phiavgc.fcb'
      
      DIMENSION
     &  NXSTART(*)                            ,NXEND(*)             ,
     &  NMAX(*)                               ,NDNUM(-1:NX+2,0:*)   ,
     &  NCOLXY(NXYLMAX,*)                     ,NBC(*)               ,
     &  NCOLZ(*)                              ,DU38(NXYL,*)         ,
     &  DPU39(NXYL,*)                         ,DPU40(NXYL,*)        ,
     &  DPU41(NXYL,*)                         ,DU35(NXYL,*)         ,
     &  DPU42(NXYL,*),DAM41(NXYL,*),DU36(NXYL,*),
     &  FU5(NXYL,NZ,*)                        ,FU8(NXYL,NZ,*)       ,
     &  FU6(NXYL,NZ,*)                        ,DU34(NXYL,*)         ,
     &  FPU9(NXYL,NZ,*)                       ,FPU0(NXYL,NZ,*)      ,
     &  FPU1(NXYL,NZ,*),FPU2(NXYL,NZ,*),FAM1(NXYL,NZ,*),
     &  SW(NXYL,NZ,*)                         ,FRACT(NXYL,*)        ,
     &  BETA(NXYL,NZ,*),ALAMDAT(NXYL,NZ,*),BFACT(NXYL,NZ,*),
     &  BETAMI(NISOT,*),ALAMDAMI(NISOT,*),
     &  BETAT(NXYL,*)                         ,XHIDMI(NG,*)         ,
     &  TTCOLIN(*)           ,FU4(NXYL,NZ,*)       ,
     &  BETATLAM(NXYL,NZ,*),
     &  DX(0:*)                               ,TCOLC(NXYL,*)        ,
     &  DY(0:*)                               ,DZ(0:*)              ,
     &  VOLU(NXYL,*)                          ,DXE(NXYL,*)          ,
     &  DSM(NXYL,*)                           ,DCL(NXYL,NZ+1,*)     ,
     &  DLN(NXYT,NZ,*)                        ,RIVELO(NXYL,NZ,*)    ,
     &  DCW(NXYT,NZ,*)                        ,DCNV(NXYT,NZ,*)      ,
     &  DCNU(NXYT,NZ,*)                       ,DLL(NXYL,NZ+1,*)     ,
     &  DLW(NXYT,NZ,*)                        ,DCN(NXYT,NZ,*)       ,
     &  DLNV(NXYT,NZ,*)                       ,DLNU(NXYT,NZ,*)      ,
     &  RNU(NXYL,NZ,*)       ,
     &  XXEAB(NXYL,NZ,*)                      ,XSMAB(NXYL,NZ,*)     ,
     &  B2(NXYL,NZ,*)                         ,
     &  RNURO(NXYL,NZ,NG,*)                   ,RNURI(NXYL,NZ,NG,*)  ,
     &  DOPL(NXYL,*)                          ,RHOW(NXYL,*)         ,
     &  AWX(NXYL,NZ,*)                        ,AWU(NXYL,NZ,*)       ,
     &  AWV(NXYL,NZ,*)                        ,AWZ(NXYL,NZ,*)       ,
     &  AWY(NXYL,NZ,*)                        ,BWY(NXYL,NZ,*)       ,
     &  BWX(NXYL,NZ,*)                        ,BWU(NXYL,NZ,*)       ,
     &  BWV(NXYL,NZ,*)                        ,BWZ(NXYL,NZ,*)       ,
     &  AQ(NXYL,NZ,*)                         ,SIGDSN(NXYL,NZ,NG,*) ,
     &  TCD(NXYL,NZ,*)                        ,TCA(NXYL,NZ,*)       ,
     &  TCR(NXYL,NZ,*),TNF(NXYL,NZ,*),TNFO(NXYL,NZ,NG),
     &  TPF(NXYL,NZ,*),TPFO(NXYL,NZ,NG),
     $  TXT(NXYL,NZ,*),TXTO(NXYL,NZ,NG),
     &  RNUU4(*)                              ,RNUU5(*)             ,
     &  RNUU8(*)                              ,RNUU6(*)             ,
     &  RNUP9(*)                              ,RNUP0(*)             ,
     &  RNUP1(*),RNUP2(*),RNUA1(*),
     &  XHIP(NXYL,NZ,*),XHIPMI(NISOT+1,*),
     &  RHOWREF(*),TCOLREF(*),REFB(*),
     &  GX(NXYL,NZ,*)                         ,GP(NXYL,NZ,*)        ,
     &  GI(NXYL,NZ,*),GINMI(*),FAM1PYRI(NXYL,NZ,NG,*),
     &  GXNMI(*),GPNMI(*),FAM1PYRO(NXYL,NZ,NG,*),
     &  FU4PYRO(NXYL,NZ,NG,*)                 ,FU5PYRO(NXYL,NZ,NG,*),
     &  FU6PYRO(NXYL,NZ,NG,*)                 ,FU4PYRI(NXYL,NZ,NG,*),
     &  FU8PYRO(NXYL,NZ,NG,*)                ,FPU9PYRO(NXYL,NZ,NG,*),
     &  FPU0PYRO(NXYL,NZ,NG,*)               ,FPU1PYRO(NXYL,NZ,NG,*),
     &  FPU2PYRO(NXYL,NZ,NG,*),FU5PYRI(NXYL,NZ,NG,*) ,
     &  FU8PYRI(NXYL,NZ,NG,*)                ,FPU9PYRI(NXYL,NZ,NG,*),
     &  FPU0PYRI(NXYL,NZ,NG,*)               ,FPU1PYRI(NXYL,NZ,NG,*),
     &  FPU2PYRI(NXYL,NZ,NG,*)               ,FU6PYRI(NXYL,NZ,NG,*) ,
     &  RHOWMREF(*)
      

      IF(NG.EQ.2.AND.NSHAP.EQ.'CART')THEN
      SUMFLUX1=0.0
      SUMFLUX2=0.0
      SUMVOL=0.0
      DO IZ=1,NZ
       DO IY=1,NY
        DO IX=NXSTART(IY),NXEND(IY),NXSKIP
         IXY=NDNUM(IX,IY)
         I1=NCOLXY(IXY,NCOLZ(IZ))
         IF(I1.GT.NFUEXY) THEN
          SUMFLUX1=SUMFLUX1+SW(IXY,IZ,1)*VOLU(IXY,IZ)
          SUMFLUX2=SUMFLUX2+SW(IXY,IZ,2)*VOLU(IXY,IZ)
          SUMVOL  =SUMVOL  +VOLU(IXY,IZ)
         ENDIF
        ENDDO
       ENDDO
      ENDDO
      PHIAVG(1)=SUMFLUX1/SUMVOL
      PHIAVG(2)=SUMFLUX2/SUMVOL
      ENDIF

      AVOGADRO = 0.602322
C      RHOWR= PROPPOLY(NPOLRHOWC,COF_RHOWC,UCOLIN, !vmq
C     &  SC0_RHOWC,SC1_RHOWC) ! vmq
      
C     
C---- X-SECTION UPDATE
C     
      
C     
C---- COMPUTE COOLANT DENSITY CORRECTION COEFFICIENTS
C---- AND SOLUBLE POISON CORRECTION COEFFICIENTS
C     
      
C !vmq no micro       IF (IMICRO.EQ.'Y') THEN
C !vmq no micro        DO 330 IXY=1,NXYL
C !vmq no micro         DO 230 IZ=1,NZ
C !vmq no micro          I=NCOLXY(IXY,NCOLZ(IZ))
C !vmq no micro          NMX=NMAX(I)
C !vmq no micro          IF(I.LE.NFUEXY) GOTO 230
C !vmq no micro          IF(IZ.EQ.1) THEN
C !vmq no micro            RHOWBOT=RHOW(IXY,IZ)
C !vmq no micro C          IF(ITRANSIT.EQ.0) THEN   !vmq
C !vmq no micro C           RHOWBOT=RHOWR !vmq
C !vmq no micro C          ELSE !vmq
C !vmq no micro C           UCOLBOT=PROPPOLY(NPOLUCOL,COF_UCOL,TTCOLIN(IXY), !vmq
C !vmq no micro C     &       SC0_UCOL,SC1_UCOL) !vmq 
C !vmq no micro C           RHOWBOT=PROPPOLY(NPOLRHOWC,COF_RHOWC,UCOLBOT, !vmq
C !vmq no micro C     &       SC0_RHOWC,SC1_RHOWC) !vmq
C !vmq no micro C          ENDIF !vmq
C !vmq no micro          ELSE
C !vmq no micro           RHOWBOT=RHOW(IXY,IZ-1)
C !vmq no micro          ENDIF
C !vmq no micro          RHOWAVG=(RHOW(IXY,IZ)+RHOWBOT)*0.5
C !vmq no micro          DRHOW=RHOWAVG-RHOWREF(I)
C !vmq no micro          
C !vmq no micro          IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
C !vmq no micro           IF(NSP.EQ.'C') THEN
C !vmq no micro C     NEAERA  REMOVE LINES: START            
C !vmq no micro            IF(ANFDBK.EQ.'N') THEN
C !vmq no micro C     NEAERA  REMOVE LINES: END            
C !vmq no micro             RHOWPPM=RHOWREF(I)
C !vmq no micro C     NEAERA  REMOVE LINES: START            
C !vmq no micro            ELSE
C !vmq no micro             RHOWPPM=RHOWAVG
C !vmq no micro            ENDIF
C !vmq no micro C     NEAERA  REMOVE LINES: END            
C !vmq no micro           ELSEIF(NSP.EQ.'M') THEN
C !vmq no micro            IF(ANFDBK.EQ.'N') THEN
C !vmq no micro             RHOWPPM=RHOWMREF(I)
C !vmq no micro            ELSE
C !vmq no micro C     MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
C !vmq no micro            ENDIF
C !vmq no micro           ENDIF
C !vmq no micro           DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
C !vmq no micro      &      *(ppmrk3d(IXY,IZ)-REFB(I))*RHOWPPM
C !vmq no micro          ELSEIF(NSP.EQ.'A') THEN
C !vmq no micro C     MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,IZ)
C !vmq no micro          ENDIF
C !vmq no micro          
C !vmq no micro          DTCOLC=TCOLC(IXY,IZ)-TCOLREF(I)
C !vmq no micro          
C !vmq no micro          IF(NMOD.EQ.'N') THEN
C !vmq no micro           DRHOWM=0.0
C !vmq no micro           DTMODC=0.0
C !vmq no micro          ELSE
C !vmq no micro C     MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C !vmq no micro C     MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
C !vmq no micro          ENDIF
C !vmq no micro          
C !vmq no micro          DSQTAVF=DOPL(IXY,IZ)
C !vmq no micro          FRACTRO=1.-FRACT(IXY,IZ)
C !vmq no micro          FRACTRI=FRACT(IXY,IZ)
C !vmq no micro          
C !vmq no micro          DO 403 IG= 1,NG
C !vmq no micro           FRACT1=1.0
C !vmq no micro           NGTEMP=1
C !vmq no micro           IGP=1
C !vmq no micro           FU4(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FU4PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FU4PYRI)
C !vmq no micro           FU5(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FU5PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FU5PYRI)
C !vmq no micro           FU6(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FU6PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FU6PYRI)
C !vmq no micro           FU8(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FU8PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FU8PYRI)
C !vmq no micro           FPU9(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FPU9PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FPU9PYRI)
C !vmq no micro           FPU0(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FPU0PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FPU0PYRI)
C !vmq no micro           FPU1(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FPU1PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FPU1PYRI)
C !vmq no micro           FPU2(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FPU2PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FPU2PYRI)
C !vmq no micro           FAM1(IXY,IZ,IG) =
C !vmq no micro      &      XSECPOLY(FRACTRO,NTERMMICRO,IXSMICRO,FAM1PYRO)
C !vmq no micro      &      + XSECPOLY(FRACTRI,NTERMMICRI,IXSMICRI,FAM1PYRI)
C !vmq no micro  403     CONTINUE
C !vmq no micro          
C !vmq no micro          DO 232 J=1,NPREC
C !vmq no micro           DSIGBT1 = 0.0
C !vmq no micro           DSIGBT2 = 0.0
C !vmq no micro           DSIGBTLAM=0.0
C !vmq no micro           DO 231 IG=1,NG
C !vmq no micro            DSIGBT1=DSIGBT1+
C !vmq no micro      *       (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)*BETAMI(1,J)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)*BETAMI(2,J)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)*BETAMI(3,J)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)*BETAMI(4,J)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)*BETAMI(5,J)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)*BETAMI(6,J)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)*BETAMI(7,J)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)*BETAMI(8,J))
C !vmq no micro      *       *(SW(IXY,IZ,IG))
C !vmq no micro            
C !vmq no micro            DSIGBTLAM=DSIGBTLAM+
C !vmq no micro      *       (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)*BETAMI(1,J)
C !vmq no micro      $       *ALAMDAMI(1,J)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)*BETAMI(2,J)
C !vmq no micro      $       *ALAMDAMI(2,J)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)*BETAMI(3,J)
C !vmq no micro      $       *ALAMDAMI(3,J)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)*BETAMI(4,J)
C !vmq no micro      $       *ALAMDAMI(4,J)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)*BETAMI(5,J)
C !vmq no micro      $       *ALAMDAMI(5,J)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)*BETAMI(6,J)
C !vmq no micro      $       *ALAMDAMI(6,J)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)*BETAMI(7,J)
C !vmq no micro      $       *ALAMDAMI(7,J)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)*BETAMI(8,J)
C !vmq no micro      $       *ALAMDAMI(8,J)
C !vmq no micro      *       )*(SW(IXY,IZ,IG))
C !vmq no micro            
C !vmq no micro            DSIGBT2=DSIGBT2+
C !vmq no micro      *       (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)
C !vmq no micro      *       +DAM41(IXY,IZ)*FAM1(IXY,IZ,IG)*RNUA1(IG))
C !vmq no micro      *       *(SW(IXY,IZ,IG))
C !vmq no micro            
C !vmq no micro  231      CONTINUE
C !vmq no micro           
C !vmq no micro           BETA(IXY,IZ,J) = DSIGBT1/DSIGBT2
C !vmq no micro           ALAMDAT(IXY,IZ,J)=DSIGBTLAM/(BETA(IXY,IZ,J)*DSIGBT2)
C !vmq no micro C     B_EFF
C !vmq no micro           BETA(IXY,IZ,J)=BETA(IXY,IZ,J)*BFACT(IXY,IZ,J)
C !vmq no micro C     
C !vmq no micro  232     CONTINUE
C !vmq no micro          
C !vmq no micro          DO 260 IG=1,NG
C !vmq no micro           DSIG1 = 0.0
C !vmq no micro           DSIG2 = 0.0
C !vmq no micro           DO 259 IGP=1,NG
C !vmq no micro            
C !vmq no micro            DSIG1=DSIG1+
C !vmq no micro      *       (DU34(IXY,IZ)*FU4(IXY,IZ,IGP)*RNUU4(IGP)*XHIPMI(1,IG)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5(IXY,IZ,IGP)*RNUU5(IGP)*XHIPMI(2,IG)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6(IXY,IZ,IGP)*RNUU6(IGP)*XHIPMI(3,IG)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8(IXY,IZ,IGP)*RNUU8(IGP)*XHIPMI(4,IG)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IGP)*RNUP9(IGP)*XHIPMI(5,IG)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IGP)*RNUP0(IGP)*XHIPMI(6,IG)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IGP)*RNUP1(IGP)*XHIPMI(7,IG)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IGP)*RNUP2(IGP)*XHIPMI(8,IG)
C !vmq no micro      *       +DAM41(IXY,IZ)*FAM1(IXY,IZ,IGP)*RNUA1(IGP)*XHIPMI(9,IG))
C !vmq no micro      *       *SW(IXY,IZ,IGP)
C !vmq no micro            
C !vmq no micro            DSIG2=DSIG2+
C !vmq no micro      *       (DU34(IXY,IZ)*FU4(IXY,IZ,IGP)*RNUU4(IGP)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5(IXY,IZ,IGP)*RNUU5(IGP)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6(IXY,IZ,IGP)*RNUU6(IGP)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8(IXY,IZ,IGP)*RNUU8(IGP)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9(IXY,IZ,IGP)*RNUP9(IGP)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0(IXY,IZ,IGP)*RNUP0(IGP)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1(IXY,IZ,IGP)*RNUP1(IGP)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2(IXY,IZ,IGP)*RNUP2(IGP)
C !vmq no micro      *       +DAM41(IXY,IZ)*FAM1(IXY,IZ,IGP)*RNUA1(IGP))
C !vmq no micro      *       *SW(IXY,IZ,IGP)
C !vmq no micro            
C !vmq no micro  259      CONTINUE
C !vmq no micro           
C !vmq no micro           XHIP(IXY,IZ,IG)  =  DSIG1/DSIG2
C !vmq no micro           
C !vmq no micro  260     CONTINUE
C !vmq no micro          
C !vmq no micro          DO 251 IG=1,NG
C !vmq no micro           
C !vmq no micro           DSIG0=
C !vmq no micro      *      (DU34(IXY,IZ)*FU4(IXY,IZ,IG)
C !vmq no micro      *      +DU35(IXY,IZ)*FU5(IXY,IZ,IG)
C !vmq no micro      *      +DU36(IXY,IZ)*FU6(IXY,IZ,IG)
C !vmq no micro      *      +DU38(IXY,IZ)*FU8(IXY,IZ,IG)
C !vmq no micro      *      +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)
C !vmq no micro      *      +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)
C !vmq no micro      *      +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)
C !vmq no micro      *      +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)
C !vmq no micro      *      +DAM41(IXY,IZ)*FAM1(IXY,IZ,IG))
C !vmq no micro           
C !vmq no micro           DO 223 ITERM=1,NTERMMACTRO
C !vmq no micro            DO 221 ITERMMIC=1,NTERMMICRO
C !vmq no micro             IF(IXSMACTRO(ITERM).EQ.IXSMICRO(ITERMMIC)) GOTO 222
C !vmq no micro  221       CONTINUE
C !vmq no micro            GOTO 223
C !vmq no micro  222       CONTINUE
C !vmq no micro            
C !vmq no micro            DSIG1=
C !vmq no micro      *       (DU34(IXY,IZ)*FU4PYRO(IXY,IZ,IG,ITERMMIC)*RNUU4(IG)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5PYRO(IXY,IZ,IG,ITERMMIC)*RNUU5(IG)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6PYRO(IXY,IZ,IG,ITERMMIC)*RNUU6(IG)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8PYRO(IXY,IZ,IG,ITERMMIC)*RNUU8(IG)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9PYRO(IXY,IZ,IG,ITERMMIC)*RNUP9(IG)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0PYRO(IXY,IZ,IG,ITERMMIC)*RNUP0(IG)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1PYRO(IXY,IZ,IG,ITERMMIC)*RNUP1(IG)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2PYRO(IXY,IZ,IG,ITERMMIC)*RNUP2(IG)
C !vmq no micro      *       +DAM41(IXY,IZ)*FAM1PYRO(IXY,IZ,IG,ITERMMIC)*RNUA1(IG))
C !vmq no micro            
C !vmq no micro            RNURO(IXY,IZ,IG,ITERM) = DSIG1/DSIG0
C !vmq no micro            
C !vmq no micro  223      CONTINUE
C !vmq no micro           
C !vmq no micro           DO 2223 ITERM=1,NTERMMACTRI
C !vmq no micro            DO 2221 ITERMMIC=1,NTERMMICRI
C !vmq no micro             IF(IXSMACTRI(ITERM).EQ.IXSMICRI(ITERMMIC)) GOTO 2222
C !vmq no micro  2221      CONTINUE
C !vmq no micro            GOTO 2223
C !vmq no micro  2222      CONTINUE
C !vmq no micro            
C !vmq no micro            DSIG1=
C !vmq no micro      *       (DU34(IXY,IZ)*FU4PYRI(IXY,IZ,IG,ITERMMIC)*RNUU4(IG)
C !vmq no micro      *       +DU35(IXY,IZ)*FU5PYRI(IXY,IZ,IG,ITERMMIC)*RNUU5(IG)
C !vmq no micro      *       +DU36(IXY,IZ)*FU6PYRI(IXY,IZ,IG,ITERMMIC)*RNUU6(IG)
C !vmq no micro      *       +DU38(IXY,IZ)*FU8PYRI(IXY,IZ,IG,ITERMMIC)*RNUU8(IG)
C !vmq no micro      *       +DPU39(IXY,IZ)*FPU9PYRI(IXY,IZ,IG,ITERMMIC)*RNUP9(IG)
C !vmq no micro      *       +DPU40(IXY,IZ)*FPU0PYRI(IXY,IZ,IG,ITERMMIC)*RNUP0(IG)
C !vmq no micro      *       +DPU41(IXY,IZ)*FPU1PYRI(IXY,IZ,IG,ITERMMIC)*RNUP1(IG)
C !vmq no micro      *       +DPU42(IXY,IZ)*FPU2PYRI(IXY,IZ,IG,ITERMMIC)*RNUP2(IG)
C !vmq no micro      *       +DAM41(IXY,IZ)*FAM1PYRI(IXY,IZ,IG,ITERMMIC)*RNUA1(IG))
C !vmq no micro            
C !vmq no micro            RNURI(IXY,IZ,IG,ITERM) = DSIG1/DSIG0
C !vmq no micro            
C !vmq no micro  2223     CONTINUE
C !vmq no micro           
C !vmq no micro  251     CONTINUE
C !vmq no micro          
C !vmq no micro          IF (IXE(IBU).EQ.1.OR.IXE(IBU).EQ.6) GOTO 230
C !vmq no micro          
C !vmq no micro          DO 241 IG=1,NG
C !vmq no micro           
C !vmq no micro           DSIGBT0=
C !vmq no micro      *      (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)
C !vmq no micro      *      +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)
C !vmq no micro      *      +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)
C !vmq no micro      *      +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)
C !vmq no micro      *      +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)
C !vmq no micro      *      +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)
C !vmq no micro      *      +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)
C !vmq no micro      *      +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)
C !vmq no micro      *      +DAM41(IXY,IZ)*FAM1(IXY,IZ,IG)*RNUA1(IG))
C !vmq no micro           
C !vmq no micro           DSIGBT1=
C !vmq no micro      *      (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)*GXNMI(1)
C !vmq no micro      *      +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)*GXNMI(2)
C !vmq no micro      *      +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)*GXNMI(3)
C !vmq no micro      *      +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)*GXNMI(4)
C !vmq no micro      *      +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)*GXNMI(5)
C !vmq no micro      *      +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)*GXNMI(6)
C !vmq no micro      *      +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)*GXNMI(7)
C !vmq no micro      *      +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)*GXNMI(8))
C !vmq no micro           
C !vmq no micro           GX(IXY,IZ,IG)  =  DSIGBT1/DSIGBT0
C !vmq no micro           
C !vmq no micro           DSIGBT2=
C !vmq no micro      *      (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)*GINMI(1)
C !vmq no micro      *      +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)*GINMI(2)
C !vmq no micro      *      +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)*GINMI(3)
C !vmq no micro      *      +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)*GINMI(4)
C !vmq no micro      *      +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)*GINMI(5)
C !vmq no micro      *      +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)*GINMI(6)
C !vmq no micro      *      +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)*GINMI(7)
C !vmq no micro      *      +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)*GINMI(8))
C !vmq no micro           
C !vmq no micro           GI(IXY,IZ,IG)  =  DSIGBT2/DSIGBT0
C !vmq no micro           
C !vmq no micro           DSIGBT3=
C !vmq no micro      *      (DU34(IXY,IZ)*FU4(IXY,IZ,IG)*RNUU4(IG)*GPNMI(1)
C !vmq no micro      *      +DU35(IXY,IZ)*FU5(IXY,IZ,IG)*RNUU5(IG)*GPNMI(2)
C !vmq no micro      *      +DU36(IXY,IZ)*FU6(IXY,IZ,IG)*RNUU6(IG)*GPNMI(3)
C !vmq no micro      *      +DU38(IXY,IZ)*FU8(IXY,IZ,IG)*RNUU8(IG)*GPNMI(4)
C !vmq no micro      *      +DPU39(IXY,IZ)*FPU9(IXY,IZ,IG)*RNUP9(IG)*GPNMI(5)
C !vmq no micro      *      +DPU40(IXY,IZ)*FPU0(IXY,IZ,IG)*RNUP0(IG)*GPNMI(6)
C !vmq no micro      *      +DPU41(IXY,IZ)*FPU1(IXY,IZ,IG)*RNUP1(IG)*GPNMI(7)
C !vmq no micro      *      +DPU42(IXY,IZ)*FPU2(IXY,IZ,IG)*RNUP2(IG)*GPNMI(8))
C !vmq no micro           
C !vmq no micro           GP(IXY,IZ,IG)  =  DSIGBT3/DSIGBT0
C !vmq no micro           
C !vmq no micro  241     CONTINUE
C !vmq no micro          
C !vmq no micro  230    CONTINUE
C !vmq no micro  330   CONTINUE
C !vmq no micro       ENDIF
C     
C---- END OF X-SECTION UPDATE - BEGINNING OF INITIAL
C     
      DO 1980 IZ=1,NZ
       DO 1981 IXY=1,NXYL
        I=NCOLXY(IXY,NCOLZ(IZ))
        IF(I.LE.NFUEXY) GOTO 1981
        DO 1984 IG=1,NG
         BETATLAM(IXY,IZ,IG) = 0.00
         DO 1985 I=1,NPREC
          BETATLAM(IXY,IZ,IG) = BETATLAM(IXY,IZ,IG) + BETA(IXY,IZ,I)
     &      *XHIDMI(IG,I)
 1985    CONTINUE
 1984   CONTINUE
        BETAT(IXY,IZ)= 0.0
        DO 1986 I=1,NPREC
         BETAT(IXY,IZ) = BETAT(IXY,IZ) + BETA(IXY,IZ,I)
 1986   CONTINUE
 1981  CONTINUE
 1980 CONTINUE
      
C     
C---- COMPUTE COOLANT DENSITY CORRECTION COEFFICIENTS
C---- AND SOLUBLE POISON CORRECTION COEFFICIENTS
C     
      IF (IBURN.EQ.'Y') THEN !vmq
        IZ=1 !vmq
        DO 419 IXY=1,NXYL
         I=NCOLXY(IXY,NCOLZ(1))
         RHOWBOT=RHOW(IXY,1) !vmq
         RHOWAVG=(RHOW(IXY,1)+RHOWBOT)*0.5
       
         DRHOW=RHOWAVG-RHOWREF(I)
       
         IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
          IF(NSP.EQ.'C') THEN
C !vmq  always anfdbk          IF(ANFDBK.EQ.'N') THEN
C !vmq  always anfdbk           RHOWPPM=RHOWREF(I)
C !vmq  always anfdbk          ELSE
            RHOWPPM=RHOWAVG
C !vmq  always anfdbk          ENDIF
          ELSEIF(NSP.EQ.'M') THEN
C !vmq           IF(ANFDBK.EQ.'N') THEN
C !vmq            RHOWPPM=RHOWMREF(I)
C !vmq           ELSE
C      MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
C !vmq           ENDIF
          ENDIF
          DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
     &      *(PM-REFB(I))*RHOWPPM  !vmq
         ELSEIF(NSP.EQ.'A') THEN
C      MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,1)
         ENDIF
       
         DTCOLC=TCOLC(IXY,1)-TCOLREF(I)
       
         IF(NMOD.EQ.'N') THEN
          DRHOWM=0.0
          DTMODC=0.0
         ELSE
C      MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C      MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
         ENDIF
       
         DSQTAVF=DOPL(IXY,1)
         FRACTRO=1.-FRACT(IXY,1)
         FRACTRI=FRACT(IXY,1)
C      
C---   WARNING: CALLS TO XSECPOLY INVOLVE LOCAL VARIABLES PASSED
C---   THROUGH COMMON [include 'xspolycom.fcb']
C      
         DO 410 IG=1,NG
          NGTEMP=1
          IGP=1
          XT= XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LTRRON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LTRRIN))
          TCD(IXY,1,IG) = 1./(3.*XT)
          
          IF(I.GT.NFUEXY) THEN
           TNF(IXY,1,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNFRIN))
           
           TPF(IXY,1,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LPFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LPFRIN))
       
           RNU(IXY,1,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNURON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNURIN))
          ENDIF
          
          TCA(IXY,1,IG) =
     &      XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LCARON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LCARIN))
       
          TCR(IXY,1,IG)=
     &      XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCRRON))
     &      +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCRRIN))
          
          NGTEMP=NG-1
          DO 411 IGP = 1,NG-1
           SIGDSN(IXY,1,IG,IGP)=
     &       XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCSCATRON))
     &       +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCSCATRIN))
 411       CONTINUE
          NGTEMP=1
          IGP=1
          IF(MBUCKL.EQ.0) THEN
            BUCKLV=0.0
          ELSE
            BUCKLV=1.0
          ENDIF
          XXEAB(IXY,1,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXXEABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXXEABRIN)))
          XSMAB(IXY,1,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXSMABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXSMABRIN)))
          SB=TCA(IXY,1,IG)
     *      +1.D-24*(DXE(IXY,1)*XXEAB(IXY,1,IG)
     *      +DSM(IXY,1)*XSMAB(IXY,1,IG))
     *      +B2(IXY,1,IG)*TCD(IXY,1,IG)*BUCKLV
C      
C      WE SUM ALL THE DOWN/UP SCATTERING X-SEC FROM GROUP IG TO
C      ANY OTHER GROUP.
C      
          
          SB = SB + TCR(IXY,1,IG)
C      
C      TXT : ABS + REMOVAL X-SEC WHICH WILL BE USED IN THE NEM 2-NODE 
C      PROBLEM
C      
          TXT(IXY,1,IG) = SB
       
 410      CONTINUE
       
 419     CONTINUE
       
       DO 119 IZ=2,NZ
        DO 19 IXY=1,NXYL
         I=NCOLXY(IXY,NCOLZ(IZ))
         RHOWBOT=RHOW(IXY,IZ-1) !vmq
         RHOWAVG=(RHOW(IXY,IZ)+RHOWBOT)*0.5
       
         DRHOW=RHOWAVG-RHOWREF(I)
       
         IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
          IF(NSP.EQ.'C') THEN
C !vmq           IF(ANFDBK.EQ.'N') THEN
C !vmq            RHOWPPM=RHOWREF(I)
C !vmq           ELSE
            RHOWPPM=RHOWAVG
C !vmq           ENDIF
          ELSEIF(NSP.EQ.'M') THEN
C !vmq           IF(ANFDBK.EQ.'N') THEN
C !vmq            RHOWPPM=RHOWMREF(I)
C !vmq           ELSE
C !vmq C     MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
C !vmq           ENDIF
          ENDIF
          DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
     &      *(PM-REFB(I))*RHOWPPM  !vmq
         ELSEIF(NSP.EQ.'A') THEN
C      MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,IZ)
         ENDIF
       
         DTCOLC=TCOLC(IXY,IZ)-TCOLREF(I)
       
         IF(NMOD.EQ.'N') THEN
          DRHOWM=0.0
          DTMODC=0.0
         ELSE
C      MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C      MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
         ENDIF
       
         DSQTAVF=DOPL(IXY,IZ)
         FRACTRO=1.-FRACT(IXY,IZ)
         FRACTRI=FRACT(IXY,IZ)
C      
C---   WARNING: CALLS TO XSECPOLY INVOLVE LOCAL VARIABLES PASSED
C---   THROUGH COMMON [include 'xspolycom.fcb']
C      
         DO 10 IG=1,NG
          NGTEMP=1
          IGP=1
          XT= XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LTRRON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LTRRIN))
          TCD(IXY,IZ,IG) = 1./(3.*XT)
          
          IF(I.GT.NFUEXY) THEN
           TNF(IXY,IZ,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNFRIN))
           
           TPF(IXY,IZ,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LPFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LPFRIN))
       
           RNU(IXY,IZ,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNURON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNURIN))
          ENDIF
          
          TCA(IXY,IZ,IG) =
     &      XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LCARON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LCARIN))
       
          TCR(IXY,IZ,IG)=
     &      XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCRRON))
     &      +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCRRIN))
          
          NGTEMP=NG-1
          DO 11 IGP = 1,NG-1
           SIGDSN(IXY,IZ,IG,IGP)=
     &       XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCSCATRON))
     &       +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCSCATRIN))
 11       CONTINUE
          NGTEMP=1
          IGP=1
          IF(MBUCKL.EQ.0) THEN
            BUCKLV=0.0
          ELSE
            BUCKLV=1.0
          ENDIF
          XXEAB(IXY,IZ,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXXEABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXXEABRIN)))
          XSMAB(IXY,IZ,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXSMABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXSMABRIN)))
          SB=TCA(IXY,IZ,IG)
     *      +1.D-24*(DXE(IXY,IZ)*XXEAB(IXY,IZ,IG)
     *      +DSM(IXY,IZ)*XSMAB(IXY,IZ,IG))
     *      +B2(IXY,IZ,IG)*TCD(IXY,IZ,IG)*BUCKLV
C      
C      WE SUM ALL THE DOWN/UP SCATTERING X-SEC FROM GROUP IG TO
C      ANY OTHER GROUP.
C      
          
          SB = SB + TCR(IXY,IZ,IG)
C      
C      TXT : ABS + REMOVAL X-SEC WHICH WILL BE USED IN THE NEM 2-NODE 
C      PROBLEM
C      
          TXT(IXY,IZ,IG) = SB
       
 10      CONTINUE
       
 19     CONTINUE
 119   CONTINUE

      ELSE  !vmq 
C CALCULATION FOR NZ=1 done externally for avoiding iftest !vmq
        IZ=1 !vmq
        DO 619 IXY=1,NXYL
         I=NCOLXY(IXY,NCOLZ(1))
         RHOWBOT=RHOW(IXY,1) !vmq
         RHOWAVG=(RHOW(IXY,1)+RHOWBOT)*0.5
       
         DRHOW=RHOWAVG-RHOWREF(I)
       
         IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
          IF(NSP.EQ.'C') THEN
C !vmq  always anfdbk          IF(ANFDBK.EQ.'N') THEN
C !vmq  always anfdbk           RHOWPPM=RHOWREF(I)
C !vmq  always anfdbk          ELSE
            RHOWPPM=RHOWAVG
C !vmq  always anfdbk          ENDIF
          ELSEIF(NSP.EQ.'M') THEN
C !vmq           IF(ANFDBK.EQ.'N') THEN
C !vmq            RHOWPPM=RHOWMREF(I)
C !vmq           ELSE
C      MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
C !vmq           ENDIF
          ENDIF
          DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
     &      *(ppmrk3d(IXY,1)-REFB(I))*RHOWPPM
         ELSEIF(NSP.EQ.'A') THEN
C      MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,1)
         ENDIF
       
         DTCOLC=TCOLC(IXY,1)-TCOLREF(I)
       
         IF(NMOD.EQ.'N') THEN
          DRHOWM=0.0
          DTMODC=0.0
         ELSE
C      MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C      MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
         ENDIF
       
         DSQTAVF=DOPL(IXY,1)
         FRACTRO=1.-FRACT(IXY,1)
         FRACTRI=FRACT(IXY,1)
C      
C---   WARNING: CALLS TO XSECPOLY INVOLVE LOCAL VARIABLES PASSED
C---   THROUGH COMMON [include 'xspolycom.fcb']
C      
         DO 610 IG=1,NG
          NGTEMP=1
          IGP=1
          XT= XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LTRRON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LTRRIN))
          TCD(IXY,1,IG) = 1./(3.*XT)
          
          IF(I.GT.NFUEXY) THEN
           TNF(IXY,1,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNFRIN))
           
           TPF(IXY,1,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LPFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LPFRIN))
       
           RNU(IXY,1,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNURON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNURIN))
          ENDIF
          
          TCA(IXY,1,IG) =
     &      XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LCARON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LCARIN))
       
          TCR(IXY,1,IG)=
     &      XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCRRON))
     &      +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCRRIN))
          
          NGTEMP=NG-1
          DO 611 IGP = 1,NG-1
           SIGDSN(IXY,1,IG,IGP)=
     &       XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCSCATRON))
     &       +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCSCATRIN))
 611       CONTINUE
          NGTEMP=1
          IGP=1
          IF(MBUCKL.EQ.0) THEN
            BUCKLV=0.0
          ELSE
            BUCKLV=1.0
          ENDIF
          XXEAB(IXY,1,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXXEABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXXEABRIN)))
          XSMAB(IXY,1,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXSMABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXSMABRIN)))
          SB=TCA(IXY,1,IG)
     *      +1.D-24*(DXE(IXY,1)*XXEAB(IXY,1,IG)
     *      +DSM(IXY,1)*XSMAB(IXY,1,IG))
     *      +B2(IXY,1,IG)*TCD(IXY,1,IG)*BUCKLV
C      
C      WE SUM ALL THE DOWN/UP SCATTERING X-SEC FROM GROUP IG TO
C      ANY OTHER GROUP.
C      
          
          SB = SB + TCR(IXY,1,IG)
C      
C      TXT : ABS + REMOVAL X-SEC WHICH WILL BE USED IN THE NEM 2-NODE 
C      PROBLEM
C      
          TXT(IXY,1,IG) = SB
       
 610      CONTINUE
       
 619     CONTINUE
       
       DO 719 IZ=2,NZ
        DO 819 IXY=1,NXYL
         I=NCOLXY(IXY,NCOLZ(IZ))
         RHOWBOT=RHOW(IXY,IZ-1) !vmq
         RHOWAVG=(RHOW(IXY,IZ)+RHOWBOT)*0.5
       
         DRHOW=RHOWAVG-RHOWREF(I)
       
         IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
          IF(NSP.EQ.'C') THEN
C !vmq           IF(ANFDBK.EQ.'N') THEN
C !vmq            RHOWPPM=RHOWREF(I)
C !vmq           ELSE
            RHOWPPM=RHOWAVG
C !vmq           ENDIF
          ELSEIF(NSP.EQ.'M') THEN
C !vmq           IF(ANFDBK.EQ.'N') THEN
C !vmq            RHOWPPM=RHOWMREF(I)
C !vmq           ELSE
C !vmq C     MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
C !vmq           ENDIF
          ENDIF
          DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
     &      *(ppmrk3d(IXY,IZ)-REFB(I))*RHOWPPM
         ELSEIF(NSP.EQ.'A') THEN
C      MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,IZ)
         ENDIF
       
         DTCOLC=TCOLC(IXY,IZ)-TCOLREF(I)
       
         IF(NMOD.EQ.'N') THEN
          DRHOWM=0.0
          DTMODC=0.0
         ELSE
C      MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C      MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
         ENDIF
       
         DSQTAVF=DOPL(IXY,IZ)
         FRACTRO=1.-FRACT(IXY,IZ)
         FRACTRI=FRACT(IXY,IZ)
C      
C---   WARNING: CALLS TO XSECPOLY INVOLVE LOCAL VARIABLES PASSED
C---   THROUGH COMMON [include 'xspolycom.fcb']
C      
         DO 810 IG=1,NG
          NGTEMP=1
          IGP=1
          XT= XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LTRRON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LTRRIN))
          TCD(IXY,IZ,IG) = 1./(3.*XT)
          
          IF(I.GT.NFUEXY) THEN
           TNF(IXY,IZ,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNFRIN))
           
           TPF(IXY,IZ,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LPFRON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LPFRIN))
       
           RNU(IXY,IZ,IG) =
     &       XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LRNURON))
     &       +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LRNURIN))
          ENDIF
          
          TCA(IXY,IZ,IG) =
     &      XSECPOLY(FRACTRO,NTERMMACTRO,IXSMACTRO,A(LCARON))
     &      +XSECPOLY(FRACTRI,NTERMMACTRI,IXSMACTRI,A(LCARIN))
       
          TCR(IXY,IZ,IG)=
     &      XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCRRON))
     &      +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCRRIN))
          
          NGTEMP=NG-1
          DO 811 IGP = 1,NG-1
           SIGDSN(IXY,IZ,IG,IGP)=
     &       XSECPOLY(FRACTRO,NTERMCSCATRO,IXSCSCATRO,A(LCSCATRON))
     &       +XSECPOLY(FRACTRI,NTERMCSCATRI,IXSCSCATRI,A(LCSCATRIN))
 811       CONTINUE
          NGTEMP=1
          IGP=1
          IF(MBUCKL.EQ.0) THEN
            BUCKLV=0.0
          ELSE
            BUCKLV=1.0
          ENDIF
          XXEAB(IXY,IZ,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXXEABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXXEABRIN)))
          XSMAB(IXY,IZ,IG)=
     &      (XSECPOLY(FRACTRO,NTERMFPRO,IXSFPRO,A(LXSMABRON))
     &      +XSECPOLY(FRACTRI,NTERMFPRI,IXSFPRI,A(LXSMABRIN)))
          SB=TCA(IXY,IZ,IG)
     *      +1.D-24*(DXE(IXY,IZ)*XXEAB(IXY,IZ,IG)
     *      +DSM(IXY,IZ)*XSMAB(IXY,IZ,IG))
     *      +B2(IXY,IZ,IG)*TCD(IXY,IZ,IG)*BUCKLV
C      
C      WE SUM ALL THE DOWN/UP SCATTERING X-SEC FROM GROUP IG TO
C      ANY OTHER GROUP.
C      
          
          SB = SB + TCR(IXY,IZ,IG)
C      
C      TXT : ABS + REMOVAL X-SEC WHICH WILL BE USED IN THE NEM 2-NODE 
C      PROBLEM
C      
          TXT(IXY,IZ,IG) = SB
       
 810      CONTINUE
       
 819     CONTINUE
 719   CONTINUE
      ENDIF !vmq
C !vmq no hexa       IF(NSHAP.EQ.'HEXA')THEN
C !vmq no hexa        DO 777 IXY=1,NXYL
C !vmq no hexa         DO 776 IZ=1,NZ
C !vmq no hexa          DO 775 IG=1,NG
C !vmq no hexa           TXTO(IXY,IZ,IG)=TXT(IXY,IZ,IG)
C !vmq no hexa           TNFO(IXY,IZ,IG)=TNF(IXY,IZ,IG)
C !vmq no hexa           TPFO(IXY,IZ,IG)=TPF(IXY,IZ,IG)
C !vmq no hexa  775     CONTINUE
C !vmq no hexa  776    CONTINUE
C !vmq no hexa  777   CONTINUE
C !vmq no hexa 
C !vmq no hexa C     
C !vmq no hexa C-------WITHIN-NODE BURNUP GRADIENT EFFECT
C !vmq no hexa C     
C !vmq no hexa        IF(HEXBUGRAD.EQ.'Y')THEN
C !vmq no hexa         CALL XSFDBKS(
C !vmq no hexa      $    NCOLZ,NCOLXY,FRACT,TXT,
C !vmq no hexa      $    TCA,TCR,A(LCAROSN),A(LCARISN),A(LCRROSN),
C !vmq no hexa      $    A(LCRRISN),A(LRNFROSN),A(LRNFRISN),
C !vmq no hexa      $    A(LTXTSN),A(LTNFSN),A(LTPFSN),
C !vmq no hexa      $    TTCOLIN,RHOW,RHOWREF,RHOWMREF,REFB,TCOLC,TCOLREF,DOPL,
C !vmq no hexa      $    A(LPFROSN),A(LPFRISN))
C !vmq no hexa        ENDIF
C !vmq no hexa        CALL XSMOD(SW,A(LSWSN),TXT,TNF,A(LTXTSN),A(LTNFSN),
C !vmq no hexa      $    A(LTXTON),A(LTNFON),A(LSRCMOMN),NCOLXY,NCOLZ,
C !vmq no hexa      $    A(LAKN),A(LCSH0N),A(LSNH1N),A(LCSH2N),A(LTCDN),A(LBETATN),
C !vmq no hexa      $    A(LXHIPN),A(LBETATLAMN),N1)
C !vmq no hexa        IF(HEXBUGRAD.EQ.'Y')THEN
C !vmq no hexa         CALL XSMODKSF(SW,A(LSWSN),TPF,A(LTPFSN),A(LTPFON),A(LTEMPXSN),
C !vmq no hexa      $    NCOLXY,NCOLZ)
C !vmq no hexa        ENDIF
C !vmq no hexa         
C !vmq no hexa       ENDIF                     !NSHAP.EQ.HEXA
C     
C     RD** ARE THE COUPLING COEFFICIENTS WHICH ARE SAVED
C     IN DC* TO BE USED IN THE NODAL PART.
C     
      IF(LTHSHORT.EQ.1) RETURN
C     
C     IF CARTESIAN GEOMETRY, DO THE FOLLOWING:
C     
      
C |vmq no hexa      IF(NSHAP.EQ.'CART') THEN
       
       NSURFZ=NZ+1
       DO 102 IG=1,NG
        DO 101 IZ=1,NZ
         NSURFX=0
         NSURFY=0
         DO 100 IY=1,NY
          DO 104 IX=NXSTART(IY),NXEND(IY),NXSKIP
           IXY=NDNUM(IX,IY)
           
           IXYS=NDNUM(IX-1,IY)-NXYL
           IF(IXYS.GT.0) THEN
            IBC=NBC(IXYS)
            IF(IBC.EQ.0) THEN
             RDXW=.0
            ELSEIF(IBC.EQ.1) THEN
             RDXW=(2.*TCD(IXY,IZ,IG))/DX(IX)
            ELSEIF(IBC.EQ.2) THEN
             RDXW=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DX(IX))
            ELSEIF(IBC.LT.0) THEN
             IXYM=-1*IBC
             RDXW=1.
     *         /  (  DY(IX)/  (2.*TCD(IXYM,IZ,IG))
     *         +DX(IX)  /  (2.*  TCD(IXY,IZ,IG))  )
            ENDIF
           ELSE
            IXYM=NDNUM(IX-1,IY)
            
            RDXW=1.
     *        /  (  DX(IX-1)/  (2.*TCD(IXYM,IZ,IG))
     *        +DX(IX)  /  (2.*  TCD(IXY,IZ,IG))  )
           ENDIF
           DCW(IXY,IZ,IG) = RDXW
           NSURFX=NSURFX+1
           
           IXYS=NDNUM(IX+1,IY)-NXYL
           IF(IXYS.GT.0) THEN
            IBC=NBC(IXYS)
            IF(IBC.EQ.0) THEN
             RDXW=0.0
            ELSEIF(IBC.EQ.1) THEN
             RDXW=(2.*TCD(IXY,IZ,IG))/DX(IX)
            ELSEIF(IBC.EQ.2) THEN
             RDXW=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DX(IX))
            ENDIF
            IXYP=NDNUM(IX+1,IY)
            DCW(IXYP,IZ,IG)=RDXW
            NSURFX=NSURFX+1
           ENDIF
           
           IXYS=NDNUM(IX,IY-1)-NXYL
           IF(IXYS.GT.0) THEN
            IBC=NBC(IXYS)
            IF(IBC.EQ.0) THEN
             RDYN=.0
            ELSEIF(IBC.EQ.1) THEN
             RDYN=(2.*TCD(IXY,IZ,IG))/DY(IY)
            ELSEIF(IBC.EQ.2) THEN
             RDYN=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DY(IY))
            ELSEIF(IBC.LT.0) THEN
             IXYM=-1*IBC
             IF(IDRUN.EQ.'HCORE') THEN
              RDYN=1.
     *          /  (  DY(IY)/  (2.*TCD(IXYM,IZ,IG))
     *          +DY(IY)/    (2.*  TCD(IXY,IZ,IG))  )
             ELSEIF(IDRUN.EQ.'QCORE') THEN
              RDYN=1.
     *          /  (  DX(IY)/  (2.*TCD(IXYM,IZ,IG))
     *          +DY(IY)/    (2.*  TCD(IXY,IZ,IG))  )
             ENDIF
            ENDIF
           ELSE
            IXYM=NDNUM(IX,IY-1)
            RDYN=1.
     *        /  (  DY(IY-1)/  (2.*TCD(IXYM,IZ,IG))
     *        +DY(IY)/    (2.*  TCD(IXY,IZ,IG))  )
           ENDIF
           DCN(IXY,IZ,IG) = RDYN
           NSURFY=NSURFY+1
           
           IXYS=NDNUM(IX,IY+1)-NXYL
           IF(IXYS.GT.0) THEN
            IBC=NBC(IXYS)
            IF(IBC.EQ.0) THEN
             RDYN=.0
            ELSEIF(IBC.EQ.1) THEN
             RDYN=(2.*TCD(IXY,IZ,IG))/DY(IY)
            ELSEIF(IBC.EQ.2) THEN
             RDYN=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DY(IY))
            ENDIF
            IXYP=NDNUM(IX,IY+1)
            DCN(IXYP,IZ,IG)=RDYN
            NSURFY=NSURFY+1
           ENDIF
           
           IF(IZ.EQ.1) THEN
            IF(LIZD.EQ.0) THEN
             RDZL=.0
            ELSEIF(LIZD.EQ.1) THEN
             RDZL=(2.*TCD(IXY,IZ,IG))/DZ(IZ)
            ELSEIF(LIZD.EQ.2) THEN
             RDZL=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DZ(IZ))
            ENDIF
           ELSE
            RDZL=1.
     *        /  (  DZ(IZ-1)/  (2.*TCD(IXY,IZ-1,IG))
     *        +DZ(IZ)  /  (2.*  TCD(IXY,IZ,IG))  )
           ENDIF
           DCL(IXY,IZ,IG) = RDZL
           
           IF(IZ.EQ.NZ) THEN
            IF(LIZU.EQ.0) THEN
             RDZL=.0
            ELSEIF(LIZU.EQ.1) THEN
             RDZL=(2.*TCD(IXY,IZ,IG))/DZ(IZ)
            ELSEIF(LIZU.EQ.2) THEN
             RDZL=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DZ(IZ))
            ENDIF
            IZP=IZ+1
            DCL(IXY,IZP,IG)=RDZL
           ENDIF
 104      CONTINUE
 100     CONTINUE
 101    CONTINUE
 102   CONTINUE
       DO 113 IG=1,NG
        DO 112 IZ=1,NZ
         DO 111 IY=1,NY
          DO 110 IX=NXSTART(IY),NXEND(IY),NXSKIP
           IXY=NDNUM(IX,IY)
           IXYE=NDNUM(IX+1,IY)
           IXYS=NDNUM(IX,IY+1)
           IXYW=NDNUM(IX-1,IY)
           IXYN=NDNUM(IX,IY-1)
           IMULTE=1
           IF(IXYE.GT.NXYL) THEN
            IF(NBC(IXYE-NXYL).GT.0) IMULTE=0
           ENDIF
           IMULTS=1
           IF(IXYS.GT.NXYL) THEN
            IF(NBC(IXYS-NXYL).GT.0) IMULTS=0
           ENDIF
           IMULTW=1
           IF(IXYW.GT.NXYL) THEN
            IF(NBC(IXYW-NXYL).GT.0) IMULTW=0
           ENDIF
           IMULTN=1
           IF(IXYN.GT.NXYL) THEN
            IF(NBC(IXYN-NXYL).GT.0) IMULTN=0
           ENDIF
           IMULTZD=1
           IF(IZ.EQ.1) IMULTZD=0
           IMULTZU=1
           IF(IZ.EQ.NZ) IMULTZU=0
           RDXW=DCW(IXY,IZ,IG)
           RDXE=DCW(IXYE,IZ,IG)
           RDYN=DCN(IXY,IZ,IG)
           RDYS=DCN(IXYS,IZ,IG)
           RDZL=DCL(IXY,IZ,IG)
           RDZU=DCL(IXY,IZ+1,IG)
C     
C     THE DL* ARE THE CORRECTIONS IN THE COUPLING COEFFICIENTS
C     WHICH ARE UPDATED IN THE NODAL PART.
C     
           
           RTOT= (RDXE-DLW(IXYE,IZ,IG)+RDXW+DLW(IXY,IZ,IG))*
     &       DY(IY)*DZ(IZ)
     &       +(RDYS-DLN(IXYS,IZ,IG)+RDYN+DLN(IXY,IZ,IG))*
     &       DZ(IZ)*DX(IX)
     &       +(RDZU-DLL(IXY,IZ+1,IG)+RDZL+DLL(IXY,IZ,IG))
     &       *DX(IX)*DY(IY)
           
           
C     
C     AW* ARE THE UPPER BANDS OF THE MATRIX
           AWX(IXY,IZ,IG)=(RDXE+DLW(IXYE,IZ,IG))*DY(IY)*DZ(IZ)*IMULTE
           AWY(IXY,IZ,IG)=(RDYS+DLN(IXYS,IZ,IG))*DZ(IZ)*DX(IX)*IMULTS
           AWZ(IXY,IZ,IG)=(RDZU+DLL(IXY,IZ+1,IG))*DX(IX)*DY(IY)*IMULTZU
C     
C     BW* ARE THE LOWER BANDS OF THE MATRIX, INTRODUCED BECAUSE
C     THE MATRIX IS NOT SYMETRIC ANYMORE
C     
           BWX(IXY,IZ,IG)=(RDXW-DLW(IXY,IZ,IG))*DY(IY)*DZ(IZ)*IMULTW
           BWY(IXY,IZ,IG)=(RDYN-DLN(IXY,IZ,IG))*DZ(IZ)*DX(IX)*IMULTN
           BWZ(IXY,IZ,IG)=(RDZL-DLL(IXY,IZ,IG))*DX(IX)*DY(IY)*IMULTZD
C     
C     
C     RIVELO COMES FROM FINITE DIFFERENCES SCHEME
C     RIVELO = 1/(V*DELTAT)
C     THE ARRAY AQ HAS BEEN MODIFIED : THE 5TH DIMENSION
C     HAS BEEN REMOVED. INSTEAD, AN ARRAY CALLED SCAT
C     IS USED IN SUBROUTINE SORCE, FOR SCATTERING TERMS.
C     
           AQ(IXY,IZ,IG) = (TXT(IXY,IZ,IG)+
     &       RIVELO(IXY,IZ,IG))*VOLU(IXY,IZ) +  RTOT


 110      CONTINUE
 111     CONTINUE
 112    CONTINUE
 113   CONTINUE

C !vmq no hexa      ENDIF
C !vmq no hexaC     
C !vmq no hexaC     IF HEXAGONAL GEOMETRY, DO THE FOLLOWING:
C !vmq no hexaC    
C !vmq no hexa      IF(NSHAP.EQ.'HEXA') THEN
C !vmq no hexa       
C !vmq no hexa       RAT=2./DELH
C !vmq no hexa       RATI=2.
C !vmq no hexa       DELHD=DELH/SQRT(3.)
C !vmq no hexa       NSURFZ=NZ+1
C !vmq no hexa       DO 300 IG=1,NG
C !vmq no hexa        DO 400 IZ=1,NZ
C !vmq no hexa         NSURFX=0
C !vmq no hexa         NSURFU=0
C !vmq no hexa         NSURFV=0
C !vmq no hexa         DO 200 IY=1,NY
C !vmq no hexa          DO 204 IX=NXSTART(IY),NXEND(IY),NXSKIP
C !vmq no hexa           IXY=NDNUM(IX,IY)
C !vmq no hexaC     
C !vmq no hexaC     RD** ARE THE COUPLING COEFFICIENTS WHICH ARE SAVED
C !vmq no hexaC     IN DC* TO BE USED IN THE NODAL PART.
C !vmq no hexaC     
C !vmq no hexa           IXYS=NDNUM(IX-2,IY)-NXYL
C !vmq no hexa           IF(IXYS.GT.0) THEN
C !vmq no hexa            IBC=NBC(IXYS)
C !vmq no hexa            IF(IBC.LT.0) THEN
C !vmq no hexa             IXYM=-1*IBC
C !vmq no hexa             RDXW=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *         /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa            ELSEIF(IBC.EQ.0) THEN
C !vmq no hexa             RDXW=0.0
C !vmq no hexa            ELSEIF(IBC.EQ.1) THEN
C !vmq no hexa             RDXW=RAT*TCD(IXY,IZ,IG)
C !vmq no hexa            ELSEIF(IBC.EQ.2) THEN
C !vmq no hexa             RDXW=2.*TCD(IXY,IZ,IG)/(4.*TCD(IXY,IZ,IG)+DELH)
C !vmq no hexa            ENDIF
C !vmq no hexa            
C !vmq no hexa           ELSE
C !vmq no hexa            IXYM=NDNUM(IX-2,IY)
C !vmq no hexa            RDXW=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *        /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa           ENDIF
C !vmq no hexa           DCW(IXY,IZ,IG) = RDXW
C !vmq no hexa           NSURFX=NSURFX+1
C !vmq no hexa           
C !vmq no hexa           IXYS=NDNUM(IX+2,IY)-NXYL
C !vmq no hexa           IF(IXYS.GT.0) THEN
C !vmq no hexa            IBC=NBC(IXYS)
C !vmq no hexa            IF(IBC.LT.0) THEN
C !vmq no hexa             IXYM=-1*IBC
C !vmq no hexa             RDXW=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *         /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa            ELSEIF(IBC.EQ.0) THEN
C !vmq no hexa             RDXW=0.0
C !vmq no hexa            ELSEIF(IBC.EQ.1) THEN
C !vmq no hexa             RDXW=RAT*TCD(IXY,IZ,IG)
C !vmq no hexa            ELSEIF(IBC.EQ.2) THEN
C !vmq no hexa             RDXW=2.*TCD(IXY,IZ,IG)/(4.*TCD(IXY,IZ,IG)+DELH)
C !vmq no hexa            ENDIF
C !vmq no hexa            IXYP=NDNUM(IX+2,IY)
C !vmq no hexa            DCW(IXYP,IZ,IG)=RDXW
C !vmq no hexa            NSURFX=NSURFX+1
C !vmq no hexa           ENDIF
C !vmq no hexa           
C !vmq no hexa           IXYS=NDNUM(IX-1,IY-1)-NXYL
C !vmq no hexa           RDVN=0.0
C !vmq no hexa           IF(IXYS.GT.0) THEN
C !vmq no hexa            IBC=NBC(IXYS)
C !vmq no hexa            IF(IBC.LT.0) THEN
C !vmq no hexa             IXYM=-1*IBC
C !vmq no hexa             RDVN=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *         /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa            ELSEIF(IBC.EQ.0) THEN
C !vmq no hexa             RDVN=0.0
C !vmq no hexa            ELSEIF(IBC.EQ.1) THEN
C !vmq no hexa             RDVN=RAT*TCD(IXY,IZ,IG)
C !vmq no hexa            ELSEIF(IBC.EQ.2) THEN
C !vmq no hexa             RDVN=2.*TCD(IXY,IZ,IG)/(4.*TCD(IXY,IZ,IG)+DELH)
C !vmq no hexa            ENDIF
C !vmq no hexa           ELSE
C !vmq no hexa            IXYM=NDNUM(IX-1,IY-1)
C !vmq no hexa            RDVN=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *        /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa           ENDIF
C !vmq no hexa           DCNV(IXY,IZ,IG) = RDVN
C !vmq no hexa           NSURFV=NSURFV+1
C !vmq no hexa
C !vmq no hexa           IXYS=NDNUM(IX+1,IY+1)-NXYL
C !vmq no hexa           RDVN=0.0
C !vmq no hexa           IF(IXYS.GT.0) THEN
C !vmq no hexa            IBC=NBC(IXYS)
C !vmq no hexa            IF(IBC.EQ.1) THEN
C !vmq no hexa             RDVN=RAT*TCD(IXY,IZ,IG)
C !vmq no hexa            ELSEIF(IBC.EQ.2) THEN
C !vmq no hexa             RDVN=2.*TCD(IXY,IZ,IG)/(4.*TCD(IXY,IZ,IG)+DELH)
C !vmq no hexa            ELSEIF(IBC.LT.0)THEN
C !vmq no hexa             IXYM=-1*IBC
C !vmq no hexa             RDVN=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *         /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa            ENDIF
C !vmq no hexa            IXYP=NDNUM(IX+1,IY+1)
C !vmq no hexa            DCNV(IXYP,IZ,IG)=RDVN
C !vmq no hexa            NSURFV=NSURFV+1
C !vmq no hexa           ENDIF
C !vmq no hexa           
C !vmq no hexa           IXYS=NDNUM(IX+1,IY-1)-NXYL
C !vmq no hexa           RDUN=0.0
C !vmq no hexa           IF(IXYS.GT.0) THEN
C !vmq no hexa            IBC=NBC(IXYS)
C !vmq no hexa            IF(IBC.LT.0) THEN
C !vmq no hexa             IXYM=-1*IBC
C !vmq no hexa             RDUN=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *         /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa            ELSEIF(IBC.EQ.0) THEN
C !vmq no hexa             RDUN=0.0
C !vmq no hexa            ELSEIF(IBC.EQ.1) THEN
C !vmq no hexa             RDUN=RAT*TCD(IXY,IZ,IG)
C !vmq no hexa            ELSEIF(IBC.EQ.2) THEN
C !vmq no hexa             RDUN=2.*TCD(IXY,IZ,IG)/(4.*TCD(IXY,IZ,IG)+DELH)
C !vmq no hexa            ENDIF
C !vmq no hexa           ELSE
C !vmq no hexa            IXYM=NDNUM(IX+1,IY-1)
C !vmq no hexa            RDUN=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *        /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa           ENDIF
C !vmq no hexa           DCNU(IXY,IZ,IG) = RDUN
C !vmq no hexa           NSURFU=NSURFU+1
C !vmq no hexa           
C !vmq no hexa           IXYS=NDNUM(IX-1,IY+1)-NXYL
C !vmq no hexa           RDUN=0.0
C !vmq no hexa           IF(IXYS.GT.0) THEN
C !vmq no hexa            IBC=NBC(IXYS)
C !vmq no hexa            IF(IBC.EQ.0) THEN
C !vmq no hexa             RDUN=0.0
C !vmq no hexa            ELSEIF(IBC.EQ.1) THEN
C !vmq no hexa             RDUN=RAT*TCD(IXY,IZ,IG)
C !vmq no hexa            ELSEIF(IBC.EQ.2) THEN
C !vmq no hexa             RDUN=2.*TCD(IXY,IZ,IG)/(4.*TCD(IXY,IZ,IG)+DELH)
C !vmq no hexa            ELSEIF(IBC.LT.0)THEN
C !vmq no hexa             IXYM=-1*IBC
C !vmq no hexa             RDUN=  RAT*TCD(IXYM,IZ,IG)*TCD(IXY,IZ,IG)
C !vmq no hexa     *         /  (  TCD(IXYM,IZ,IG)+TCD(IXY,IZ,IG))
C !vmq no hexa            ENDIF
C !vmq no hexa            IXYP=NDNUM(IX-1,IY+1)
C !vmq no hexa            DCNU(IXYP,IZ,IG)=RDUN
C !vmq no hexa            NSURFU=NSURFU+1
C !vmq no hexa           ENDIF
C !vmq no hexa           
C !vmq no hexa           IF(IZ.EQ.1) THEN
C !vmq no hexa            IF(LIZD.EQ.0) THEN
C !vmq no hexa             RDZL=.0
C !vmq no hexa            ELSEIF(LIZD.EQ.1) THEN
C !vmq no hexa             RDZL=(2.*TCD(IXY,IZ,IG))/DZ(IZ)
C !vmq no hexa            ELSEIF(LIZD.EQ.2) THEN
C !vmq no hexa             RDZL=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DZ(IZ))
C !vmq no hexa            ENDIF
C !vmq no hexa           ELSE
C !vmq no hexa            RDZL=1.
C !vmq no hexa     *        /  (  DZ(IZ-1)/  (2.*TCD(IXY,IZ-1,IG))
C !vmq no hexa     *        +DZ(IZ)  /  (2.*  TCD(IXY,IZ,IG))  )
C !vmq no hexa           ENDIF
C !vmq no hexa           DCL(IXY,IZ,IG) = RDZL
C !vmq no hexa           
C !vmq no hexa           IF(IZ.EQ.NZ) THEN
C !vmq no hexa            IF(LIZU.EQ.0) THEN
C !vmq no hexa             RDZL=.0
C !vmq no hexa            ELSEIF(LIZU.EQ.1) THEN
C !vmq no hexa             RDZL=(2.*TCD(IXY,IZ,IG))/DZ(IZ)
C !vmq no hexa            ELSEIF(LIZU.EQ.2) THEN
C !vmq no hexa             RDZL=(2.*TCD(IXY,IZ,IG))/(4.*TCD(IXY,IZ,IG)+DZ(IZ))
C !vmq no hexa            ENDIF
C !vmq no hexa            IZP=IZ+1
C !vmq no hexa            DCL(IXY,IZP,IG)=RDZL
C !vmq no hexa           ENDIF
C !vmq no hexa 204      CONTINUE
C !vmq no hexa 200     CONTINUE
C !vmq no hexa 400    CONTINUE
C !vmq no hexa 300   CONTINUE
C !vmq no hexa       
C !vmq no hexa       DO 211 IG=1,NG
C !vmq no hexa        DO 212 IZ=1,NZ
C !vmq no hexa         DO 213 IY=1,NY
C !vmq no hexa          DO 210 IX=NXSTART(IY),NXEND(IY),NXSKIP
C !vmq no hexa           IXY=NDNUM(IX,IY)
C !vmq no hexa           IXYE=NDNUM(IX+2,IY)
C !vmq no hexa           IXYVS=NDNUM(IX+1,IY+1)
C !vmq no hexa           IXYUS=NDNUM(IX-1,IY+1)
C !vmq no hexa           IXYW=NDNUM(IX-2,IY)
C !vmq no hexa           IXYVN=NDNUM(IX-1,IY-1)
C !vmq no hexa           IXYUN=NDNUM(IX+1,IY-1)
C !vmq no hexa           
C !vmq no hexa           IMULTE=1
C !vmq no hexa           IF(IXYE.GT.NXYL) THEN
C !vmq no hexa            IF(NBC(IXYE-NXYL).GT.0) IMULTE=0
C !vmq no hexa           ENDIF
C !vmq no hexa           IMULTVS=1
C !vmq no hexa           IF(IXYVS.GT.NXYL) THEN
C !vmq no hexa            IF(NBC(IXYVS-NXYL).GT.0) IMULTVS=0
C !vmq no hexa           ENDIF
C !vmq no hexa           IMULTUS=1
C !vmq no hexa           IF(IXYUS.GT.NXYL) THEN
C !vmq no hexa            IF(NBC(IXYUS-NXYL).GT.0) IMULTUS=0
C !vmq no hexa           ENDIF
C !vmq no hexa           IMULTW=1
C !vmq no hexa           IF(IXYW.GT.NXYL) THEN
C !vmq no hexa            IF(NBC(IXYW-NXYL).GT.0) IMULTW=0
C !vmq no hexa           ENDIF
C !vmq no hexa           IMULTVN=1
C !vmq no hexa           IF(IXYVN.GT.NXYL) THEN
C !vmq no hexa            IF(NBC(IXYVN-NXYL).GT.0) IMULTVN=0
C !vmq no hexa           ENDIF
C !vmq no hexa           IMULTUN=1
C !vmq no hexa           IF(IXYUN.GT.NXYL) THEN
C !vmq no hexa            IF(NBC(IXYUN-NXYL).GT.0) IMULTUN=0
C !vmq no hexa           ENDIF
C !vmq no hexa           IMULTZD=1
C !vmq no hexa           IF(IZ.EQ.1) IMULTZD=0
C !vmq no hexa           IMULTZU=1
C !vmq no hexa           IF(IZ.EQ.NZ) IMULTZU=0
C !vmq no hexa           RDXW=DCW(IXY,IZ,IG)
C !vmq no hexa           RDXE=DCW(IXYE,IZ,IG)
C !vmq no hexa           RDVN=DCNV(IXY,IZ,IG)
C !vmq no hexa           RDVS=DCNV(IXYVS,IZ,IG)
C !vmq no hexa           RDUN=DCNU(IXY,IZ,IG)
C !vmq no hexa           RDUS=DCNU(IXYUS,IZ,IG)
C !vmq no hexa           RDZL=DCL(IXY,IZ,IG)
C !vmq no hexa           RDZU=DCL(IXY,IZ+1,IG)
C !vmq no hexa           
C !vmq no hexaC     
C !vmq no hexaC     THE DL* ARE THE CORRECTIONS IN THE COUPLING COEFFICIENTS
C !vmq no hexaC     WHICH ARE UPDATED IN THE NODAL PART.
C !vmq no hexaC     
C !vmq no hexa           
C !vmq no hexa           RTOT= (RDXE-DLW(IXYE,IZ,IG)+RDXW+DLW(IXY,IZ,IG))*
C !vmq no hexa     &       DELHD*DZ(IZ)
C !vmq no hexa     &       +(RDUS-DLNU(IXYUS,IZ,IG)+RDUN+DLNU(IXY,IZ,IG))*
C !vmq no hexa     &       DZ(IZ)*DELHD
C !vmq no hexa     &       +(RDVS-DLNV(IXYVS,IZ,IG)+RDVN+DLNV(IXY,IZ,IG))*
C !vmq no hexa     &       DZ(IZ)*DELHD
C !vmq no hexa     &       +(RDZU-DLL(IXY,IZ+1,IG)+RDZL+DLL(IXY,IZ,IG))*DELH*
C !vmq no hexa     &       DELH*SQRT(3.)*.5
C !vmq no hexa           
C !vmq no hexaC     
C !vmq no hexaC     AW* ARE THE UPPER BANDS OF THE MATRIX
C !vmq no hexaC     
C !vmq no hexa           AWX(IXY,IZ,IG)=(RDXE+DLW(IXYE,IZ,IG))*DELHD*DZ(IZ)*IMULTE
C !vmq no hexa           AWU(IXY,IZ,IG)=(RDUS+DLNU(IXYUS,IZ,IG))*DZ(IZ)*DELHD*IMULTUS
C !vmq no hexa           AWV(IXY,IZ,IG)=(RDVS+DLNV(IXYVS,IZ,IG))*DZ(IZ)*DELHD*IMULTVS
C !vmq no hexa           AWZ(IXY,IZ,IG)=(RDZU+DLL(IXY,IZ+1,IG))*DELH*DELH*
C !vmq no hexa     &       SQRT(3.)*.5*IMULTZU
C !vmq no hexa           
C !vmq no hexaC     BW* ARE THE LOWER BANDS OF THE MATRIX, INTRODUCED BECAUSE
C !vmq no hexaC     THE MATRIX IS NOT SYMETRIC ANYMORE
C !vmq no hexaC     
C !vmq no hexa           BWX(IXY,IZ,IG)=(RDXW-DLW(IXY,IZ,IG))*DELHD*DZ(IZ)*IMULTW
C !vmq no hexa           BWU(IXY,IZ,IG)=(RDUN-DLNU(IXY,IZ,IG))*DZ(IZ)*DELHD*IMULTUN
C !vmq no hexa           BWV(IXY,IZ,IG)=(RDVN-DLNV(IXY,IZ,IG))*DZ(IZ)*DELHD*IMULTVN
C !vmq no hexa           BWZ(IXY,IZ,IG)=(RDZL-DLL(IXY,IZ,IG))*DELH*DELH*
C !vmq no hexa     &       SQRT(3.)*.5*IMULTZD
C !vmq no hexa           
C !vmq no hexa           AQ(IXY,IZ,IG) = (TXT(IXY,IZ,IG)+RIVELO(IXY,IZ,IG))
C !vmq no hexa     &       *VOLU(IXY,IZ)  +  RTOT
C !vmq no hexa           
C !vmq no hexa 210      CONTINUE
C !vmq no hexa 213     CONTINUE
C !vmq no hexa 212    CONTINUE
C !vmq no hexa 211   CONTINUE
C !vmq no hexa      ENDIF

      RETURN
      END



