      SUBROUTINE PINLOC(PINLOCR,PINLOCT)
C     
C     PURPOSE: DETERMINE R,THETA LOCATION OF THE CENTER OF THE PIN 
C     INSIDE AN ASSEMBLY
C
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*8 (I-N) !vmq     
      include 'confmap.fcb'
      include 'pinpow.fcb'
      include 'hexdim.fcb'
      
      DIMENSION PINLOCR(*),PINLOCT(*)
      REAL*8 LOCX,LOCY

      N=NHRPIN*2-1
      RPIN=(2*RHEXA*SQRT(3.))/(3.*N+1.)
      DELHPIN=RPIN*SQRT(3.)
      PI=ACOS(-1.)
      
      NPIN=0
      DO I=1,NHRPIN-2
       NPIN=NPIN+I
      ENDDO
      NPIN=NPIN*6
      NPIN=NPIN+(NHRPIN-1)*6
      NPIN=NPIN+1
      
      WRITE(*,*)'NUMBER OF PIN LOCATIONS IN EACH ASSEMBLY: ',NPIN

      NX=0
      NPIN=0
      CX=1.5*RPIN
      CY=RHEXA-RPIN/(2.*SQRT(3.))
      DO 100 IY=1,NHRPIN
       NX=NX+1
       CX=CX-1.5*RPIN
       CY=CY-0.5*DELHPIN
       DO 101 IX=1,NX
        NPIN=NPIN+1
        LOCX=CX+(IX-1)*3*RPIN
        LOCY=CY
        PINLOCR(NPIN)=SQRT(LOCX*LOCX+LOCY*LOCY)
        IF(LOCX.EQ.0.)THEN
         IF(LOCY.GE.0.)THEN
          PINLOCT(NPIN)=PI/2.
         ELSE
          PINLOCT(NPIN)=3.*PI/2.
         ENDIF
        ELSE
         IF((LOCY.GE.0.AND.LOCX.LT.0).OR.
     $     LOCY.LT.0.AND.LOCX.LE.0)THEN
          PINLOCT(NPIN)=ATAN(LOCY/LOCX)+PI
         ELSE
          PINLOCT(NPIN)=ATAN(LOCY/LOCX)
         ENDIF
        ENDIF
 101   CONTINUE
 100  CONTINUE

      CY=LOCY
      DO 102 IY=1,2*(NHRPIN-1)
       IF(MOD(IY,2).EQ.1)THEN
        CX=-DELH/2.+2.5*RPIN
        NX=NHRPIN-1
       ELSE
        CX=-DELH/2.+RPIN
        NX=NHRPIN
       ENDIF
       CY=CY-DELHPIN/2.
       DO 103 IX=1,NX
        NPIN=NPIN+1
        LOCX=CX+(IX-1)*3*RPIN
        LOCY=CY
        PINLOCR(NPIN)=SQRT(LOCX*LOCX+LOCY*LOCY)
        IF(LOCX.EQ.0.)THEN
         IF(LOCY.GE.0.)THEN
          PINLOCT(NPIN)=PI/2.
         ELSE
          PINLOCT(NPIN)=3.*PI/2.
         ENDIF
        ELSEIF(LOCX.GE.0.AND.LOCY.LE.0)THEN
         PINLOCT(NPIN)=ATAN(LOCY/LOCX)+2.*PI
        ELSE
         IF((LOCY.GE.0.AND.LOCX.LT.0).OR.
     $     LOCY.LT.0.AND.LOCX.LE.0)THEN
          PINLOCT(NPIN)=ATAN(LOCY/LOCX)+PI
         ELSE
          PINLOCT(NPIN)=ATAN(LOCY/LOCX)
         ENDIF
        ENDIF
 103   CONTINUE
 102  CONTINUE
      NX=NHRPIN
      CY=LOCY
      CX=-DELH/2.+RPIN
      DO 104 IY=1,NHRPIN-1
       NX=NX-1
       CX=CX+1.5*RPIN
       CY=CY-DELHPIN/2.       
       DO 105 IX=1,NX
        NPIN=NPIN+1
        LOCX=CX+(IX-1)*3.*RPIN
        LOCY=CY
        PINLOCR(NPIN)=SQRT(LOCX*LOCX+LOCY*LOCY)
        IF(LOCX.EQ.0.)THEN
         IF(LOCY.GE.0.)THEN
          PINLOCT(NPIN)=PI/2.
         ELSE
          PINLOCT(NPIN)=3.*PI/2.
         ENDIF
        ELSEIF(LOCX.GE.0.AND.LOCY.LE.0)THEN
         PINLOCT(NPIN)=ATAN(LOCY/LOCX)+2.*PI
        ELSE
         IF((LOCY.GE.0.AND.LOCX.LT.0).OR.
     $     LOCY.LT.0.AND.LOCX.LE.0)THEN
          PINLOCT(NPIN)=ATAN(LOCY/LOCX)+PI
         ELSE
          PINLOCT(NPIN)=ATAN(LOCY/LOCX)
         ENDIF
        ENDIF
 105   CONTINUE
 104  CONTINUE
       
      RETURN
      END
