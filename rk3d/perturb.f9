      SUBROUTINE PERTURB
     &  (  ITRANMORE,ZBTR,ZB,GGMKIN,TTCOLIN,TTCOLINOLD,TIMETR,PMT,TINT,
     &  GMINT,ZBT,TIMEPR,TIMESP,DELT,RIVELO,VELOC )
C     
C     THIS SUBROUTINE INTERPOLATES THE TIME DEPENDENT INPUT PARAMETERS
C     FOR THE TRANSIENT PROBLEM
C
      use     rkinc, only:ppmrk3d !vmq
C     
      include 'param.fcb'
      include 'array.fcb'
      include 'crod.fcb'
      include 'pertv.fcb'
      include 'thermk.fcb'
      include 'geom.fcb'
      include 'cntl.fcb'
      include 'thermo.fcb'
      include 'nonfue.fcb'
      include 'soln2.fcb'
      include 'perttr.fcb'
      include 'varlen.fcb' 
      include 'veloc.fcb'
      
      DIMENSION
     &  ZBTR(*)                           ,ZB(*)                 ,
     &  GGMKIN(*)                         ,TTCOLIN(*)            ,
     &  TIMETR(*)                         ,PMT(*)                ,
     &  TINT(*)                           ,
     &  GMINT(*)                          ,ZBT(NBMAX,*)          ,
     &  TIMEPR(*)                         ,TIMESP(*)             ,
     &  DELT(*)                           ,RIVELO(NXYL,NZ,*)     ,
     &  VELOC(NXYL,NZ,*)                  ,TTCOLINOLD(*)
C     
C======ACCOUNTING FOR THE MACHINE ROUNDOFF ERROR
C     
C      ROUNDOFFP = 1 + 1.E-05
C      ROUNDOFFM = 1 - 1.E-05
CC     
CC------UPDATE THE OLD TIME-STEP VALUE
CC     
C      DELTATOLD = DELTAT
CC     
CC------ASSIGN THE TIME-STEP FOR THE CURRENT TIME SPAN
CC     
C      IF(ROUNDOFFM*TIMEELAPSO.LT.TIMESP(ITC)
C     &  .AND.ROUNDOFFP*TIMEELAPS.GE.TIMESP(ITC))THEN
C       IF(ITC.LT.NTSPN)THEN
C        ITC = ITC + 1
C       ENDIF
C       DELTAT = DELT(ITC)
C       
C      ELSE
C       DELTAT = DELT(ITC)
C       
C      ENDIF
CC     
CC------CALCULATE THE ELAPSED TIME [SEC]
CC     
      TIMEELAPSO = TIMEELAPS
      TIMEELAPS  = TIMEELAPS + DELTAT
C     
C------CHECK FOR THE PERTURBATION FLAG
C     
C      IPRTFLAG = 0
C      IF(ROUNDOFFP*TIMEELAPS.LT.TIMETR(ITR+1))THEN
CC...........................................OLD PERTURBATION IN PROGRESS
C       IPRTFLAG = 1
C      ELSEIF
C     &   ((ROUNDOFFM*TIMEELAPSO.LT.TIMETR(ITR+1)
C     &   .AND.ROUNDOFFP*TIMEELAPS.GE.TIMETR(ITR+1))
C     &   .OR. ROUNDOFFP*TIMEELAPS.GE.TIMETR(NPERT))THEN
CC................................................START NEW PERTURBATION
C       IF((ITR+1).LT.NPERT)THEN
C        IPRTFLAG = 1
C        ITR = ITR + 1
C       ELSE
CC.................NO MORE PERTURBATION ( FREEZE THE CURRENT PARAMETERS )
C        IPRTFLAG = 0
C        TINP = TIMETR(NPERT)
C        PMTR = PMT(NPERT)
C        TINTR =  TINT(NPERT)
C        GMINTR = GMINT(NPERT) 
C        DO 115 IBK=1,NBACU
C         ZBTR(IBK) = ZBT(IBK,NPERT)
C 115    CONTINUE
C       ENDIF
C      ENDIF
CC     
CC------CHECK FOR THE PRINT FLAG
CC     
C      IPRINT=0
C      IF(ROUNDOFFM*TIMEELAPSO.LT.TIMEPR(IPR)
C     &  .AND.ROUNDOFFP*TIMEELAPS.GE.TIMEPR(IPR))THEN
C       IPRINT=1
C       IPR = IPR + 1
C      ENDIF
CC     
CC---------INTERPOLATE ON THE LINEAR PARAMETERS
CC     
C      IF(IPRTFLAG.EQ.1)THEN
C       
C       T1  = TIMETR(ITR)
C       T2  = TIMETR(ITR+1)
C       TINP = TIMEELAPS
CC------------------------------------------SOLUBLE POISON CONCENTRATION
C       IF(PMT(ITR).EQ.PMT(ITR+1))THEN
C        PMTR = PMT(ITR)
C       ELSE
C        Y1  = PMT(ITR)
C        Y2  = PMT(ITR+1)
C        CALL LINEAR(T1,T2,TINP,Y1,Y2,YVALUE)
C        PMTR = YVALUE
C       ENDIF
CC--------------------------------------------INLET COOLANT TEMPERATURE
C       IF(TINT(ITR).EQ.TINT(ITR+1))THEN
C        TINTR = TINT(ITR)
C       ELSE
C        Y1  = TINT(ITR)
C        Y2  = TINT(ITR+1)
C        CALL LINEAR(T1,T2,TINP,Y1,Y2,YVALUE)
C        TINTR = YVALUE
C       ENDIF
CC-----------------------------------------------MASS VELOCITY
C       IF(GMINT(ITR).EQ.GMINT(ITR+1))THEN
C        GMINTR = GMINT(ITR)
C       ELSE
C        Y1  = GMINT(ITR)
C        Y2  = GMINT(ITR+1)
C        CALL LINEAR(T1,T2,TINP,Y1,Y2,YVALUE)
C        GMINTR = YVALUE
C       ENDIF
CC----------------------CONTROL BANKS AXIAL WITHDRAWAL DISTANCE [INCH]
C       
C       DO 10 IBK=1,NBACU
C        IF(ZBT(IBK,ITR).EQ.ZBT(IBK,ITR+1))THEN
C         ZBTR(IBK) = ZBT(IBK,ITR)
C        ELSE
C         Y1  = ZBT(IBK,ITR)
C         Y2  = ZBT(IBK,ITR+1)
C         CALL LINEAR(T1,T2,TINP,Y1,Y2,YVALUE)
C         ZBTR(IBK) = YVALUE
C        ENDIF
C 10    CONTINUE
CC     
CC......................................START HERE IF IPRTFLAG=0
C      ENDIF
CC     
CC     INITIALIZING INPUT TEMPERATURE ( INPUT TO THE BOTTOM OF THE CORE )
CC=====================================================================
CC     *
C      DO 110 IXY=1,NXYL
C       TTCOLINOLD(IXY)=TTCOLIN(IXY)
C       TTCOLIN(IXY) = TINTR
C 110  CONTINUE
CC     
CC     INITIALIZING INPUT MASS FLOW RATE (INPUT TO THE BOTTOM OF THE CORE)
CC=======================================================================
CC     
CC---- CHANGE UNITS OF AVERAGE MASS VELOCITY :
CC---- FROM LB/HR-FT**2 TO GM/SEC-CM**2 :
CC     
C      GMINTR=GMINTR*1.3562527E-4
C      
C      DO 20 IXY=1,NXYL
C       GGMKIN(IXY) = GMINTR
C 20   CONTINUE
CC     
CC     INITIALIZE INPUT SOLUBLE POISON  CONCENTRATION
CC====================================================
CC     
C      PM = PMTR
CC     
CC     INITIALIZE CONTROL BANK STEPS WITHDRAWL
CC===========================================
CC     
C      DO 30 IBK = 1,NBACU
C       ZB(IBK) = ZBTR(IBK)*2.54 + RODOFFSET
C 30   CONTINUE
CC     
CC-----TERMS COMING FROM FINITE DIFFERENCES SCHEME
CC     
      DO 6302 IXY=1,NXYL
       DO 6301 IZ=1,NZ
        DO 6300 IG=1,NG
         RIVELO(IXY,IZ,IG) = 1./(VELOC(IXY,IZ,IG)*DELTAT)
 6300   CONTINUE
 6301  CONTINUE
 6302 CONTINUE
C
         
        DO 115 IBK=1,NBACU  !vmq
         ZBTR(IBK) = A(LZBN+IBK-1)/2.54   !vmq
         PM = ppmrk3d(IBK,1)  !vmq
 115    CONTINUE   !vmq
C     
C-------CHECKING FOR TERMINATION OF TRANSIENT CALL
C     
C-------SET ITRANMORE = 1 IF CONTINUING TRANSIENT CALCULATION
C     
C      ITRANMORE = 0
C      IF((TIMESP(NTSPN)-ROUNDOFFP*TIMEELAPS).GE.0.0)ITRANMORE=1
      
      RETURN
      END
