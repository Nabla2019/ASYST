      SUBROUTINE CHEBY1(NOUTIT,MAOUTERUP,EFFK,IRETRN,
     &  FNSWT,FNPPOT,FNPPPOT,NCOLXY,NCOLZ,RESIDUAL)
C     
C     THIS SUBROUTINE APPLIES THE SEMI-IMPLICIT CHEBYSHEV POLYNOMIAL
C     ACCELERATION METHOD AND CHECKS FOR CONVERGENCE FOR THE STEADY-STATE
C     PROBLEM
C     
      include 'param.fcb'
      include 'cntl.fcb'
      include 'che.fcb'
      include 'conv.fcb'
      include 'cheby.fcb'
      include 'flamdold.fcb'
      include 'geom.fcb'
      include 'nonfue.fcb'
      include 'opti.fcb'
      include 'power.fcb'
      include 'restotp.fcb'
      include 'nemcnt.fcb'
      include 'array.fcb'
      include 'varlen.fcb'
      include 'burn.fcb'
      include 'xeopt.fcb'

      DIMENSION
     &  NCOLXY(NXYLMAX,*)                    ,NCOLZ(*)         ,
     &  FNSWT(NXYL,*)                        ,FNPPOT(NXYL,*)   ,
     &  FNPPPOT(NXYL,*)
      
      CHARACTER*8 NNEW

      REAL*8 FISDEL,ERRATD
      
C     
C     INITIALIZE PARAMETERS :
C     
      INEWCP=0
      DIFKEF=0.0
      GAMMAN=0.0
      GAMMAD=0.0
      FISLNO = ABS(FISLNN)
      ERRATD=ERRATN
      ERRATN=0.0
      FLAMNEW = 0.D0
      FISLNN = 0.0
      ALPHAC=0.0
      BETAC=0.0

C     
C     IS CHEBYSHEV ACCELERATION PERMITTED OR ALREADY IN PROGRESS ? :
C     
      IF(NOUTIT .LE. 3) THEN
C     
C     NO CHEBYSHEV ACCELERATION PERMITTED ON THIS OUTER ITERATION :
C     
       SIGMA=MIN(SIGBAR, 0.9950)
       INEWCP=1
       NORDCP=0
       NEWCP=1
      ELSEIF(NEWCP .EQ. 1) THEN
C     
C     INITIALIZE THE BEGINNING OF A CHEBYSHEV EXTRAPOLATION CYCLE :
C     
       INEWCP=1
       NORDCP=0
       NEWCP=0
       ERPROD=1.0
       IF(SIGBAR.GE.0.4.AND.SIGBAR.LE.0.99999) THEN
C     
C     CHEBYSHEV ACCELERATION PERMITTED ON THIS OUTER ITERATION :
C     
        SIGMA=SIGBAR
       ELSE 
C     
C     NO CHEBYSHEV ACCELERATION PERMITTED ON THIS OUTER ITERATION :
C     
        NORDCP=0
        NEWCP=1
       ENDIF
      ENDIF 
C     
C     LIMIT UPPER BOUND OF "DOMINANCE RATIO[EVP]/SPECTRAL RADIUIS[FSP]"EST
C     
C     
C     IMPOSE ITERATION-DEPENDENT UPPER BOUNDS ON THE DOMINANCE RATIO [EVP]
C     OR THE SPECTRAL RADIUS [FSP]:
C     
      IF(NOUTIT .LE. 6 .AND. NNEW .EQ. 'Y') SIGMA=MIN(SIGMA, 0.90)
      IF(NOUTIT .LE. 9 .AND. NNEW .EQ. 'Y') SIGMA=MIN(SIGMA, 0.950)
      IF(NOUTIT .LE. 12 .AND. NNEW .EQ. 'Y')SIGMA=MIN(SIGMA, 0.9850)
      IF(NOUTIT .LE. 6 .AND. NNEW .NE. 'Y') SIGMA=MIN(SIGMA, 0.9850)
C     
C     OBTAIN NEXT PAIR OF CHEBYSHEV POLYNOMIAL COEFFICIENTS :
C     
      IF(NEWCP.EQ.0) THEN 
       NORDCP=NORDCP+1
       IF(NORDCP.EQ.1) THEN
        ALPHAC=2.0/(2.0-SIGMA)
        BETAC=0.0
       ELSE  
        COSHGM=(2.0-SIGMA)/SIGMA
        GAMMA=ACOSH(COSHGM)
        ALPHAC=4.0*COSH((NORDCP-1)*GAMMA)/
     *    (SIGMA*COSH(NORDCP*GAMMA))
        BETAC=(1.0-SIGMA*0.5)*ALPHAC-1.0
       ENDIF
      ENDIF
C     
C     CALCULATE FISSION SOURCE NORM AND RELATED QUANTITIES :
C     
C     ERRATN  = L-2 NORM OF THE OUTER ITERATIVE RESIDUAL (S(L)-S(L-1))
C     FLAMNEW = MAXIMUM RELATIVE POINTWISE GROWTH OF S(L) (S(L)/S(L-1))
C     GAMMAN  = L-2 NORM SQUARED OF S(L)
C     GAMMAD  = INNER PRODUCT OF S(L) AND S(L-1) [S(L),S(L-1)]
C     FISPLN  = 2-D VOLUME-INTEGRATED FISSION SOURCE
C     
      DO 11 IZ=1,NZ
       DO 1 IXY=1,NXYL
        ICC = NCOLXY(IXY,NCOLZ(IZ))
        IF(ICC .GT. NFUEXY) THEN
         FISDEL=ABS(FNSWT(IXY,IZ)-FNPPOT(IXY,IZ))
         FISDELN=FISDEL/FNSWT(IXY,IZ)
         FLAMNEW=MAX(FLAMNEW,FISDELN)
         ERRATN=ERRATN+FISDEL*FISDEL
         GAMMAN=GAMMAN+FNSWT(IXY,IZ)*FNSWT(IXY,IZ)
         GAMMAD=GAMMAD+ABS(FNSWT(IXY,IZ)*FNPPOT(IXY,IZ)) !vmq
        ENDIF
 1     CONTINUE
 11   CONTINUE
C     
C     SELECT ACCELERATION OPTION AND APPLY ACCELERATION:
C     
      IF(ALPHAC.NE.0.0.AND.BETAC.NE.0.0) THEN
C     
C     (1) FULL TWO-TERM CHEBYSHEV ACCELERATION :
C     
       DO 22 IZ=1,NZ
        DO 2 IXY=1,NXYL
         FNSWT(IXY,IZ)=FNPPOT(IXY,IZ)
     &     +ALPHAC*(FNSWT(IXY,IZ)-FNPPOT(IXY,IZ))
     &     +BETAC *(FNPPOT(IXY,IZ)-FNPPPOT(IXY,IZ))
 2      CONTINUE
 22    CONTINUE
      ELSEIF(ALPHAC.NE.0.0) THEN
C     
C     (2) ONE-TERM CHEBYSHEV ACCELERATION :
C     
       DO 33 IZ=1,NZ
        DO 3 IXY=1,NXYL
         FNSWT(IXY,IZ)=FNPPOT(IXY,IZ)
     &     +ALPHAC*(FNSWT(IXY,IZ)-FNPPOT(IXY,IZ))
 3      CONTINUE
 33    CONTINUE
      ENDIF
C     
C     CALCULATE L-1 NORM OF ACCELERATED FISSION SOURCE :
C     CALCULATE VOLUME INTEGRATED ACCELERATED FISSION SOURCE :
C     SAVE EXTRAPOLATED FISSION SOURCE :
C     
      DO 44 IZ=1,NZ
       DO 4 IXY=1,NXYL
        FISLNN=FISLNN + ABS(FNSWT(IXY,IZ))
 4     CONTINUE
 44   CONTINUE
C     
C------FOR FSP RESET BOTH ERROR IN K_EFF AND LAMBDA VALUES
C     
      IF (ITYPE.EQ.'FSP')THEN
       DIFKEF = 0.00000000000
       FLAMDA = 1.00000000000
      ELSE
C     
C     COMPUTE NEW K-EFFECTIVE IN HOMOGENEOUS PROBLEMS :
C     
       EFFKO = EFFK
       EFFK  = FLAMDA*(GAMMAN/GAMMAD)
C     
C     PASSING THE NEW KEFF VALUE TO WRITE STATEMENT IN SUB. OUTPUT
C     
       EFFKOUT = EFFK
       DIFKEF = ABS(EFFK-EFFKO)
       FLAMDAOLD = FLAMDA
       FLAMDA = FLAMDA*FISLNN/FISLNO
      ENDIF 
C     
C     COMPUTE RESIDUAL AND NEW EIGENVALUE
C     
      CALL RESID(
     &  A(LVOLUN),A(LBETATN),A(LBETATLAMN),
     &  A(LFILAMDT1N),A(LSWN),A(LTNFN),A(LXHIPN),A(LSEFFN),
     &  AINT(LLSEXTRN),AINT(LLSEXTZN),A(LSEXTN),A(LSCWN),
     &  A(LFNSHIFTN),EIGEN,RESIDUAL )
C     
C     COMPUTE RESIDUAL RELATIVE REDUCTION AND NEW EIGENVALUE
C     
      DIFFIS=SQRT(ERRATN/ABS(GAMMAD))
      IF(INEWCP.EQ.1) DIFFISOLD=DIFFIS
      IF(DIFFISOLD.GT.0.0) THEN
       DIFRESID=SQRT(DIFFIS/DIFFISOLD)
      ELSE  
       DIFRESID=1.
      ENDIF  
      DIFLAMNEW = FLAMNEW/(1.-SIGMA)
C     
C     COMPUTE FISSION SOURCE ERRORS AND ESTIMATE THE DOMINANCE RATIO :
C     
      ERRAT=SQRT(ERRATN/ERRATD)
      IF(NOUTIT .EQ. 0) THEN
       SIGBAR=0.5
      ELSEIF((NOUTIT-MAOUTERUP).GT.1..AND.NORDCP.LE.1) THEN
       SIGBAR=ERRAT
      ENDIF

      IF(NORDCP.GT.1) THEN
C     
C     MONITOR THE EFFECTIVENESS OF THE EXTRAPOLATION CYCLE :
C     AFTER REACHING A POLYNOMIAL OF DEGREE THREE, TERMINATE
C     THE CURRENT CYCLE WHENEVER THE ERROR REDUCTION FACTOR (ERPROD)
C     EXCEEDS THE THEORETICAL ERROR REDUCTION FACTOR (1./CPM1)
C     (I.E. WHENEVER GAMMA .GE. 1) :
C     WHEN A NEW EXTRAPOLATION CYCLE IS INDICATED (NEWCP=1),
C     THE LATEST DOMINANCE RATIO ESTIMATE (SIGBAR) WILL BE USED :
C     
       ERPROD=ERPROD*ERRAT
       ORDCPM=DFLOAT(NORDCP-1) !vmq
       CPM1=COSH(ORDCPM*ACOSH((2.-SIGMA)/SIGMA))
       GAMMA=CPM1*ERPROD
       IF(GAMMA .LT. 1.0) THEN
        SIGBAR=SIGMA*(1.0+COS(ACOS(GAMMA)/ORDCPM))*0.5
       ENDIF
       IF(GAMMA .GE. 1.0) THEN
        SIGBAR=SIGMA*(1.0+COSH(ACOSH(GAMMA)/ORDCPM))*0.5
       ENDIF
       IF(GAMMA.GE.1.0.AND.NORDCP.GE.3) NEWCP=1
       IF(NORDCP.GE.IUPOUTER.OR.DIFRESID.LE.EPREDRESID) THEN
        IF(GAMMA.LT.1.0) SIGBAR = 0.99*SIGMA
        NEWCP=1
       ENDIF       
      ENDIF  

C !vmq always anfdbk      IF(ANFDBK.EQ.'N'.AND.IMETHOD.EQ.1
C !vmq always anfdbk     *  .AND.IXE(IBU).NE.3.AND.ASRCH.EQ.'N') INEWCP=1
C     
C     CHECK CONVERGENCE :
C     
      IRETRN=1
      IF(NOUTIT .GE. KITR) IRETRN=2
C     
C-----OUTPUT TO THE SCREEN EVERY OUTER ITERATION
C     
C !vmq      IF(CRTON.EQ.'Y') THEN
C !vmq       IF(ITYPE.EQ.'EVP')THEN
C !vmq        WRITE(*,86)EFFK
C !vmq        WRITE(*,88)DIFKEF,EPSK
C !vmq       ENDIF
C !vmq       WRITE(*,87)DIFFIS,EPSOT
C !vmq       WRITE(*,92)RESIDUAL,EPSRESID
C !vmq       WRITE(*,89)DIFLAMNEW,EPSINF
C !vmq       WRITE(*,91)DIFRESID,EPREDRESID
C !vmq       WRITE(*,90)NORDCP
C !vmq      ENDIF
      
      IF(ACONV.EQ.'Y') THEN
       IF(    DIFFIS.LE.EPSOT
     &   .AND. DIFKEF.LE.EPSK
     &   .AND. INEWCP.EQ.1
     &   .AND. INEM.EQ.0
     &   .AND. DIFLAMNEW.LE.EPSINF
     &   .AND. RESIDUAL.LE.EPSRESID)IRETRN=3
      ELSE
       IF(    DIFFIS.LE.EPSOT
     &   .AND. DIFKEF.LE.EPSK
     &   .AND. DIFLAMNEW.LE.EPSINF
     &   .AND. RESIDUAL.LE.EPSRESID)IRETRN=3
      ENDIF
      
      IF(IRETRN.EQ.3) SIGBAR=SIGMA
      
      IF(NPC.EQ.'Y')THEN
       IF(ITYPE.EQ.'EVP')THEN
        WRITE(55,300) DIFLAMNEW,DIFFIS,RESIDUAL,DIFKEF,
     &    NORDCP,SIGMA,SIGBAR,EFFK
       ELSEIF(ITYPE.EQ.'FSP')THEN
        WRITE(55,399) DIFLAMNEW,DIFFIS,RESIDUAL,
     &    NORDCP,SIGMA,SIGBAR,POWERFRAC
       ENDIF

      ENDIF
      
 86   FORMAT(T2,' K_EFF                              :  ',F11.7)
 87   FORMAT(T2,' L_2 OUTER ITER RESID CONV. CRITERIA: ',
     &  2X,E12.5,2X,E12.5)
 88   FORMAT(T2,' K_EFF CONV. CRITERIA               : ',
     &  2X,E12.5,2X,E12.5)
 89   FORMAT(T2,' L_INF OUTER ITER ERROR CONV. CRITER: ',
     &  2X,E12.5,2X,E12.5)
 90   FORMAT(T2,' CHEBYSHEV POLY. ORDER              : ',4X,I2)
 91   FORMAT(T2,' L_2 RELATIVE RESID KICKOUT CRITERIA: ',
     &  2X,E12.5,2X,E12.5)
 92   FORMAT(T2,' L_2 TRUE RESIDUAL CONV. CRITERIA   : ',
     &  2X,E12.5,2X,E12.5)
 300  FORMAT(/6X,'L_INF FISSION SOURCE REL ERROR     =',E12.5,
     &  /6X,'L_2 OUTER ITERATIVE REL RESIDUAL   =',E12.5,
     &  /6X,'L_2 TRUE RELATIVE RESIDUAL         =',E12.5,
     &  /6X,'EIGENVALUE ERROR                   =',E12.5,
     &  /6X,'ORDER=',I3,' SIGMA=',E11.5,' SIGMA EST.=',E12.5,
     &  /6X,'EIGENVALUE=',E14.7/)
 399  FORMAT(/6X,'L_INF FISSION SOURCE REL ERROR     =',E12.5,
     &  /6X,'L_2 OUTER ITERATIVE REL RESIDUAL   =',E12.5,
     &  /6X,'L_2 TRUE RELATIVE RESIDUAL         =',E12.5,
     &  /6X,'ORDER=',I3,' SIGMA=',E11.5,' SIGMA EST.=',E12.5,
     &  /6X,'POWER LEVEL=',E14.7/)
      
      RETURN
      END
      
      FUNCTION ACOSH(x)
C     
C     STATEMENT FUNCTION TO COMPUTE INVERSE COSINE HYPERBOLIC OF X :
C     
      REAL*8 X, ACOSH !VMQ
      ACOSH=DLOG(X+SQRT(X*X-1.0))
!VMQ      ACOSH=ALOG(X+SQRT(X*X-1.0))

      RETURN
      END
