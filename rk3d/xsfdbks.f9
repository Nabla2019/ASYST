      SUBROUTINE XSFDBKS(
     $  NCOLZ,NCOLXY,FRACT,TXT,TCA,TCR,
     $  CAROS,CARIS,CRROS,CRRIS,RNFROS,RNFRIS,
     $  TXTS,TNFS,TPFS,TTCOLIN,RHOW,RHOWREF,RHOWMREF,REFB,
     $  TCOLC,TCOLREF,DOPL,PFROS,PFRIS)
C
C     This subroutine determines the macroscopic and microscopic 
C     cross sections and other neutronic values on the six surfaces 
C     of a hexagonal assembly (NSHAP = HEXA only).
C
      include 'param.fcb'
      include 'geom.fcb'
      include 'xsec1.fcb'
      include 'nterm.fcb'
      include 'nonfue.fcb'
      include 'xspolycom.fcb'
      include 'array.fcb'
      include 'varlen.fcb'
      include 'varlens.fcb'
      include 'convfact.fcb'
      include 'veloc.fcb'
      include 'soln2.fcb'
      include 'cntl.fcb'
      include 'thermo.fcb'
      include 'thcoef.fcb'


      DIMENSION 
     $  NCOLXY(NXYLMAX,NFIGURE),NCOLZ(NZ),FRACT(NXYL,NZ),
     $  TXT(NXYL,NZ,NG),TCA(NXYL,NZ,NG),TCR(NXYL,NZ,NG),
     $  TXTS(6,NXYL,NZ,NG),TNFS(6,NXYL,NZ,NG),TPFS(6,NXYL,NZ,NG),
     $  CAROS(6,NXYL,NZ,NG,NTERMMACTRO),
     $  CRROS(6,NXYL,NZ,NG,NTERMMACTRO),
     $  RNFROS(6,NXYL,NZ,NG,NTERMMACTRO),
     $  PFROS(6,NXYL,NZ,NG,NTERMMACTRO),
     $  CARIS(6,NXYL,NZ,NG,NTERMMACTRI),
     $  CRRIS(6,NXYL,NZ,NG,NTERMMACTRI),
     $  RNFRIS(6,NXYL,NZ,NG,NTERMMACTRI),
     $  PFRIS(6,NXYL,NZ,NG,NTERMMACTRI)
      
      DIMENSION TTCOLIN(*),DOPL(NXYL,*),RHOW(NXYL,*),RHOWMREF(*),
     $  TCOLC(NXYL,*),RHOWREF(*),TCOLREF(*),REFB(*)

      AVOGADRO = 0.602322
C      RHOWR= PROPPOLY(NPOLRHOWC,COF_RHOWC,UCOLIN, !vmq
C     &  SC0_RHOWC,SC1_RHOWC) !vmq
      
C     
C---- COMPUTE COOLANT DENSITY CORRECTION COEFFICIENTS
C---- AND SOLUBLE POISON CORRECTION COEFFICIENTS
C     
C CALCULATION FOR NZ=1 done externally for avoiding iftest !vmq
      IZ=1
      DO 4 IXY=1,NXYL
        I=NCOLXY(IXY,NCOLZ(1))
        RHOWAVG=RHOW(IXY,1)

        DRHOW=RHOWAVG-RHOWREF(I)

        IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
         IF(NSP.EQ.'C') THEN
          IF(ANFDBK.EQ.'N') THEN
           RHOWPPM=RHOWREF(I)
          ELSE
           RHOWPPM=RHOWAVG
          ENDIF
         ELSEIF(NSP.EQ.'M') THEN
          IF(ANFDBK.EQ.'N') THEN
           RHOWPPM=RHOWMREF(I)
          ELSE
C     MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
          ENDIF
         ENDIF
         DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
     &     *(PM-REFB(I))*RHOWPPM
        ELSEIF(NSP.EQ.'A') THEN
C     MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,1)
        ENDIF

        DTCOLC=TCOLC(IXY,1)-TCOLREF(I)

        IF(NMOD.EQ.'N') THEN
         DRHOWM=0.0
         DTMODC=0.0
        ELSE
C     MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C     MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
        ENDIF

        DSQTAVF=DOPL(IXY,1)
        FRACTRO=1.-FRACT(IXY,1)
        FRACTRI=FRACT(IXY,1)
C     
C---  WARNING: CALLS TO XSECPOLY INVOLVE LOCAL VARIABLES PASSED
C---  THROUGH COMMON [include 'xspolycom.fcb']
C     

        DO 4219 ISUR=1,6

         DO 410 IG=1,NG
          NGTEMP=1
          IGP=1 

          IF(I.GT.NFUEXY) THEN
           TNFS(ISUR,IXY,1,IG) =
     &       XSECPOLYS(FRACTRO,NTERMMACTRO,IXSMACTRO,RNFROS,ISUR)
     &       +XSECPOLYS(FRACTRI,NTERMMACTRI,IXSMACTRI,RNFRIS,ISUR)
           TPFS(ISUR,IXY,1,IG) =
     &       XSECPOLYS(FRACTRO,NTERMMACTRO,IXSMACTRO,PFROS,ISUR)
     &       +XSECPOLYS(FRACTRI,NTERMMACTRI,IXSMACTRI,PFRIS,ISUR)
          ENDIF
          
          TCAS=
     &      XSECPOLYS(FRACTRO,NTERMMACTRO,IXSMACTRO,CAROS,ISUR)
     &      +XSECPOLYS(FRACTRI,NTERMMACTRI,IXSMACTRI,CARIS,ISUR)

          TCRS=
     &      XSECPOLYS(FRACTRO,NTERMCSCATRO,IXSCSCATRO,CRROS,ISUR)
     &      +XSECPOLYS(FRACTRI,NTERMCSCATRI,IXSCSCATRI,CRRIS,ISUR)
          
          NGTEMP=1
          IGP=1
C     
C     TXT : ABS + REMOVAL X-SEC WHICH WILL BE USED IN THE NEM 2-NODE 
C     PROBLEM
C     
          SB=TCAS+TXT(IXY,1,IG)-TCR(IXY,1,IG)-TCA(IXY,1,IG)
          TXTS(ISUR,IXY,1,IG) = SB + TCRS
          
 410      CONTINUE

 4219    CONTINUE

 4    CONTINUE
      
      DO 119 IZ=2,NZ
       DO 19 IXY=1,NXYL
       I=NCOLXY(IXY,NCOLZ(IZ))
C        IF(IZ.EQ.1) RHOWBOT=RHOW(IXY,IZ)  ! THEN vmq
C         IF(ITRANSIT.EQ.0) THEN !vmq
C          RHOWBOT=RHOWR !vmq
C         ELSE !vmq 
C          UCOLBOT=PROPPOLY(NPOLUCOL,COF_UCOL,TTCOLIN(IXY), !vmq
C     &      SC0_UCOL,SC1_UCOL) !vmq
C          RHOWBOT=PROPPOLY(NPOLRHOWC,COF_RHOWC,UCOLBOT, !vmq
C     &      SC0_RHOWC,SC1_RHOWC) !vmq
C         ENDIF
C        ELSE
        RHOWBOT=RHOW(IXY,IZ-1) !vmq
C        ENDIF
        RHOWAVG=(RHOW(IXY,IZ)+RHOWBOT)*0.5

        DRHOW=RHOWAVG-RHOWREF(I)

        IF(NSP.EQ.'C'.OR.NSP.EQ.'M') THEN
         IF(NSP.EQ.'C') THEN
          IF(ANFDBK.EQ.'N') THEN
           RHOWPPM=RHOWREF(I)
          ELSE
           RHOWPPM=RHOWAVG
          ENDIF
         ELSEIF(NSP.EQ.'M') THEN
          IF(ANFDBK.EQ.'N') THEN
           RHOWPPM=RHOWMREF(I)
          ELSE
C     MOD---SET RHOWPPM EQUAL TO MODERATOR DENSITY NODE AVERAGE VALUE
          ENDIF
         ENDIF
         DELSOLP=( AVOGADRO*ABUN_SOLP/ATMW_SOLP )*1E-06
     &     *(PM-REFB(I))*RHOWPPM
        ELSEIF(NSP.EQ.'A') THEN
C     MOD---DETERMINE DELSOLP FROM RHOWNSP(IXY,IZ)
        ENDIF

        DTCOLC=TCOLC(IXY,IZ)-TCOLREF(I)

        IF(NMOD.EQ.'N') THEN
         DRHOWM=0.0
         DTMODC=0.0
        ELSE
C     MOD---NEED TO INSERT CALCULATION OF RHOWM AND TMODC [NODE AVERAGE VALUES]
C     MOD---FOLLOWED BY CALCULATION OF DRHOWM AND DTMODC                  
        ENDIF

        DSQTAVF=DOPL(IXY,IZ)
        FRACTRO=1.-FRACT(IXY,IZ)
        FRACTRI=FRACT(IXY,IZ)
C     
C---  WARNING: CALLS TO XSECPOLY INVOLVE LOCAL VARIABLES PASSED
C---  THROUGH COMMON [include 'xspolycom.fcb']
C     

        DO 219 ISUR=1,6

         DO 10 IG=1,NG
          NGTEMP=1
          IGP=1 

          IF(I.GT.NFUEXY) THEN
           TNFS(ISUR,IXY,IZ,IG) =
     &       XSECPOLYS(FRACTRO,NTERMMACTRO,IXSMACTRO,RNFROS,ISUR)
     &       +XSECPOLYS(FRACTRI,NTERMMACTRI,IXSMACTRI,RNFRIS,ISUR)
           TPFS(ISUR,IXY,IZ,IG) =
     &       XSECPOLYS(FRACTRO,NTERMMACTRO,IXSMACTRO,PFROS,ISUR)
     &       +XSECPOLYS(FRACTRI,NTERMMACTRI,IXSMACTRI,PFRIS,ISUR)
          ENDIF
          
          TCAS=
     &      XSECPOLYS(FRACTRO,NTERMMACTRO,IXSMACTRO,CAROS,ISUR)
     &      +XSECPOLYS(FRACTRI,NTERMMACTRI,IXSMACTRI,CARIS,ISUR)

          TCRS=
     &      XSECPOLYS(FRACTRO,NTERMCSCATRO,IXSCSCATRO,CRROS,ISUR)
     &      +XSECPOLYS(FRACTRI,NTERMCSCATRI,IXSCSCATRI,CRRIS,ISUR)
          
          NGTEMP=1
          IGP=1
C     
C     TXT : ABS + REMOVAL X-SEC WHICH WILL BE USED IN THE NEM 2-NODE 
C     PROBLEM
C     
          SB=TCAS+TXT(IXY,IZ,IG)-TCR(IXY,IZ,IG)-TCA(IXY,IZ,IG)
          TXTS(ISUR,IXY,IZ,IG) = SB + TCRS
          
 10      CONTINUE

 219    CONTINUE

 19    CONTINUE
 119  CONTINUE

      RETURN
      END
