      SUBROUTINE INITAL(
     &  BUNODE,EXPINIT,DLN,DLL,DLW,DLNV,DLNU,FRACT,
     &  DI,DU38,DPU39,DPU40,DPU41,DU35,DLFP1,DLFP2,DPU42,FNSWT,
     &  FNOLDT,DZ,AREA,WTFR,DXE,DIO,DPM,DSM,SWOLD,
     &  SW,SWS,GGMK,TAVF,HEFF,RHOW,RT,NCOLXY,NCOLZ,ALPHAT,FUFR,VOLU,
     &  TCOLC,DOPL,UNEW,DU36,DU34,DBP,CI,HEATFLUX,PWRDN,
     &  WOM,WOMO,ITRR,FNPPOT,TTCOLIN,TMODC,DAM41)
C     
C     THIS SUBROUTINE INITIALIZES THE FLUX, FISSION SOURCE & T-H CONDITIONS
C     GUESSES, OR FOR RESTART OPTION ON READS IN THE RESTART FILE
      use iss_rk3d_int,   ONLY: rel2rk3d !vmq
C     
      include 'param.fcb'
      include 'burn.fcb'
      include 'cntl.fcb'
      include 'crod.fcb'
      include 'extsor.fcb'
      include 'geom.fcb'
      include 'nonfue.fcb'
      include 'soln2.fcb'
      include 'thermo.fcb'
      include 'thermk.fcb'
      include 'crit.fcb'
      include 'start.fcb'
      include 'che.fcb'
      include 'gasch.fcb'
      include 'restinp.fcb'
      include 'cheby.fcb'
      include 'bpitch.fcb'
      include 'thcoef.fcb'
      include 'th_cof.fcb'
      include 'xeopt.fcb'
      include 'xsec1.fcb'
      include 'numsurf.fcb'
      include 'outlong.fcb'
      include 'perttr.fcb'
      include 'array.fcb'
      include 'varlen.fcb'
      include 'nterm.fcb'
      include 'dataf.fcb'
      include 'bcshex.fcb'
      include 'nemcnt.fcb'
      
      DIMENSION
     &  NCOLXY(NXYLMAX,*)                ,NCOLZ(*)             ,
     &  FUFR(*)                          ,UNEW(NXYL,*)         ,
     &  RHOW(NXYL,*)                     ,GGMK(NXYL,*)         ,
     &  RT(*)                            ,TAVF(NXYL,*)         ,
     &  HEFF(NXYL,*),SW(NXYL,NZ,*),SWS(6,NXYL,NZ,NG),
     &  SWOLD(NXYL,NZ,*)                 ,DXE(NXYL,*)          ,
     &  DIO(NXYL,*)                      ,DPM(NXYL,*)          ,
     &  DSM(NXYL,*)                      ,WTFR(*)              ,
     &  BUNODE(NXYL,*),EXPINIT(NXYLMAX,*),DLN(NXYT,NZ,*)       ,
     &  DLL(NXYL,NZ+1,*)                 ,DLW(NXYT,NZ,*)       ,
     &  DLNV(NXYT,NZ,*)                  ,DLNU(NXYT,NZ,*)      ,
     &  FNSWT(NXYL,*)                    ,VOLU(NXYL,*)         ,
     &  FNOLDT(NXYL,*)                   ,DZ(0:*)              ,
     &  AREA(*)                          ,ALPHAT(NXYL,NZ,*)    ,
     &  DI(NXYL,NZ,*)                    ,DU38(NXYL,*)         ,
     &  DPU39(NXYL,*)                    ,DPU40(NXYL,*)        ,
     &  DPU41(NXYL,*)                    ,DU35(NXYL,*)         ,
     &  DLFP1(NXYL,*)                    ,DLFP2(NXYL,*)        ,
     &  DPU42(NXYL,*)                    ,FRACT(NXYL,*)        ,
     &  TCOLC(NXYL,*)                    ,DOPL(NXYL,*)         ,
     &  DU36(NXYL,*)                     ,DBP(NXYL,*)          ,
     &  DU34(NXYL,*)                     ,CI(NXYL,NZ,*)        ,
     &  HEATFLUX(NXYL,*)                 ,PWRDN(NXYL,*)        ,
     &  WOM(*)                           ,ITRR(*)              ,
     &  FNPPOT(NXYL,*)                   ,TTCOLIN(*)           ,
     &  WOMO(*)                          ,TMODC(NXYLMOD,*)     ,
     &  DAM41(NXYL,*)

      DIMENSION IXTMP(11)
      
      CHARACTER*8 NNEW
      
C     
C---- INITIALIZE VARIABLES
C     
      DELTAT=0.0
      
      DO 1982 IZ=1,NZ
       DO 1983 IXY=1,NXYL
        DO 1984 IG=1,NG
         ALPHAT(IXY,IZ,IG) = 0.D0
 1984   CONTINUE
 1983  CONTINUE
 1982 CONTINUE
      
      DO 1986 IZ=1,NZ
       DO 1987 IXY=1,NXYL
        FNOLDT(IXY,IZ) = 0.00
 1987  CONTINUE
 1986 CONTINUE

      DO 1968 IG=1,NG
       DO 1978 IZ=1,NZ
        DO 1988 IXY=1,NXYL
         SWOLD(IXY,IZ,IG) = 0.00
 1988   CONTINUE
 1978  CONTINUE
 1968 CONTINUE
      
      DO 1969 I=1,NDECAY
       DO 1979 IZ=1,NZ
        DO 1989 IXY=1,NXYL
         DI(IXY,IZ,I) = 0.00
 1989   CONTINUE
 1979  CONTINUE
 1969 CONTINUE

      DO 1980 IZ=1,NZ
       DO 1990 IXY=1,NXYL
        FRACT(IXY,IZ) = 0.00
 1990  CONTINUE
 1980 CONTINUE

      IF(IMICRO.EQ.'Y') THEN
       
       ITERM=1
       DO 102 IM=1,NTERMMACRO
        DO 101 IK=1,NTERMMICRO
         IF (IXSMICRO(IK).EQ.IXSMACRO(IM)) GOTO 102
 101    CONTINUE
        IXTMP(ITERM)=IXSMACRO(IM)
        ITERM=ITERM+1
 102   CONTINUE
       DO 103 IK=1,NTERMMICRO
        IXTMP(ITERM)=IXSMICRO(IK)
        ITERM=ITERM+1
 103   CONTINUE
       
       IXBOUND=0
       DO 105 ITERM1=1,NTERMMACTRO
        IXMIN=100
        DO 104 ITERM2=1,NTERMMACTRO
         IX=IXTMP(ITERM2)
         IF(IX.LT.IXMIN.AND.IX.GT.IXBOUND) IXMIN=IX
 104    CONTINUE
        IXBOUND=IXMIN
        IXSMACTRO(ITERM1)=IXMIN
 105   CONTINUE
       
       ITERM=1
       DO 202 IM=1,NTERMMACRI
        DO 201 IK=1,NTERMMICRI
         IF (IXSMICRI(IK).EQ.IXSMACRI(IM)) GOTO 202
 201    CONTINUE
        IXTMP(ITERM)=IXSMACRI(IM)
        ITERM=ITERM+1
 202   CONTINUE
       DO 203 IK=1,NTERMMICRI
        IXTMP(ITERM)=IXSMICRI(IK)
        ITERM=ITERM+1
 203   CONTINUE
       
       IXBOUND=0
       DO 205 ITERM1=1,NTERMMACTRI
        IXMIN=100
        DO 204 ITERM2=1,NTERMMACTRI
         IX=IXTMP(ITERM2)
         IF(IX.LT.IXMIN.AND.IX.GT.IXBOUND) IXMIN=IX
 204    CONTINUE
        IXBOUND=IXMIN
        IXSMACTRI(ITERM1)=IXMIN
 205   CONTINUE
      ELSE
       
       DO 106 ITERM=1,NTERMMACRO
        IXSMACTRO(ITERM)=IXSMACRO(ITERM)
 106   CONTINUE
       
       DO 206 ITERM=1,NTERMMACRI
        IXSMACTRI(ITERM)=IXSMACRI(ITERM)
 206   CONTINUE
       
      ENDIF
C     
C---- CALCULATE COOLANT DENSITY AT TCOLREF (DEGREE-F) :
C     
C      UCOLIN = PROPPOLY(NPOLUCOL,COF_UCOL,TCOLIN, !vmq
C     &  SC0_UCOL,SC1_UCOL) !vmq
C      RHOWR = PROPPOLY(NPOLRHOWC,COF_RHOWC,UCOLIN, !vmq
C     &  SC0_RHOWC,SC1_RHOWC) !vmq
C      UCOLL = PROPPOLY(NPOLUCOL,COF_UCOL,TCOLSAT, !vmq
C     &  SC0_UCOL,SC1_UCOL) !vmq
C      RHOL = PROPPOLY(NPOLRHOWC,COF_RHOWC,UCOLL, !vmq
C     &  SC0_RHOWC,SC1_RHOWC) !vmq
C      RHOWTMP = RHOWR !vmq
      SUM1=0.0
      SUM2=0.0
      DO 1991 IXY=1,NXYL
       IF(GMASS.GT..0) THEN
        GMASSIN=GMASS*WTFR(NCOLXY(IXY,NCOLZ(IZCOLS)))
       ELSE
        GMASSIN=ABS(GMASS)
       ENDIF
       DO 1992 IZ=1,NZ
        I = NCOLXY(IXY,NCOLZ(IZ))
        GGMK(IXY,IZ) = GMASSIN*( 1.0/WTFR(I) )
        IF(I.GT.NFUEXY) THEN
         SUM1=SUM1+FUFR(I)*VOLU(IXY,IZ)
         SUM2=SUM2+VOLU(IXY,IZ)
        ENDIF
 1992  CONTINUE
 1991 CONTINUE
C      GGMKTMP=ABS(GMASS) !vmq
      RHOWTFAV=(SUM1/SUM2)*RHOWTF
C     
C---- SET THE CHEBY BOOTSTRAP FLAG TO YES
C     
      NNEW = 'Y'
      
      SIGBAR=0.5
      SIGMA=SIGBAR
      WSCALEBAR=0.0
      WSCALE=WSCALEBAR
      
      IF(IRSTRT .EQ. 'Y') GOTO 130
C     
C---- INITIALIZE
C-------KEFF
C-------FLUXES
C-------POINT-WISE BURNUP
C-------XENON,SAMARIUM,IODINE,PREMITHIUM CONCENTRATIONS
      
      CKE=1.
      CKE_OLD=0.0 !vmq
      FA=2.54*ZFUEL
!vmq      
C      IF(ANFDBK .NE. 'Y') GOTO 111
C      DO 112 IXY=1,NXYL
C       IF(GMASS.GT..0) THEN
C        GMASSIN=GMASS*WTFR(NCOLXY(IXY,NCOLZ(IZCOLS)))
C       ELSE
C        GMASSIN=ABS(GMASS)
C       ENDIF
C       DELTUCOL=(QT*FA)/GMASSIN
C       RC=DELTUCOL*PR/FA
C       UCOLBOT=UCOLIN
C       DO 110 IZ=1,IZCOLE
C        I=NCOLXY(IXY,NCOLZ(IZ))
C        IF(I .GT. NFUEXY) THEN
C         UNEW(IXY,IZ)=UCOLBOT+RC*DZ(IZ)
C         UCOLBOT=UNEW(IXY,IZ)
C         
C         CALL FLUIDCON(IXY,IZ,TCOLIN,TCOLC,RHOW,UNEW)
CC     MOD
CC     MOD---NEED TO INITIALIZE TMODC AND RHOWM IF NMOD 'Y'
CC     MOD
CC     
CC     CORRECTING FOR FACT NFRODS NOW GIVEN BASED UPON A FUEL ASSEMBLY
CC     
C         FNFRODS = NFRODS * (AREA(IXY)/BAREA)
C         
C         AVKWFT = (AREA(IXY)/(FNFRODS))*PR*QT*CONVKWFT
C         
C         DELTEMP = TCOLC(IXY,IZ) - COF_TSF(0)
C         
C         TAVTF= PROPPOLY(NPOLTAF,COF_TAF,AVKWFT,
C     &     SC0_TAF,SC1_TAF)
C         
C         TAVF(IXY,IZ) = TAVTF + DELTEMP
C         TAVTFD = TAVF(IXY,IZ)
C         TCOLRANG = COF_TAF(0)
C         
C         IF(TAVTFD.LT.TCOLRANG) TAVTFD=TCOLRANG
C         
C         HEFF(IXY,IZ) =  PROPPOLY(NPOLHFF,COF_HFF,TAVTFD,
C     &     SC0_HFF,SC1_HFF)
C         
C         TAVF(IXY,IZ) =((AVKWFT/CONVKWFT)*DEPF)/
C     &     (HEFF(IXY,IZ)*SRFF)+TCOLC(IXY,IZ)
C
C        ELSE
C         
C         UNEW(IXY,IZ)  = UCOLIN
C         TCOLC(IXY,IZ) = TCOLIN
C         RHOW(IXY,IZ)  = RHOWR

        DO 32 IZ=1,NZ !vmq
         DO 22 IXY=1,NXYL !vmq
          DOPL(IXY,IZ)  = 0.0 !vmq
 22      CONTINUE !vmq
 32     CONTINUE !vmq

C         
C        ENDIF
C        
C 110   CONTINUE
C 112  CONTINUE
C      
C      IF(NZ.GT.1)THEN
C       DO 116 IZ=IZCOLE+1,NZ
C        DO 115 IXY=1,NXYL
C         I=NCOLXY(IXY,NCOLZ(IZCOLE))
C         IF(I .GT. NFUEXY) THEN
C          UNEW(IXY,IZ)=UNEW(IXY,IZCOLE)
C          CALL FLUIDCON(IXY,IZ,TCOLIN,TCOLC,RHOW,UNEW)
C         ELSE
C          UNEW(IXY,IZ)  = UCOLIN
C          TCOLC(IXY,IZ) = TCOLIN
C          RHOW(IXY,IZ)  = RHOWR
C          DOPL(IXY,IZ)  = 0.0
C         ENDIF
C 115    CONTINUE
C 116   CONTINUE
C      ENDIF
C      
C 111  CONTINUE
      
      Z=0.0
      DO 122 IZ=1,NZ
       IF(IZ.GE.IZCOLS.AND.IZ.LE.IZCOLE) THEN
        Z=Z+DZ(IZ)
        ZM=Z-DZ(IZ)/2.
       ELSE
        ZM=DZ(IZCOLS)/2.
       ENDIF
       FA1=SIN(3.141593*ZM/FA)
       
       IF(FA1 .LE. 1.E-28) FA1=1.E-28
       
       DO 120 IXY=1,NXYL
        DO 121 IG=1,NG
         SW(IXY,IZ,IG) = RT(IG)*FA1
 121    CONTINUE
        
        BUNODE(IXY,IZ)=EXPINIT(IXY,IZ)
       
        DXE(IXY,IZ)=0.0
        DSM(IXY,IZ)=0.0
        DIO(IXY,IZ)=0.0
        DPM(IXY,IZ)=0.0
        
 120   CONTINUE
 122  CONTINUE
      
      RETURN
      
 130  CONTINUE
C     
C     
C========>>>>>>> INITIALIZE THE RESTART FILE <<<<<<<============
C     
C---  NEW--- INITIAL KEFF VALUE
C---------SOLUBLE POISON PPM
C---  NEW--- CHEBYSHEV ACCELERATION PARAMETERS
C---------FLUX
C---  NEW--- CURRENT ITERATION FISSION SOURCE
C---------POINT-WISE BURNUP
C---------XENON,SAMARIUM,IODINE,PREMITHIUM CONCENTRATIONS
C     
      IF(CRTON.EQ.'Y') THEN
       WRITE(6,*)'  '
       WRITE(6,*)' ########## READING FROM A RESTART FILE ############'
       WRITE(6,*) '     '
       WRITE(6,*) '     '
      ENDIF
      
C     
C---- OPEN RESTART INPUT FILE (UNIT=9) :
C     
      OPEN(UNIT=9,FILE=RESTRT,STATUS='OLD',FORM='UNFORMATTED')

      READ (9) IRSTRTB
      WRITE(55,*)
      WRITE(55,*)'*************************************************'
      IF(IRSTRTB.EQ.'TR') THEN
       WRITE (55,2705)
 2705  FORMAT(T10,' RESTARTING FROM TRANSIENT BASIS')
      ELSE
       WRITE (55,2706)
 2706  FORMAT(T10,' RESTARTING FROM STEADY-STATE BASIS')
      ENDIF
      WRITE(55,*)'*************************************************'
      WRITE(55,*)

      READ (9) EFFKINP
      READ (9) PM
      PM_OLD=PM !vmq
      READ (9) SIGBAR,WSCALEBAR,FISLNN
      SIGMA=SIGBAR
      WSCALE=WSCALEBAR
      READ (9) ERRATN,FLAMDA
      
      DO 140 IZ=1,NZ
       READ (9) ((SW(IXY,IZ,IG),IG=1,NG),IXY=1,NXYL)
 140  CONTINUE
      
      DO 1140 IZ=1,NZ
       READ (9) (FNSWT(IXY,IZ),IXY=1,NXYL)
 1140 CONTINUE
      
      DO 150 IZ=1,NZ
       READ (9) (BUNODE(IXY,IZ),IXY=1,NXYL)
 150  CONTINUE
      
      DO 160 IZ=1,NZ
       READ (9) (DXE(IXY,IZ),DSM(IXY,IZ),DIO(IXY,IZ),
     *   DPM(IXY,IZ),IXY=1,NXYL)
 160  CONTINUE
      
      IF(IMICRO.EQ.'Y')THEN
       DO 9160 IZ=1,NZ
        READ (9) (DU34(IXY,IZ),DU35(IXY,IZ),DU36(IXY,IZ),
     *    DU38(IXY,IZ),DPU39(IXY,IZ),DPU40(IXY,IZ),
     *    DPU41(IXY,IZ),DPU42(IXY,IZ),
     $    DAM41(IXY,IZ),DLFP1(IXY,IZ),
     *    DLFP2(IXY,IZ),DBP(IXY,IZ),IXY=1,NXYL)
 9160  CONTINUE
      ENDIF

      IF(NSHAP.EQ.'CART') THEN
       READ(9) NSURFX,NSURFY,NSURFZ
       DO 180 IZ=1,NZ
        READ (9) ((DLW(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFX)
 180   CONTINUE
       
       DO 200 IZ=1,NZ
        READ (9) ((DLN(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFY)
 200   CONTINUE
       
       DO 220 IZ=1,NSURFZ
        READ (9) ((DLL(IXY,IZ,IG),IG=1,NG),IXY=1,NXYL)
 220   CONTINUE
      ENDIF
      
      IF(NSHAP.EQ.'HEXA') THEN
       READ(9) NSURFX,NSURFV,NSURFU,NSURFZ
       DO 2180 IZ=1,NZ
        READ (9) ((DLW(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFX)
 2180  CONTINUE
       DO 2200 IZ=1,NZ
        READ (9) ((DLNV(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFV)
 2200  CONTINUE
       DO 2220 IZ=1,NZ
        READ (9) ((DLNU(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFU)
 2220  CONTINUE
       
       DO 2240 IZ=1,NSURFZ
        READ (9) ((DLL(IXY,IZ,IG),IG=1,NG),IXY=1,NXYL)
 2240  CONTINUE
C
C     INITIALIZE SURFACE FLUXES AND COEFFICIENTS
C         
       DO IXY=1,NXYL
        DO IZ=1,NZ
         DO IG=1,2
          DO 123 ISUR=1,6
           SWS(ISUR,IXY,IZ,IG)=SW(IXY,IZ,IG)
 123      CONTINUE
         ENDDO
        ENDDO
       ENDDO
      ENDIF
      
C     
C---- TH DATA
C     
      
      DO 1150 IZ=1,NZ
       READ (9) (UNEW(IXY,IZ),IXY=1,NXYL)
C       DO 1145 IXY=1,NXYL  !vmq
C        CALL FLUIDCON(IXY,IZ,TCOLIN,TCOLC,RHOW,UNEW) !vmq
C 1145  CONTINUE !vmq
 1150 CONTINUE
      
      IF(NMOD.EQ.'Y') THEN
       DO 1155 IZ=1,NZ
        READ (9) (TMODC(IXY,IZ),IXY=1,NXYL)
C     MOD---NEED TO INITIALIZE RHOWM IF NMOD 'Y'
 1155  CONTINUE
      ENDIF
      
      DO 1160 IZ=1,NZ
       READ (9) (TAVF(IXY,IZ),IXY=1,NXYL)
 1160 CONTINUE
      
      DO 1161 IZ=1,NZ
       READ (9) (DOPL(IXY,IZ),IXY=1,NXYL)
 1161 CONTINUE

C     
C---- ASSORTED TRANSIENT DATA
C     
      IF(IRSTRTB .EQ. 'TR') THEN
       READ(9) IFIRST,DELTAT,TIMEELAPS,TIMEELAPSO,ITC,ITR,IPR
       READ(9) (WOM(IG),ITRR(IG),IG=1,NG)
       DO 1162 IG=1,NG
        WOMO(IG)=1.-WOM(IG)
 1162  CONTINUE 
       READ(9) (TTCOLIN(IXY),IXY=1,NXYL)
       DO 1169 IPREC=1,NPREC
        DO 1170 IZ=1,NZ
         READ(9) (CI(IXY,IZ,IPREC),IXY=1,NXYL)
 1170   CONTINUE
 1169  CONTINUE
       DO 1171 IZ=1,NZ
        READ(9) (GGMK(IXY,IZ),IXY=1,NXYL)
 1171  CONTINUE
       DO 1172 IZ=1,NZ
        READ(9) (HEATFLUX(IXY,IZ),IXY=1,NXYL)
 1172  CONTINUE
       DO 1173 IZ=1,NZ
        READ(9) (PWRDN(IXY,IZ),IXY=1,NXYL)
 1173  CONTINUE
       DO 1174 IZ=1,NZ
        READ(9) (HEFF(IXY,IZ),IXY=1,NXYL)
 1174  CONTINUE
       DO 1165 IDECAY=1,NDECAY
        DO 1175 IZ=1,NZ
         READ(9) (DI(IXY,IZ,IDECAY),IXY=1,NXYL)
 1175   CONTINUE
 1165  CONTINUE
       DO 1176 IZ=1,NZ
        READ(9) (FNPPOT(IXY,IZ),IXY=1,NXYL)
 1176  CONTINUE
      ENDIF

      CLOSE(UNIT=9) 
C     
C---- FOR RESTART CASE SET THE SIGMA/WSCALE UPPER BOUNDS FLAG TO 'N'
C     
      NNEW = 'N'
      
C     
C------------------END OF  RESTART FILE READING----------------------
C
!vmq
C
C---  READ TH DATA FROM RS4
C
      CALL rel2rk3d !vmq
          
C---- INITIALIZE THE CHEBYSHEV/WEILANDT CYCLE [ NEWCP=1 ]
C     
      NEWCP = 1
      
C     
C---- FOR CLEAN CORE INTITIALIZE THE XENON-SAMARIUM NUMBER DENSITIES
C     
      IF (IXE(1).EQ.1) THEN
       DO 7181 IZ=1,NZ
        DO 7180 IXY=1,NXYL
         DXE(IXY,IZ)=0.0
         DSM(IXY,IZ)=0.0
         DIO(IXY,IZ)=0.0
         DPM(IXY,IZ)=0.0
 7180   CONTINUE
 7181  CONTINUE
      ELSEIF(IXE(1).EQ.6)THEN
       DO 7183 IZ=1,NZ
        DO 7182 IXY=1,NXYL
         DXE(IXY,IZ)=0.0
         DIO(IXY,IZ)=0.0
         DPM(IXY,IZ)=0.0
 7182   CONTINUE
 7183  CONTINUE
      ENDIF

      RETURN
      END

