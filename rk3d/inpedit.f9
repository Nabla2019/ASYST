      SUBROUTINE INPEDIT(
     &  AVBU,ISAVE,OUT,TIMETR,PMT,TINT,GMINT,ZBT,
     &  TIMEPR,TIMESP,DELT,TIMEFP,PRFP,PMFP,TINFP,ZBFP)
C    
C     THIS SUBROUTINE EDITS OUT INPUT ASSOCIATED WITH THE TRANSIENT CASE,
C     METHOD OF SOLUTION CONTROL, CONTROL OPTIONS, I/O FILE NAMES,
C     AND IF ELECTED CROSS-SECTIONS AND T-H PARAMETERS.
C
      include 'param.fcb'
      include 'crod.fcb'
      include 'nonfue.fcb'
      include 'nemcnt.fcb'
      include 'soln2.fcb'
      include 'cntl.fcb'
      include 'cntl2.fcb'
      include 'bcs.fcb'
      include 'bcshex.fcb'
      include 'burn.fcb'
      include 'xeopt.fcb'
      include 'opti.fcb'
      include 'perttr.fcb'
      include 'dataf.fcb'
      include 'varlen.fcb'
      include 'array.fcb'
      include 'adj.fcb'
      include 'only.fcb'
      include 'che.fcb'
      include 'spectral.fcb'
      include 'extsor.fcb'
      include 'depletepc.fcb'
      include 'outlong.fcb'
      include 'nterm.fcb'
      include 'convfact.fcb'
      include 'thermo.fcb'

      DIMENSION TIMETR(*)       ,PMT(*)            ,TINT(*)         ,
     &  GMINT(*)          ,ZBT(NBMAX,*)    ,
     &  TIMEPR(*)       ,TIMESP(*)         ,DELT(*)         ,
     &  TIMEFP(*)       ,PRFP(*)           ,PMFP(*)         ,
     &  TINFP(*)        ,ZBFP(NBMAX,*)     ,
     &  ISAVE(*)        ,OUT(*)            ,AVBU(*)
      
      CHARACTER*40 OUT
      CHARACTER*8  ISAVE
      CHARACTER*24 CHRA
      CHARACTER*8  CHR,CHRST,CHADJ,VARSIG
      CHARACTER*40 CHRB,AWHICH
      
      AOUTREF(1)='FLUX'
      AOUTREF(2)='PREL'
      AOUTREF(3)='DCOOL'
      AOUTREF(4)='TCOOL'
      AOUTREF(5)='TFUEL'
      AOUTREF(6)='BU'
      AOUTREF(7)='I135'
      AOUTREF(8)='XE135'
      AOUTREF(9)='PM149'
      AOUTREF(10)='SM149'
      AOUTREF(11)='U234'
      AOUTREF(12)='U235'
      AOUTREF(13)='U236'
      AOUTREF(14)='U238'
      AOUTREF(15)='PU239'
      AOUTREF(16)='PU240'
      AOUTREF(17)='PU241'
      AOUTREF(18)='PU242'
      AOUTREF(19)='LFPG1'
      AOUTREF(20)='LFPG2'
      AOUTREF(21)='BP'
      AOUTREF(22)='ADJFL'
      AOUTREF(23)='DMOD'
      AOUTREF(24)='TMOD'
      AOUTREF(25)='KINF'
      AOUTREF(26)='TCD'
      AOUTREF(27)='TCA'
      AOUTREF(28)='TXT'
      AOUTREF(29)='TNF'
      AOUTREF(30)='TPF'
      AOUTREF(31)='XEAB'
      AOUTREF(32)='SMAB'
      AOUTREF(33)='AM241'
C
C     CHECKING LONG OUTPUT REQUEST
C
      DO 101 I=1,NOUTLONG
       DO J=1,33
        IF(AOUTLONG(I).EQ.AOUTREF(J))GOTO 101
       ENDDO
       WRITE(6,102)AOUTLONG(I)
       WRITE(55,*)'***** input error - CNTL file *****'
       WRITE(55,102)AOUTLONG(I)
 101  CONTINUE
 102  FORMAT('LONG OUTPUT EDIT OPTION: ',A5,' IS INVALID')
      
      WRITE(55,1999)
 1999 FORMAT(//T21,'(( CONTROL OPTION EDIT ))',//)
      
      WRITE (55,2799)
 2799 FORMAT (/T7,' INPUT FILES READ : ',/)
      
      WRITE (55,2800)CNTRL
 2800 FORMAT(T10,' CONTROL PARAMETERS      : ',A40)
      
      WRITE (55,2801)GEOM
 2801 FORMAT(T10,' GEOMETRICAL PARAMETERS  : ',A40)
      
      WRITE (55,2802)XSECT
 2802 FORMAT(T10,' PHYSICAL PARAMETERS     : ',A40)
      
      WRITE (55,2803)KINET
 2803 FORMAT(T10,' TRANSIENT PARAMETERS    : ',A40)
      
      WRITE (55,2804)PERFM
 2804 FORMAT(T10,' SOLUTION METHOD CONTROL : ',A40)
      
      IF(IRSTRT.EQ.'Y')THEN
       WRITE (55,2805)RESTRT
 2805  FORMAT(T10,' RESTART FILE            : ',A40,/)
      ENDIF

      IF(IEXP.EQ.'Y')THEN
       WRITE (55,2901)FINITEXP
 2901  FORMAT(T10,' INIT. EXP MAP FILE      : ',A40,/)       
      ENDIF
      
      IF(INUMDEN.EQ.'Y')THEN
       WRITE (55,2902)FNUMDEN
 2902  FORMAT(T10,' INIT. ISOT. NUMDEN FILE : ',A40,/)       
      ENDIF

      WRITE(55,*)'    '
      WRITE (55,2806)
 2806 FORMAT (/T7,' OUTPUT FILES WRITTEN : ',/)
      
      WRITE (55,2807)OUTPUTNES !vmq
 2807 FORMAT(T10,' HARDCOPY                : ',A40)
      
      NBUP1 = NBU+1
      DO 4350 I=1,NBUP1
       IF(ISAVE(I).EQ.'Y')THEN
        WRITE(55,4451)
 4451   FORMAT(/T10,' RESTART STEADY-STATE FILES:')
        WRITE(55,67)I,OUT(I)
 67     FORMAT (T12,' BURNUP STEP : ',I2,' FILE NAME : ',A40 )
       ENDIF
 4350 CONTINUE
      WRITE(55,*)
      
      IF(IADJ.EQ.'Y') THEN
       IF(ISAVEADJ.EQ.'Y') THEN
        WRITE(55,2808) OUTADJ
       ENDIF
 2808  FORMAT(T10,' ADJOINT FLUX            : ',A40)
      ENDIF
      
      IF(ITRAN .EQ. 'Y' )THEN
       IF(ISAVETR.EQ.'Y') THEN
        WRITE(55,3808) OUTTR
       ENDIF
 3808  FORMAT(T10,' TRANSIENT RESTART FILE  : ',A40)
      ENDIF
      WRITE(55,*)
      
      CHADJ='OFF'
      IF(IADJ.EQ.'Y') CHADJ='ON'
      WRITE(55,3454)CHADJ
 3454 FORMAT(/T15,' ADJOINT FLUX SOLUTION : ',A5)
      
      IF (IBURN.EQ.'Y') THEN
       IF(IMICRO.EQ.'Y')THEN
        WRITE(55,4417)
 4417   FORMAT(/T15,' MICROSCOPIC DEPLETION MODEL USED')
       ELSE
        WRITE(55,4428)
 4428   FORMAT(/T15,' MACROSCOPIC DEPLETION MODEL USED')
       ENDIF
      ELSE
       WRITE(55,4401)
 4401  FORMAT (/T15,' NO DEPLETION CALCULATIONS')
       
      ENDIF
      
      IF (IBURN.EQ.'Y') THEN
       IF (ADEPL.EQ.'CORR')  WRITE (55,5010)
       IF (ADEPL.EQ.'PRED')  WRITE (55,5015)
       
       IF (ANFDBK.EQ.'Y') THEN
        WRITE (55,5020) NDELPC
       ELSE
        WRITE (55,5025) NDELPC
       ENDIF
      ENDIF
 5010 FORMAT(/T20,' USE PREDICTOR-CORRECTOR METHOD')
 5015 FORMAT(/T20,' USE PREDICTOR METHOD')
 5020 FORMAT(/T20,' NUMBER OF OUTER ITERATION CYCLES BETWEEN'/
     &  T20,' PREDICTOR UPDATES: ',I4)
 5025 FORMAT(/T20,' NUMBER OF OUTER ITERATIONS BETWEEN'/
     &  T20,' PREDICTOR UPDATES: ',I4)
      
      NBUP1 = NBU+1
      IF (IBURN.EQ.'Y') THEN
       DO 4450 I=1,NBUP1
        WRITE (55,4414) AVBU(I)
 4414   FORMAT (T17,' CALCULATIONS PERFORMED AT A BURNUP OF :',3X,
     *    F7.1)
 4450  CONTINUE
      ENDIF
      
      IF (ASRCH.EQ.'Y') THEN
       CHR='ON'
      ELSE
       CHR='OFF'
      ENDIF
      
      WRITE (55,4405) CHR
 4405 FORMAT (/T15,' SEARCH OPTION   : ',A5)
      
      IF(CHR.EQ.'ON')THEN
       
       IF(IWHICH.EQ.1)AWHICH='POWER LEVEL ( RELATIVE )'
       IF(IWHICH.EQ.2)AWHICH='SOLUBLE POISON CONCENTRATION ( PPM ) '
       IF(IWHICH.EQ.3)AWHICH='INLET COOLANT TEMPERATURE ( F )'
       IF(IWHICH.EQ.4)AWHICH='CONTROL BANKS STEPS WITHDRAWN ( CM )'
       
       WRITE (55,4905) AWHICH
 4905  FORMAT (/T15,' SEARCH PARAMETER IS : ',A40)
       
      ENDIF
      
      CHRST = 'OFF'
      IF(IRSTRT.EQ.'Y')CHRST='ON'
      WRITE (55,4805)CHRST
 4805 FORMAT (/T15,' RESTART OPTION       : ',A5)
      
      IF (IRSTRT.EQ.'Y') WRITE (55,4404) AVBU(1)
 4404 FORMAT (/T15,' RESTART FROM A PREVIOUS CASE AT',E11.4,
     *  ' MWD/MTM')
      
      IF (ANFDBK .EQ. 'Y') THEN
       CHR='ON'
      ELSE
       CHR='OFF'
      ENDIF
      
      WRITE (55,5405) CHR
 5405 FORMAT (/T15,' T-H FEEDBACK OPTION  : ',A5)
      
      IF(ITRAN.EQ.'Y'.AND.ANFDBK.EQ.'Y') THEN
       IF(ANFDBKIMP.EQ.'Y') THEN
        WRITE (55,5403)
 5403   FORMAT (/T18,' TRANSIENT T-H FEEDBACK TREATED IMPLICITLY' )
       ELSE
        WRITE (55,5404)  
 5404   FORMAT (/T20,' TRANSIENT T-H FEEDBACK TREATED EXPLICITLY' )
       ENDIF
      ENDIF 
      
C     MOD---REACTIVATE NEXT LINE IF DISTINCT MODERATOR OPTION REACTIVATED 
C     MOD        WRITE (55,5406) NMOD
 5406 FORMAT (/T15,' DISTINCT MODERATOR FROM COOLANT OPTION  : ',A5)
      
C     MOD---REACTIVATE NEXT LINE IF SP NO. DENSITY TREATMENT OPTION REACTIVATED 
C     MOD        WRITE (55,5407) NSP
 5407 FORMAT (/T15,' SOLUBLE POISON NUMBER DENSITY TREATMENT OPTION',
     &  '  : ',A5)
      
      WRITE(55,3457)
 3457 FORMAT(/T15,' XENON - SAMARIUM FEEDBACK OPTIONS'/)
      
      GOTO (6781,6782,6783,6784,6785,6786), IXE(IBU)
      
 6781 WRITE (55,4406)
 4406 FORMAT (T20,' CLEAN CORE AT STARTUP - NO XE OR SM')
      GOTO 9987
 6782 WRITE(55,4407)
 4407 FORMAT (T20,' FREEZE XENON AND SAMARIUM ')
      GOTO 9987
 6783 WRITE(55,4408)
 4408 FORMAT (T20,' EQUILIBRIUM XENON AND SAMARIUM')
      GOTO 9987
 6784 WRITE(55,4409)
 4409 FORMAT (T20,' REACTOR SHUTDOWN - SAMARIUM TRANSIENT')
      GOTO 9987
 6785 WRITE(55,4410)
 4410 FORMAT (T20,' TRANSIENT XENON AND SAMARIUM')

 6786 WRITE(55,4411)
 4411 FORMAT (T20,' NO XENON AND FREEZE SAMARIUM')

 9987 CONTINUE
      
      IF (ITYPE .EQ. 'EVP') THEN
       CHRA='EIGENVALUE PROBLEM'
      ELSE
       CHRA='FIXED SOURCE PROBLEM'
      ENDIF
      WRITE (55,4495) CHRA
 4495 FORMAT (/T15,' PROBLEM TYPE IS       : ',A20)
      
      IF (IMETHOD .EQ. 1) THEN
       CHRB='FINITE DIFFERENCE METHOD [ FDM ]'
      ELSEIF (IMETHOD .EQ. 2) THEN
       CHRB='NONLINEAR NODAL EXPANSION METHOD [ NEM ]'
      ENDIF
      WRITE (55,4496) CHRB
 4496 FORMAT (/T15,' METHOD OF SOLUTION IS : ',A40)
C     
      IF (IMETHOD.EQ.2) THEN
       IF(ANFDBK.EQ.'Y') THEN
        WRITE (55,5000) NNEM,EPSNEM
       ELSE
        WRITE (55,5005) NNEM,EPSNEM
       ENDIF
      ENDIF
 5000 FORMAT (/T20,' BETWEEN NEM UPDATES '/T22,
     &  ' MAX NUMBER OF OUTER ITERATION CYCLES       : ',I3/T22,
     &  ' L2 FISSION SOURCE RELATIVE ERROR REDUCTION : ',E13.5)
 5005 FORMAT (/T20,' BETWEEN NEM UPDATES '/T22,
     &  ' MAX NUMBER OF THERMAL-HYDRAULIC UPDATES    : ',I3/T22,
     &  ' L2 FISSION SOURCE RELATIVE ERROR REDUCTION : ',E13.5)
      
      IF(IOUTER.EQ.1) WRITE (55,5035)
 5035 FORMAT(//T15,' CHEBYSHEV OUTER ITERATION ACCELERATION')
      IF(IOUTER.EQ.2) WRITE (55,5036)
 5036 FORMAT(//T15,' WEILANDT SHIFT OUTER ITERATION ACCELERATION')
      WRITE(55,5030) IUPOUTER
 5030 FORMAT(/T20,' UPPER LIMIT ON OUTER ITERTIONS PER T-H UPDATE: ',
     &  I3)
      IF(IOUTER.EQ.2) WRITE(55,5037) OMEGAEXT
 5037 FORMAT(/T20,' STATIONARY EXTRAP PARAMETER FOR FLUX: ', E13.5)  
      IF(IOUTER.EQ.2) THEN
       IF(ITRAN.EQ.'Y') THEN
        WRITE(55,5031) WEILANDTEI,WEILANDTFS
 5031   FORMAT(/T20,' WEILANDT SHIFT PARAMETERS:'
     *    /T22,'STEADY-STATE WEILANDT SHIFT MULTIPLIER: ',E13.5
     *    /T22,'TRANSIENT WEILANDT SHIFT MULTIPLIER   : ',E13.5)
       ELSEIF(IADJ.EQ.'Y') THEN
        WRITE(55,5032) WEILANDTEI,WEILANDTFS
 5032   FORMAT(/T20,' WEILANDT SHIFT PARAMETERS:'
     *    /T22,'STEADY-STATE WEILANDT SHIFT MULTIPLIER: ',E13.5
     *    /T22,'ADJOINT WEILANDT SHIFT MULTIPLIER   : ',E13.5)
       ELSE
        WRITE(55,5033) WEILANDTEI
 5033   FORMAT(/T20,' WEILANDT SHIFT PARAMETERS:'
     *    /T22,'STEADY-STATE WEILANDT SHIFT MULTIPLIER: ',E13.5)
       ENDIF
      ENDIF     
      
      VARSIG='OFF'
      IF(IISC.EQ.1) VARSIG='ON'
      WRITE (55,5045) VARSIG
 5045 FORMAT(/T15,' STEADY-STATE SCALING FACTOR ACCELERATION: ',A3)
      IF(IISC.EQ.1) THEN
       WRITE(55,5040) ISC
      ENDIF
 5040 FORMAT(/T20,
     &  ' OUTER ITERATION AT WHICH SCALING FACTOR STARTS ',I5)
      
      VARSIG='OFF'
      IF(ISPSH.EQ.1) VARSIG='ON'
      WRITE (55,5050) VARSIG
 5050 FORMAT(/T15,' STEADY-STATE SPECTRAL SHIFT CORRECTION: ',A3)
      
      IF(ITRAN .EQ. 'Y' )THEN
       
       WRITE (55,5060)
 5060  FORMAT(//T15,' NUMBER OF OUTER ITERATIONS PER TIME - ',
     &   'STEP OPTION: ')
       IF(IONE.EQ.1) WRITE(55,5065)
 5065  FORMAT(/T20,' CONVERGENCE CRITERIA DEPENDENT')
       
       IF(IONE.EQ.2) THEN
        WRITE(55,5070)
        WRITE (55,5075) IOK
       ENDIF
 5070  FORMAT(/T20,' FIXED NUMBER OF OUTER ITERATIONS PER TIME STEP')
 5075  FORMAT(/T20,' NUMBER OF OUTERS PER TIME STEP:',I3)
       
       IF(IISCTR.EQ.0) VARSIG='OFF'
       IF(IISCTR.EQ.1) VARSIG='ON'
       WRITE(55,5080) VARSIG
       IF(IISCTR.EQ.1) THEN
        WRITE(55,5090) ISCTR
       ENDIF
       VARSIG='OFF'
       IF(ISPSHTR.EQ.0) VARSIG='OFF'
       IF(ISPSHTR.EQ.1) VARSIG='ON'
       WRITE (55,5095) VARSIG
      ENDIF
 5080 FORMAT(/T15,' TRANSIENT SCALING FACTOR ACCELERATION: ',A3)
 5090 FORMAT(/T15,' OUTER ITERATION (WITHIN TIME STEP ) AT WHICH ',
     &  'SCALING FACTOR STARTS: ',I5)
 5095 FORMAT(/T15,' TRANSIENT SPECTRAL SHIFT CORRECTION: ',A3)
C     
      WRITE(55,*) '  '
      WRITE(55,9986)
 9986 FORMAT(//T15,' ITERATION LIMIT AND CONVERGENCE CRITERIA'/)
      WRITE(55,4446) KITR
 4446 FORMAT(T20,' MAXIMUM NO. OF OUTER ITERATIONS          : ',2X,I6)
      WRITE(55,4456) N_THRMITR
 4456 FORMAT(T20,' MAXIMUM NO. OF THERMAL SCAT. ITERATIONS  : ',2X,I6)
      WRITE(55,4448) EPSK
 4448 FORMAT(T20,' EIGENVALUE (K) OUTER ITER CONV CRITERIA  : ',E13.5)
      WRITE(55,3401) EPSOT
 3401 FORMAT(T20,' L_2 OUTER ITER RESID CONVERGENCE CRITERIA: ',E13.5)
      WRITE(55,3402) EPSRESID
 3402 FORMAT(T20,' L_2 OUTER ITER TRUE RESID CONV CRITERIA  : ',E13.5)
      WRITE(55,3441) EPSINF
 3441 FORMAT(T20,' L_INF OUTER ITER FIS SOURCE CONV CRITERIA: ',E13.5)
      WRITE(55,3442) EPREDRESID
 3442 FORMAT(T20,' OUTER ITER RESID REL KICKOUT CRITERIA    : ',E13.5)
      WRITE(55,3661) EPSDET
 3661 FORMAT(T20,' INNER L_2 REL CONVERGENCE CRITERIA       : ',E13.5)
      WRITE(55,*) '           '

      IF(ACONV.EQ.'Y') THEN 
       WRITE(55,3443) 
 3443  FORMAT(T15,' CONVERGENCE REQUIRED AFTER COEFFICIENT ',
     *   'MATRIX UPDATE'/)
      ELSE
       WRITE(55,3444) 
 3444  FORMAT(T15,' CONVERGENCE NOT REQUIRED AFTER COEFFICIENT ',
     *   'MATRIX UPDATE'/)
      ENDIF
C     
C     TRANSIENT FILE FILE_KIN ECHO
C     
C-------TIME & INPUT PARAMETERS AT THE PERTURBATION INCIDENTS
      IF(ITRAN .EQ. 'Y' )THEN
       WRITE(55,5101)
 5101  FORMAT(//1H ,10X,'TRANSIENT PERTURBATION PARAMETERS :')
       
       IF(GMASS.GT..0) THEN
        WRITE(55,6105)
 6105   FORMAT(1H ,/10X,' COOLANT INLET MASS VELOCITY AT BOTTOM ',
     *    'FUEL NODE'/)
       ELSE
        WRITE(55,6106)
 6106   FORMAT(1H ,/10X,' COOLANT INLET MASS VELOCITY BELOW BOTTON ',
     *    'AXIAL NODE'/) 
       ENDIF
       WRITE(55,5103)
       DO 87 IT=1,NPERT
        WRITE(55,5105)TIMETR(IT),PMT(IT),TINT(IT),GMINT(IT)
 87    CONTINUE
 5103  FORMAT(1H ,/10X,'  TIME ',' SOL-POISON  COOLANT  ',
     &   '   INLET'/1H ,17X,' CONCENC.','   TEMP-IN ',
     &   '  MASS VELOC '/1H ,10X,'(SEC)  ',' (PPM)',7X,'(F)',1X,
     &   '    (LB/HR-FT^2) ')
 5105  FORMAT(1H ,6X,2(F9.2),2X,F9.2,2X,E11.4)
       
       WRITE(55,5115) (IBK,IBK=1,NBACU)
       DO 88 IT=1,NPERT
        WRITE(55,5110) TIMETR(IT),(ZBT(IBK,IT),IBK=1,NBACU)
 88    CONTINUE
 5115  FORMAT(1H ,//T10,'  TIME      ','CONTROL BANKS AXIAL
     &   WITHDRAWAL(INCHES)'/T10,'  (SEC)     ',9(I2,5X))
 5110  FORMAT(10X,F6.2,1X,9(F7.1))
       
       WRITE(55,5120)
 5120  FORMAT(1H ,//T10,'  TIME(SEC) AT WHICH OUTPUT IS TO BE PRINTED'
     &   ,/)
       
       IF (NPRINT.GT.7) THEN
        NTR=INT(NPRINT/7,8) !vmq
        IF(NTR.GT.0) THEN
         DO 99 ITR=1,NTR
          WRITE(55,5125) (TIMEPR(IT),IT=7*(ITR-1)+1,7*ITR)
 99      CONTINUE
        ENDIF
        IF((NTR*7+1).LE.NPRINT)
     &    WRITE(55,5125) (TIMEPR(IT),IT=NTR*7+1,NPRINT)
       ELSE
        WRITE(55,5125) (TIMEPR(IT),IT=1,NPRINT)
       ENDIF
 5125  FORMAT(1H ,7X,7(F8.2,1X))
       
       
       WRITE(55,5130)
 5130  FORMAT(1H ,//T10,'  TIME VS. TIME-STEP SIZE FOR THE DIFFERENT',
     &   ' TIME SPAN REGIONS')
       
       WRITE(55,5135) TIMESP(1), DELT(1)
       IF (NTSPN.GE.2) THEN
        DO 987 IT=2,NTSPN
         WRITE(55,5136) TIMESP(IT-1),TIMESP(IT), DELT(IT)
 987    CONTINUE
       ENDIF
       
 5135  FORMAT(1H ,/T10,'    START TIME      END TIME   TIME STEP SIZE',
     &   ' (SEC) '/10X,9X,'0.00',4X,E11.4,7X,E11.4)
 5136  FORMAT(16X,F7.2,4X,E11.4,7X,E11.4)
       
      ENDIF
      
C     
C------------------START OF THE TRANSIENT XE AND/OR SM CASE-------------
      
      IF(IXE(1).EQ.4.OR.IXE(1).EQ.5) THEN
       WRITE(55,5137)
 5137  FORMAT(1H ,//T10,' TIME & INPUT PARAMETERS FOR ',/
     &   T10,' THE FISSION PRODUCT TRANSIENT PARAMETERS :')
C     
       WRITE(55,5138)
 5138  FORMAT(1H ,/T10,'  TIME    CORE RELT   SOL-POIS  COOLANT '/
     &   10X,'  (SEC)    POWER       CONCEN    TEMP.  '/
     &   10X,'            (%)         (PPM)     (F)   ')
       DO 90 IFP=1,NFP
        WRITE(55,5140) TIMEFP(IFP),PRFP(IFP),PMFP(IFP),TINFP(IFP)
 90    CONTINUE
 5140  FORMAT(1X,T10,4(1X,F9.2))
       
       WRITE(55,5143)
 5143  FORMAT(//1X,T10,' TIME(SEC) ','CONTROL BANKS AXIAL WITHDRAWAL:',
     &   ' [INCH]')
       DO 91 IFP=1,NFP
        WRITE(55,5145) TIMEFP(IFP),(ZBFP(IBK,IFP),IBK=1,NBACU)
 91    CONTINUE
 5145  FORMAT(1X,T10,F7.3,2X,9(2X,F7.3))
       
      ENDIF
C     
C-----WRITE DETAILED I/P PARAMETER TO A FILE
C     
      IF (AL3.EQ.'Y'.OR.AL3.EQ.'YS') THEN
       CALL INIVAL(
     &   A(LBETAMIN),A(LXHIDMIN),A(LXFPNRON),A(LXFPNRIN),A(LGPNN),
     &   A(LGINN),A(LGXNN),A(LGINMIN),A(LGXNMIN),A(LGPNMIN),A(LDXN),
     &   A(LDYN),A(LDZN),A(LBUPMN),A(LPPMN),A(LWTFRRON),A(LWTFRRIN),
     &   A(LBUBOSN),A(LXSECRON),A(LXSECRIN),A(LXHIPMIN),A(LXHIPNN),
     &   A(LXSECSCRON),A(LXSECSCRIN),
     &   A(LALPHAIN),AINT(LNCOLXYN),AINT(LNCOLZN),AINT(LNXSTARTN),
     &   AINT(LNXENDN),AINT(LNDNUMN),AINT(LNMAXN),AC(LAXSCINN),
     &   A(LFUFRN),AINT(LNCOLORN),A(LRHOWREFN),A(LTCOLREFN),A(LTFREFN),
     &   AINT(LNROTN),AINT(LNREFN),AINT(LNTOPZN),
     &   AINT(LLSEXTRN),AINT(LLSEXTZN),A(LRNUU5N),A(LRNUU8N),
     &   A(LRNUP9N),A(LRNUP1N),A(LRNUP0N),A(LRNUP2N),A(LADFSN),
     &   A(LADFSRDN),A(LVELOCNN),A(LBETANN),A(LALPHANN),A(LUPUDENN),
     &   A(LUCHAINRON),A(LRTN),A(LSEXTN),AINT(LLRODN),A(LALAMDAN),
     &   A(LZETAN),A(LB2COLN),A(LUCHAINRIN),A(LRNUU6N),A(LRNUU4N),
     &   A(LTMODREFN),A(LRHOWMREFN) )
       
      ENDIF
      
      RETURN
      END
