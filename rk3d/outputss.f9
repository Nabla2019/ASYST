      SUBROUTINE OUTPUTSS(
     &  TPF,RELPWR,DXE,DIO,DPM,DSM,AVBU,DELBU,BUNODE,VOLU,
     &  SW,FNSWT,ZB,TCOLC,TAVF,UNEW,
     &  RHOW,DLN,DLL,DLW,DLNV,DLNU,DU38,DPU39,
     &  DPU40,DPU41,DU35,DLFP1,DLFP2,DPU42,ISAVE,OUT,NCOLXY,NCOLZ,
     &  NXSTARTB,NXENDB,NXSTART,NXEND,NDNUM,FRACTB,
     &  DU36,DU34,DBP,DOPL,TMODC,RHOWM,AKINF,TNF,TCR,TCA,TCD,TXT,
     &  XXEAB,XSMAB,DAM41)  
C     
C     THIS SUBROUTINE OUTPUTS THE STEADY-STATE PROBLEM'S SOLUTION
C     
      include 'param.fcb'
      include 'fpxs.fcb'
      include 'perttr.fcb'
      include 'xeopt.fcb'
      include 'multit.fcb'
      include 'soln2.fcb'
      include 'time.fcb'
      include 'nemcnt.fcb'
      include 'power.fcb'
      include 'opti.fcb'
      include 'xsec1.fcb'
      include 'burn.fcb'
      include 'geom.fcb'
      include 'start.fcb'
      include 'cntl.fcb'
      include 'tim.fcb'
      include 'che.fcb'
      include 'gasch.fcb'
      include 'restotp.fcb'
      include 'nonfue.fcb'
      include 'crod.fcb'
      include 'thermo.fcb'
      include 'thermk.fcb'
      include 'crit.fcb'
      include 'conv.fcb'
      include 'veloc.fcb'
      include 'dataf.fcb'
      include 'bundle.fcb'
      include 'numsurf.fcb'
      include 'outlong.fcb'
      include 'varlen.fcb'
      include 'varlens.fcb'
      include 'array.fcb'
      include 'nterm.fcb'
      include 'pinpow.fcb'
      
      DIMENSION
     &  NXSTART(*)                             ,NXEND(*)             ,
     &  NDNUM(-1:NX+2,0:*)                     ,RHOWM(NXYLMOD,*)     ,
     &  NXSTARTB(*)                            ,NXENDB(*)            ,
     &  NCOLXY(NXYLMAX,*)                      ,TMODC(NXYLMOD,*)     ,
     &  NCOLZ(*)                               ,AVBU(*)              ,
     &  DELBU(*)                               ,BUNODE(NXYL,*)       ,
     &  FNSWT(NXYL,*)                          ,ZB(*)                ,
     &  DLN(NXYT,NZ,*)                         ,DLL(NXYL,NZ+1,*)     ,
     &  DLW(NXYT,NZ,*)                         ,DLNV(NXYT,NZ,*)      ,
     &  DLNU(NXYT,NZ,*)                        ,TCOLC(NXYL,*)        ,
     &  DU38(NXYL,*)                           ,DPU39(NXYL,*)        ,
     &  DPU40(NXYL,*)                          ,DPU41(NXYL,*)        ,
     &  DU35(NXYL,*)                           ,DLFP1(NXYL,*)        ,
     &  DLFP2(NXYL,*)                          ,DPU42(NXYL,*)        ,
     &  VOLU(NXYL,*)                           ,SW(NXYL,NZ,*)        ,
     &  DXE(NXYL,*)                            ,DIO(NXYL,*)          ,
     &  DPM(NXYL,*)                            ,DSM(NXYL,*)          ,
     &  RELPWR(NXYL,*)                         ,TPF(NXYL,NZ,*)       ,
     &  TAVF(NXYL,*)                           ,DOPL(NXYL,*)         ,
     &  RHOW(NXYL,*)                           ,ISAVE(*)             ,
     &  OUT(*)                                 ,FRACTB(*)            ,
     &  UNEW(NXYL,*)                           ,DU36(NXYL,*)         ,
     &  DBP(NXYL,*),DU34(NXYL,*),DAM41(NXYL,*)

      DIMENSION AKINF(NXYL,*),TNF(NXYL,NZ,*),TCR(NXYL,NZ,*),
     $  TCA(NXYL,NZ,*),TCD(NXYL,NZ,*),TXT(NXYL,NZ,*),
     $  XXEAB(NXYL,NZ,*),XSMAB(NXYL,NZ,*)

      CHARACTER*40  OUT
      CHARACTER*8 ISAVE
      
      CHARACTER*10 NEWPAGE
      CHARACTER*200 FHEAD1,FHEAD2,FHEAD3,FHEAD4
      CHARACTER*200 PHEAD2
      CHARACTER*200 BHEAD1
      CHARACTER*200 FMT,FMT1,FMT2
      CHARACTER*70 ATEMP1,ATEMP2,ATEMP3
      
      ATEMP1=
     $  '(//T19,''(( POINTWISE '',A5,'' EDIT - GROUP '',I2,'' ))'''
      ATEMP2='//T32,''PLANE # '',I2,//)'
      CALL ANMERGE(N51,N23,N0,ATEMP1,ATEMP2,ATEMP3,FHEAD1)
      ATEMP1=
     $  '('' AVERAGE BURNUP :'',F10.2,'' MWD/MTM'',4X,''TIME : '','
      ATEMP2='F7.3,'' HRS''/)'
      CALL ANMERGE(N51,N13,N0,ATEMP1,ATEMP2,ATEMP3,FHEAD2)
      FHEAD3='(T2,''Y/X'',1X,6(5X,I2,5X)/)'
      FHEAD4='('' AVERAGE BURNUP :'',F10.2,'' MWD/MTM''/)'
      PHEAD2='(T2,''Y/X'',1X,9(2X,I3,2X)/)'
      ATEMP1='(//T9,''(( POINTWISE '',A5,'' EDIT ))'''
      ATEMP2='//T29,''PLANE # '',I2,//)'
      CALL ANMERGE(N35,N23,N0,ATEMP1,ATEMP2,ATEMP3,BHEAD1)
      
      WRITE(55,*) 
     &  '============================================================='
      WRITE(55,*) '           '
      WRITE (55,*)'  '
      WRITE (55,*)'  '
      WRITE (55,FHEAD2) AVBU(IBU),THR

      ADUM=DELBU(IBU)*(RHOWTFAV*RATIOHMFUEL)*86400.
     &  *6.2418076E+12/(QT*PR)
      ADUM2=AVBU(IBU)*(RHOWTFAV*RATIOHMFUEL)*86400.
     &  *6.2418076E+12/(QT*PR)
      WRITE(55,*)'DELTA EFPD     : ',ADUM/86400.
      WRITE(55,*)'CYCLE EFPD     : ',ADUM2/86400.
      
      IF(ITYPE.EQ.'FSP')THEN
       WRITE(55,1079) POWERFRAC*100.00,J4X,J4Y,J4Z,PNM
       GOTO 1171
      ENDIF
      
      WRITE(55,1070) CKE,J4X,J4Y,J4Z,PNM
 1171 CONTINUE
      
      IF(ASRCH.NE.'Y')THEN
       
       WRITE(55,1080)
       CONVRG='YES'
       
      ELSE
       
       IF(ITYPE.EQ.'EVP')POWERFRAC=PR
       IF(ITYPE.EQ.'FSP')CKE=1.00
       IF(ABS(CKE-CKE_TARGET).LT.EPSILKEF.AND.
     &   (POWERFRAC-PR).LT.EPSILPWR) THEN
        CONVRG='YES'
        IF(ITYPE.EQ.'EVP') WRITE(55,1096)
        IF(ITYPE.EQ.'FSP') WRITE(55,1091)
       ELSE
        CONVRG='NO'
        IF(ITYPE.EQ.'EVP') WRITE(55,1596)
        IF(ITYPE.EQ.'FSP') WRITE(55,1591)
       ENDIF
       
       GOTO(9771,9772,9773,9774)IWHICH
 9771  WRITE(55,1971)
       GOTO 9775
 9772  WRITE(55,1972)
       GOTO 9775
 9773  WRITE(55,1973)
       GOTO 9775
 9774  WRITE(55,1974)
       
 9775  CONTINUE
       
       GOTO(771,772,773,774)IWHICH
       
 771   WRITE(55,9844) PR
       GOTO 775
 772   WRITE(55,9841) PM
       GOTO 775
 773   WRITE(55,9842) TCOLIN
       GOTO 775
 774   WRITE(55,9843) ZCC
       
 775   CONTINUE
       
       WRITE(55,3663) ISRCH
       
      ENDIF
      
      WRITE(55,963) PR*100.000,PM
      
      WRITE(55,964) TCOLIN,PIN
      
      IF(GMASS.GT..0) THEN
       WRITE(55,965) GMASS/1.3562527E-4
      ELSE
       WRITE(55,966) ABS(GMASS)/1.3562527E-4
      ENDIF
      
C...  ADJUSTING THE CONTROL BANKS OUTPUT [ 8 BANKS PER LINE ]
      IF(NBACU.GT.0)THEN
       NCNTROD = NBACU/8
       NLEFT = NBACU - NCNTROD*8
       WRITE(55,1965)
       DO 4987 ICNT = 1,NCNTROD
        WRITE(55,6966) (IBX,IBX=1+(ICNT-1)*8,ICNT*8)
        WRITE(55,8966)
     &    ((ZB(IBX)-RODOFFSET)/2.54,IBX=1+(ICNT-1)*8,ICNT*8)
        WRITE(55,*)
 4987  CONTINUE
       IF(NLEFT.NE.0)THEN
        WRITE(55,6966) (IBX,IBX=1+NCNTROD*8,NBACU)
        WRITE(55,8966)
     &    ((ZB(IBX)-RODOFFSET)/2.54,IBX=1+NCNTROD*8,NBACU)
       ENDIF
      ENDIF
      
      WRITE(55,*)NEWPAGE()
      
C     
C-----NORMALIZING THE FLUX TO POWER LEVEL 1.0000
C     
      IF(ITYPE.EQ.'EVP')THEN
       
       VOLFUEL = 0.000
       SK1     = 0.000
       
       DO 101 IZ=1,NZ
        DO 100 IXY=1,NXYL
         ICOL=NCOLXY(IXY,NCOLZ(IZ))
         IF(ICOL.LE.NFUEXY)GO TO 100
         VOLFUEL=VOLFUEL+VOLU(IXY,IZ)*FRACTB(IXY)
         DO 98 IG=1,NG
          SW(IXY,IZ,IG)=MAX(SW(IXY,IZ,IG),0.0000)
          SK1 = SK1 +(TPF(IXY,IZ,IG)*
     &      SW(IXY,IZ,IG))*VOLU(IXY,IZ)*FRACTB(IXY)
 98      CONTINUE
 100    CONTINUE
 101   CONTINUE
       
       RN = VOLFUEL / SK1
       AMPL = RN *CCF
      ELSE
       RN = 1.00
       AMPL = RN
      ENDIF
      
      IEDITLOG=0
      CALL AVGEDIT(
     &  A(LVOLUN),AINT(LNCOLXYN),AINT(LNCOLZN),AINT(LIBIYNDELN),
     $  AINT(LIBIXWDELN),
     & AINT(LNBCXXENDN),AINT(LNBCXXSTARTN),AINT(LIBIXWN),AINT(LIBIYNN),
     $  AINT(LNDNUMN),A(LRELPWRN),A(LBUNODEN),A(LAXIALTOPN),
     $  A(LAXIALBOTN),A(LZN),A(LDZN),A(LFRACTBN),IEDITLOG )
C     
C     3-D k_inf with 2 group formulation
C     
      DO 202 IXY=1,NXYL
       DO IZ=1,NZ
        AKINF(IXY,IZ)=(TNF(IXY,IZ,1)+TNF(IXY,IZ,2)*
     $    TCR(IXY,IZ,1)/TXT(IXY,IZ,2))/
     $    (TXT(IXY,IZ,1))
       ENDDO
 202  CONTINUE

C !vmq      IF(ANFDBK.EQ.'Y') THEN
       IEDITLOG=1
       CALL AVGEDIT(
     &   A(LVOLUN),AINT(LNCOLXYN),AINT(LNCOLZN),AINT(LIBIYNDELN),
     &   AINT(LIBIXWDELN),AINT(LNBCXXENDN),AINT(LNBCXXSTARTN),
     $   AINT(LIBIXWN),AINT(LIBIYNN),AINT(LNDNUMN),
     &   A(LTCOLCN),A(LTAVFN),A(LAXIALTOPN),A(LAXIALBOTN),A(LZN),
     &   A(LDZN),A(LFRACTBN),IEDITLOG )
C !vmq      ENDIF

C !vmq no hexa      IF(NSHAP.EQ.'HEXA'.AND.PPR.EQ.'Y'.AND.PPRERROR.NE.1)THEN
C !vmq no hexa       CALL AVGEDITPIN(
C !vmq no hexa     &   AINT(LIBIYNDELN),AINT(LIBIXWDELN),
C !vmq no hexa     &   AINT(LNBCXXENDN),AINT(LNBCXXSTARTN),AINT(LIBIXWN),
C !vmq no hexa     &   AINT(LIBIYNN),AINT(LNDNUMN),A(LAMAXPINN),A(LAMAXPELLETN))       
C !vmq no hexa      ENDIF
C     
C------LONG OUTPUT EDIT [ ONLY IF NPC.EQ.'Y' ]
C     
      
      IF (NPC.NE.'Y') GO TO 18
      WRITE(55,*)NEWPAGE()
      WRITE(55,*)
C     
C     OUTPUT XSECTION VALUES
C     
c      DO 210 IXY=1,NXYL
c       DO 211 IZ=1,NZ
c        DO 212 IG=1,NG
c         TCA(IXY,IZ,IG)=TCA(IXY,IZ,IG)
c     $     +1.E-24*(DXE(IXY,IZ)*XXEAB(IXY,IZ,IG)
c     $     +DSM(IXY,IZ)*XSMAB(IXY,IZ,IG))
c 212    CONTINUE
c 211   CONTINUE
c 210  CONTINUE
      DO 203 NPLONG=1,NOUTLONG
       FMT1='(T2,I3,1X,A,6(E11.5,1X))'
       FMT2='(T2,I3,1X,A,3(E11.5,1X,12X))'
       IF(NXSKIP.EQ.1) THEN
        FMT=FMT1
       ELSE
        FMT=FMT2
       ENDIF
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(26)) THEN
        DO 221 IG=1,NG
         CALL OUTPOINT(N1,NZ,N1,NY,N1,NX,N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,TCD(1,1,IG),IG,AOUTREF(26),
     &     AVBU,NDNUM)
 221    CONTINUE
       ELSEIF(AOUTLONG(NPLONG).EQ.AOUTREF(27)) THEN
        DO 222 IG=1,NG
         CALL OUTPOINT(N1,NZ,N1,NY,N1,NX,N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,TCA(1,1,IG),IG,AOUTREF(27),
     &     AVBU,NDNUM)	
 222    CONTINUE
       ELSEIF(AOUTLONG(NPLONG).EQ.AOUTREF(28)) THEN
        DO 223 IG=1,NG
         CALL OUTPOINT(N1,NZ,N1,NY,N1,NX,N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,TXT(1,1,IG),IG,AOUTREF(28),
     &     AVBU,NDNUM)
 223    CONTINUE	
       ELSEIF(AOUTLONG(NPLONG).EQ.AOUTREF(29)) THEN
        DO 224 IG=1,NG
         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &     N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,TNF(1,1,IG),IG,AOUTREF(29),
     &     AVBU,NDNUM)
 224    CONTINUE	
       ELSEIF(AOUTLONG(NPLONG).EQ.AOUTREF(30)) THEN
        DO 225 IG=1,NG
         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &     N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,TPF(1,1,IG),IG,AOUTREF(30),
     &     AVBU,NDNUM)
 225    CONTINUE
       ELSEIF(AOUTLONG(NPLONG).EQ.AOUTREF(31)) THEN
        DO 226 IG=1,NG
         CALL OUTPOINT(N1,NZ,N1,NY,N1,NX,N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,XXEAB(1,1,IG),IG,AOUTREF(31),
     &     AVBU,NDNUM)
 226    CONTINUE
       ELSEIF(AOUTLONG(NPLONG).EQ.AOUTREF(32)) THEN
        DO 227 IG=1,NG
         CALL OUTPOINT(N1,NZ,N1,NY,N1,NX,N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,1.0,XSMAB(1,1,IG),IG,AOUTREF(32),
     &     AVBU,NDNUM)
 227    CONTINUE
       ENDIF
 203  CONTINUE
C     
C     OUTPUT POINT KINF VALUES
C     
      DO 201 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(25)) THEN
        FMT1='(T2,I3,1X,A,6(E11.5,1X))'
        FMT2='(T2,I3,1X,A,3(E11.5,1X,12X))'
        IF(NXSKIP.EQ.1) THEN
         FMT=FMT1
        ELSE
         FMT=FMT2
        ENDIF
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &    NXSTARTB,NXENDB,N12,1.0,AKINF(1,1),N0,AOUTREF(25),
     &    AVBU,NDNUM)
       ENDIF	 
 201  CONTINUE
      
C     
C-----OUTPUT POINT FLUX VALUES
C     
      DO 2001 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(1)) THEN
        FMT1='(T2,I3,1X,A,6(E11.5,1X))'
        FMT2='(T2,I3,1X,A,3(E11.5,1X,12X))'
        IF(NXSKIP.EQ.1) THEN
         FMT=FMT1
        ELSE
         FMT=FMT2
        ENDIF
        DO 2000 IG=1,NG
         CALL OUTPOINT(N1,NZ,N1,NY,N1,NX,N6,FHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTART,NXEND,N12,AMPL,SW(1,1,IG),IG,AOUTREF(1),
     &     AVBU,NDNUM )
 2000   CONTINUE
       ENDIF
 2001 CONTINUE
      
C     
C-----OUTPUT POINT POWER VALUES
C     
      
      DO 2002 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(2)) THEN
        FMT1='(T2,I3,1X,A,9F7.3)'
        FMT2='(T2,I3,1X,A,4(F7.3,7X),F7.3)'
        IF(NXSKIP.EQ.1) THEN
         FMT=FMT1
        ELSE
         FMT=FMT2
        ENDIF
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N9,BHEAD1,FHEAD4,PHEAD2,FMT,
     &    NXSTARTB,NXENDB,N7,1.,RELPWR,N0,AOUTREF(2),
     &    AVBU,NDNUM )
       ENDIF
 2002 CONTINUE
      
      FMT1='(T2,I3,1X,A,6(E11.5,1X))'
      FMT2='(T2,I3,1X,A,3(E11.5,1X,12X))'
      IF(NXSKIP.EQ.1) THEN
       FMT=FMT1
      ELSE
       FMT=FMT2
      ENDIF
      
C !vmq      IF(ANFDBK.EQ.'Y') THEN
C     
C-----OUTPUT POINT COOLANT DENSITY VALUES
C     
       DO 2003 NPLONG=1,NOUTLONG
        IF(AOUTLONG(NPLONG).EQ.AOUTREF(3)) THEN
         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTARTB,NXENDB,N12,1.0,RHOW,N0,AOUTREF(3),
     &     AVBU,NDNUM )
        ENDIF
 2003  CONTINUE
       
C     
C-----OUTPUT POINT COOLANT TEMPERATURE VALUES
C     
       DO 2004 NPLONG=1,NOUTLONG
        IF(AOUTLONG(NPLONG).EQ.AOUTREF(4)) THEN
         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTARTB,NXENDB,N12,1.0,TCOLC,N0,AOUTREF(4),
     &     AVBU,NDNUM )
        ENDIF
 2004  CONTINUE

       IF(NMOD.EQ.'Y') THEN

C     
C-----OUTPUT POINT MODERATOR DENSITY VALUES
C     
        DO 2103 NPLONG=1,NOUTLONG
         IF(AOUTLONG(NPLONG).EQ.AOUTREF(23)) THEN
          CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &      N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &      NXSTARTB,NXENDB,N12,1.0,RHOWM,N0,AOUTREF(23),
     &      AVBU,NDNUM )
         ENDIF
 2103   CONTINUE

C     
C-----OUTPUT POINT MODERATOR TEMPERATURE VALUES
C     
        DO 2104 NPLONG=1,NOUTLONG
         IF(AOUTLONG(NPLONG).EQ.AOUTREF(24)) THEN
          CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &      N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &      NXSTARTB,NXENDB,N12,1.0,TMODC,N0,AOUTREF(24),
     &      AVBU,NDNUM )
         ENDIF
 2104   CONTINUE

       ENDIF
       
C     
C-----OUTPUT POINT FUEL TEMPERATURE VALUES
C     
       DO 2005 NPLONG=1,NOUTLONG
        IF(AOUTLONG(NPLONG).EQ.AOUTREF(5)) THEN
         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &     NXSTARTB,NXENDB,N12,1.0,TAVF,N0,AOUTREF(5),
     &     AVBU,NDNUM )
        ENDIF
 2005  CONTINUE
C !vmq      ENDIF
C     
C-----OUTPUT POINT BURNUP VALUES
C     
      DO 2006 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(6)) THEN
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &    NXSTARTB,NXENDB,N12,1.0,BUNODE,N0,AOUTREF(6),
     &    AVBU,NDNUM )
       ENDIF
 2006 CONTINUE
      
      SCALE=1.
C     
C-----OUTPUT POINT I-135 VALUES
C     
      DO 2007 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(7)) THEN
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &    NXSTARTB,NXENDB,N12,SCALE,DIO,N0,AOUTREF(7),
     &    AVBU,NDNUM )
       ENDIF
 2007 CONTINUE
      
C     
C-----OUTPUT POINT XE-135 VALUES
C     
      DO 2008 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(8)) THEN
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &    NXSTARTB,NXENDB,N12,SCALE,DXE,N0,AOUTREF(8),
     &    AVBU,NDNUM )
       ENDIF
 2008 CONTINUE
      
C     
C-----OUTPUT POINT PM-149 VALUES
C     
      DO 2009 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(9)) THEN
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &    NXSTARTB,NXENDB,N12,SCALE,DPM,N0,AOUTREF(9),
     &    AVBU,NDNUM )
       ENDIF
 2009 CONTINUE
      
C     
C-----OUTPUT POINT SM-149 VALUES
C     
      DO 2010 NPLONG=1,NOUTLONG
       IF(AOUTLONG(NPLONG).EQ.AOUTREF(10)) THEN
        CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
     &    N6,BHEAD1,FHEAD4,FHEAD3,FMT,
     &    NXSTARTB,NXENDB,N12,SCALE,DSM,N0,AOUTREF(10),
     &    AVBU,NDNUM )
       ENDIF
 2010 CONTINUE
      
C !vmq no imicro       IF(IMICRO.EQ.'Y') THEN
C !vmq no imicro C     
C !vmq no imicro C-----OUTPUT POINT U-234 VALUES
C !vmq no imicro C     
C !vmq no imicro        DO 2111 NPLONG=1,NOUTLONG
C !vmq no imicro         IF(AOUTLONG(NPLONG).EQ.AOUTREF(11)) THEN
C !vmq no imicro          CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro      &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro      &     NXSTARTB,NXENDB,N12,SCALE,DU34,N0,AOUTREF(11),
C !vmq no imicro      &     AVBU,NDNUM )
C !vmq no imicro         ENDIF
C !vmq no imicro 2111  CONTINUE
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT U-235 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2011 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(12)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DU35,N0,AOUTREF(12),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2011  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT U-236 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2012 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(13)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DU36,N0,AOUTREF(13),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2012  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT U-238 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2013 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(14)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DU38,N0,AOUTREF(14),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2013  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT PU-239 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2014 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(15)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DPU39,N0,AOUTREF(15),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2014  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT PU-240 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2015 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(16)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DPU40,N0,AOUTREF(16),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2015  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT PU-241 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2016 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(17)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DPU41,N0,AOUTREF(17),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2016  CONTINUE
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT PU-242 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2017 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(18)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DPU42,N0,AOUTREF(18),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2017  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT LUMPED FISSION PRODUCT-1 VALUES
C !vmq no imicroC     
C !vmq no imicro       DO 2018 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(19)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DLFP1,N0,AOUTREF(19),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2018  CONTINUE
C !vmq no imicro       
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT LUMPED FISSION PRODUCT-2 VALUES
C !vmq no imicroC     
C !vmq no imicro       
C !vmq no imicro       DO 2019 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(20)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DLFP2,N0,AOUTREF(20),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2019  CONTINUE
C !vmq no imicroC     
C !vmq no imicroC-----OUTPUT POINT BPS VALUES
C !vmq no imicroC     
C !vmq no imicro       
C !vmq no imicro       DO 2020 NPLONG=1,NOUTLONG
C !vmq no imicro        IF(AOUTLONG(NPLONG).EQ.AOUTREF(21)) THEN
C !vmq no imicro         CALL OUTPOINT(IZCOLS,IZCOLE,IYCOLS,IYCOLE,IXCOLS,IXCOLE,
C !vmq no imicro     &     N6,BHEAD1,FHEAD4,FHEAD3,FMT,
C !vmq no imicro     &     NXSTARTB,NXENDB,N12,SCALE,DBP,N0,AOUTREF(21),
C !vmq no imicro     &     AVBU,NDNUM )
C !vmq no imicro        ENDIF
C !vmq no imicro 2020  CONTINUE
C !vmq no imicro      ENDIF
      
C 18   CONTINUE !vmq
      WRITE(55,300)
      WRITE(55,63) KKCST
      WRITE (55,44) KSST
      IF(IMETHOD .EQ. 2) WRITE(55,950) NCALNON
      WRITE (55,43) RTRECST
      PKKCST=FLOAT(KKCST)/FLOAT(KSST)
      WRITE(55,62) PKKCST
      WRITE (55,42) RTRECST/KSST
      WRITE(55,35) RTOUTST
      IF(IMETHOD .EQ. 2 .AND. NCALNON .GT. 0) THEN
       PKKCST=FLOAT(KSST)/FLOAT(NCALNON)
       WRITE(55,64) PKKCST
      ENDIF
      WRITE(55,36) RTOUTST/KSST
      IF(IMETHOD .EQ. 2 ) THEN
       WRITE(55,960) TNCPU
       IF(NCALNON.GT.0) WRITE(55,955) TNCPU/NCALNON
      ENDIF
      WRITE(55,50) OUTOTST
      WRITE(55,37) TXSFDST
      WRITE(55,38) TTHST
      WRITE(55,39) TSCALST
 18   CONTINUE !vmq      
C     
C-----HEADER FOR THE NEXT BURNUP STATE
C     
      
      IF(IXE(IBU).EQ.4.OR.IXE(IBU).EQ.5)THEN
       
       IF(IFP.LT.NFP)THEN
        
        IF(IXE(IBU).EQ.5)THEN
         WRITE(55,*)
     &     '============ NEXT TRANSIENT XE_SM TIME STEP =============='
        ELSEIF(IXE(IBU).EQ.4)THEN
         WRITE(55,*)
     &     '============ NEXT TRANSIENT SM TIME STEP ================='
        ENDIF
        
        WRITE(55,*)NEWPAGE()
        WRITE(55,*) '         '
        WRITE(55,*)'          '
        
       ENDIF
      ENDIF
      
      NBUP1 = NBU+1
      IF(IBU.NE.IBUCURRENT)THEN
       IF(IBU.LT.NBUP1)THEN
        
        IBUCURRENT = IBU
        WRITE(55,*)
     &    '============= NEXT BURNUP STEP ==========================='
        WRITE(55,*)NEWPAGE()
        WRITE(55,*) '         '
        WRITE(55,*)'          '
        
       ENDIF
      ENDIF
      
C     
C------IF SAVING OPTION IS ON, THEN SAVE THE REQUIRED PARAMETERS
C------------USING UNIT=10
C     
      IF(ISAVE(IBU) .EQ. 'Y') THEN
C------------------------------------------
C     
       
       OPEN(UNIT=10,FILE=OUT(IBU),STATUS='NEW',FORM='UNFORMATTED')
       
       IRSTRTB='SS'
       WRITE (10) IRSTRTB
       WRITE (10) EFFKOUT
       WRITE (10) PM
       WRITE (10) SIGMA,WSCALE,FISLNN
       WRITE (10) ERRATN,FLAMDA
       
       DO 2999 IZ=1,NZ
        WRITE (10) ((SW(IXYL,IZ,IG),IG=1,NG),IXYL=1,NXYL)
 2999  CONTINUE
       
       DO 1140 IZ=1,NZ
        WRITE (10) (FNSWT(IXY,IZ),IXY=1,NXYL)
 1140  CONTINUE
       
       DO 2888 IZ=1,NZ
 2888  WRITE (10) (BUNODE(IXY,IZ),IXY=1,NXYL)
       
       DO 2777 IZ=1,NZ
 2777  WRITE (10) (DXE(IXY,IZ),DSM(IXY,IZ),
     *    DIO(IXY,IZ),DPM(IXY,IZ),IXY=1,NXYL)
       
C !vmq no imicro       IF(IMICRO.EQ.'Y')THEN
C !vmq no imicro        DO 9160 IZ=1,NZ
C !vmq no imicro         WRITE (10) (DU34(IXY,IZ),DU35(IXY,IZ),DU36(IXY,IZ),
C !vmq no imicro     *     DU38(IXY,IZ),DPU39(IXY,IZ),
C !vmq no imicro     *     DPU40(IXY,IZ),DPU41(IXY,IZ),DPU42(IXY,IZ),
C !vmq no imicro     $     DAM41(IXY,IZ),
C !vmq no imicro     *     DLFP1(IXY,IZ),DLFP2(IXY,IZ),DBP(IXY,IZ),
C !vmq no imicro     *     IXY=1,NXYL)
C !vmq no imicro 9160   CONTINUE
C !vmq no imicro       ENDIF
       
C !vmq no hexa       IF(NSHAP.EQ.'CART') THEN
        WRITE(10) NSURFX,NSURFY,NSURFZ
        
        DO 8180 IZ=1,NZ
         WRITE (10) ((DLW(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFX)
 8180   CONTINUE
        
        DO 8200 IZ=1,NZ
         WRITE (10) ((DLN(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFY)
 8200   CONTINUE
        
        DO 8220 IZ=1,NSURFZ
         WRITE (10) ((DLL(IXY,IZ,IG),IG=1,NG),IXY=1,NXYL)
 8220   CONTINUE
C !vmq no hexa       ENDIF
       
C !vmq no hexa       IF(NSHAP.EQ.'HEXA') THEN
C !vmq no hexa        WRITE(10) NSURFX,NSURFV,NSURFU,NSURFZ
C !vmq no hexa        DO 2180 IZ=1,NZ
C !vmq no hexa         WRITE (10) ((DLW(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFX)
C !vmq no hexa 2180   CONTINUE
C !vmq no hexa        DO 2200 IZ=1,NZ
C !vmq no hexa         WRITE (10) ((DLNV(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFV)
C !vmq no hexa 2200   CONTINUE
C !vmq no hexa        DO 2220 IZ=1,NZ
C !vmq no hexa         WRITE (10) ((DLNU(IXY,IZ,IG),IG=1,NG),IXY=1,NSURFU)
C !vmq no hexa 2220   CONTINUE
C !vmq no hexa        DO 2240 IZ=1,NSURFZ
C !vmq no hexa         WRITE (10) ((DLL(IXY,IZ,IG),IG=1,NG),IXY=1,NXYL)
C !vmq no hexa 2240   CONTINUE
C !vmq no hexa       ENDIF
       
C     
C---- TH DATA
C     
       
       DO 1150 IZ=1,NZ
        WRITE (10) (UNEW(IXY,IZ),IXY=1,NXYL)
 1150  CONTINUE

       IF(NMOD.EQ.'Y') THEN
        DO 1155 IZ=1,NZ
         WRITE (10) (TMODC(IXY,IZ),IXY=1,NXYL)
 1155   CONTINUE
       ENDIF
       
       DO 1160 IZ=1,NZ
        WRITE (10) (TAVF(IXY,IZ),IXY=1,NXYL)
 1160  CONTINUE
       DO 1161 IZ=1,NZ
        WRITE (10) (DOPL(IXY,IZ),IXY=1,NXYL)
 1161  CONTINUE
       
       CLOSE(UNIT=10)
       
      ENDIF
C     
C.........START OF THE FORMAT STATEMENTS.......
      
 50   FORMAT( /10X,'TOTAL LOOP CPU TIME                     = '
     &  ,F9.2/)
 36   FORMAT( /10X,'AVERAGE OUTER STEP CPU TIME PER OUTER   = '
     &  ,F9.2/)
 35   FORMAT( /10X,'TOTAL OUTER CPU TIME                    = '
     &  ,F9.2/)
 37   FORMAT( /10X,'TOTAL X-SECTION UPDATE CPU TIME         = '
     &  ,F9.2/)
 38   FORMAT( /10X,'TOTAL T-H SOLVE CPU TIME                = '
     &  ,F9.2/)
 39   FORMAT( /10X,'TOTAL SCALE FACTOR ACCEL. CPU TIME      = '
     &  ,F9.2/)
 960  FORMAT( /10X,'TOTAL CPU TIME IN THE NODAL ROUTINES    = '
     &  ,F9.2/)
 955  FORMAT( /10X,'AVERAGE NODAL CPU TIME PER NEM UPDATE   = '
     &  ,F9.2/)
 950  FORMAT( /10X,'TOTAL NUMBER OF NEM UPDATES             = '
     &  ,5X,I4/)
 42   FORMAT( /10X,'AV. INNER STEP CPU TIME PER OUTER STEP  = '
     &  ,F9.2/)
 62   FORMAT( /10X,'AVERAGE NUMBER OF INNER ITERS PER OUTER = '
     &  ,F9.1/)
 64   FORMAT( /10X,'AV. NUMBER OF OUTER ITER PER NEM UPDATE = '
     &  ,F9.1/)
 43   FORMAT( /10X,'TOTAL CPU TIME FOR INNER STEPS ONLY     = '
     &  ,F9.2/)
 63   FORMAT( /10X,'TOTAL # OF INNER ITERATION STEPS        = '
     &  ,4X,I5/)
 44   FORMAT( /10X,'TOTAL # OF OUTER ITERATION STEPS        = '
     &  ,5X,I4/)
 300  FORMAT(////T21,'(( CPU TIME ( SEC ) EDIT ))'/)
 964  FORMAT( /2X,'COOLANT INLET TEMPERATURE (F) =',
     &  F7.2,3X,' COOLANT PRESSURE (PSIA) = ',F7.2)
 963  FORMAT( /2X,'CORE RELATIVE POWER  = ',
     &  F6.2,' %',2X,' SOLUBLE POISON CONCENTRATION (PPM) =',F7.2)
 965  FORMAT( /2X,'COOL. INLET MASS VEL. AT BOTTOM FUEL NODE',
     *  ' [LB/FT^2-HR]  =',2X,F12.2)
 966  FORMAT( /2X,'COOL. INLET MASS VEL. BELOW BOTTON AXIAL',
     *  ' NODE [LB/FT^2-HR]  =',2X,F12.2)
 1596 FORMAT(/' ===> THE CRITICAL SEARCH FAILED TO CONVERGE')
 1591 FORMAT(/' ===> THE POWER LEVEL SEARCH FAILED TO CONVERGE')
 3663 FORMAT(T20,
     &  ' NUMBER OF CRITICALITY/POWER SEARCH ITERATIONS     : ',I3)
 9841 FORMAT(T20,' THE CRITICAL SOLUBLE POISON VALUE  : ',F10.4)
 9842 FORMAT(T20,' THE CRITICAL COOLANT INLET TEMP. [F] : ',F10.4)
 9843 FORMAT(T20,' THE CRITICAL LEAD BANK WITHDRAWN [INCH]: '
     &  ,F10.4)
 9844 FORMAT(T20,' THE CRITICAL POWER LEVEL     : ',F10.4)
 1971 FORMAT(/'#####> SEARCH ON POWER LEVEL')
 1972 FORMAT(/'#####> SEARCH ON SOLUBLE POISON')
 1973 FORMAT(/'#####> SEARCH ON INLET COOLANT TEMP')
 1974 FORMAT(/'#####> SEARCH ON CONTROL ROD')
 1096 FORMAT(/' ===> THE CRITICAL SEARCH CONVERGED')
 1091 FORMAT(/' ===> THE POWER LEVEL SEARCH CONVERGED')
 1080 FORMAT(/' ===> NO CRITICALITY OR POWER LEVEL SEARCH DONE')
 1070 FORMAT(/'      KEFF = ',F15.6,7X,'PEAK(',I3,',',I3,',',I3,
     &  ') = ',F10.7//)
 1079 FORMAT(/' CORE RELATIVE POWER (%)= ',F11.5,5X,
     &  'PEAK(',I3,',',I3,',',I3,') = ',F10.7//)
 1965 FORMAT( /2X,'CONTROL BANKS POSITIONS ( INCHES WITHDRAWN ) :')
 6966 FORMAT(5X,'BANK # : ',3X,8(I2,6X))
 8966 FORMAT(14X,8(F6.2,2X))
      
      RETURN
      END
