      SUBROUTINE OUTINTR(
     &  SWOLD,VELOC,SEFF,SEXT,AVBU,ALXPLAMD,CI,BETAT,
     &  FILAMDT0,FILAMDT1,EXPLAMDT,VOLU,FNSWT,
     &  FNPPOT,FNPPPOT,FNOLDT,SW,TNF,SIGDSN,XHIP,SCW,SCAT,
     &  ITRR,WOM,LSEXTZ,LSEXTR,FNSHIFT,SWPPOT)
C
C     THIS SUBROUTINE PERFORMS OUTER-INNER ITERATIONS UTILIZING
C     FDM OR NEM OPTION FOR TRANSIENT SOLUTION
C
      use iss_rk3d_int,   ONLY: rel2rk3d !vmq
    
      include 'param.fcb'
      include 'timetr.fcb'
      include 'nemcnt.fcb'
      include 'thermo.fcb'
      include 'veloc.fcb'
      include 'extsor.fcb'
      include 'opti.fcb'
      include 'burn.fcb'
      include 'geom.fcb'
      include 'soln2.fcb'
      include 'cntl.fcb'
      include 'crit.fcb'
      include 'tim.fcb'
      include 'xsec1.fcb'
      include 'xeopt.fcb'
      include 'che.fcb'
      include 'spectral.fcb'
      include 'only.fcb'
      include 'crhs.fcb'
      include 'power.fcb'
      include 'perttr.fcb'
      include 'flamdold.fcb'
      include 'varlen.fcb'
      include 'varlens.fcb'
      include 'array.fcb'
      include 'conv.fcb'
      
      DIMENSION
     &  SCW(NXYL,NZ,*)                ,SCAT(NXYL,NZ,*)          ,
     &  FNSWT(NXYL,*)                 ,FNPPOT(NXYL,*)           ,
     &  FNPPPOT(NXYL,*)               ,FNOLDT(NXYL,*)           ,
     &  SW(NXYL,NZ,*)                 ,VOLU(NXYL,*)             ,
     &  LSEXTZ(*)                     ,FNSHIFT(NXYL,NZ,*)       ,
     &  LSEXTR(*)                     ,SWOLD(NXYL,NZ,*)         ,
     &  SEFF(NXYL,NZ,*)               ,SEXT(*)                  ,
     &  VELOC(NXYL,NZ,*)              ,SWPPOT(NXYL,NZ,*)        ,
     &  ALXPLAMD(NXYL,NZ,NG,*)                ,
     &  CI(NXYL,NZ,*)                 ,BETAT(NXYL,NZ)           ,
     &  FILAMDT0(NXYL,NZ,*)           ,FILAMDT1(NXYL,NZ,*)      ,
     &  EXPLAMDT(NXYL,NZ,*)           ,AVBU(NBUMAX)             ,
     &  TNF(NXYL,NZ,*)                ,SIGDSN(NXYL,NZ,NG,*)     ,
     &  XHIP(NXYL,NZ,*)               ,ITRR(*)                  ,
     &  WOM(*)

      IF (repeattr) THEN  !vmq
       repeattr = .false. !vmq
       GOTO 2999          !vmq
      ENDIF               !vmq
      TSTARTTH=TTHTR
      TSTARTXS=TXSFDTR
!      IBSRCH=1 !vmq
      ASRCH='N'
      RTRECTR=0.
      KKCTR = 0
      NCALNON = 0
      MAOUTERUP=0
      MODIFY=0 !VMQ
      
      IF(NPC.EQ.'Y') THEN
       WRITE(55,998)
       WRITE (55,1021) AVBU(IBU)
       WRITE(55,880)
       WRITE(55,881) (IG,WOM(IG),ITRR(IG),IG=1,NG)
      ENDIF
      
      CALL GTIME(RTOUT1)
      NCNT =-1
      ISRCH= 0
      KSTR = -1
C     
C     SET NEW CHEBY POLYNOMIAL CYCLE FLAG
C     ( SO AS EVERY TIME STEP STARTS WITH CHEBY ORDER 0 )
C==========================================================
C     *
      NEWCP = 1
      
C     
C.....INITIALIZE THE NEM VARIABLES
C     
      TRTNCPU = 0.00
      INEM = 0
      KNEM = 0
      RESIDUALOLD = 0.0
C     
C.....EXTRAPOLATE FISSION SOURCE TO NEW TIME STEP ASSUMING EXPONENTIAL
C.....TIME BEHAVIOR. 
      
      FNSWTSUM=0.0
      FNSWTSUMOLD=0.0
      DO 22 IZ=1,NZ
       DO 2 IXY=1,NXYL
        FNSWTSUMOLD=FNSWTSUMOLD+FNSWT(IXY,IZ)
        FNSWT(IXY,IZ)= 0.0
        DO 1 IG=1,NG
         FNSWT(IXY,IZ) =  FNSWT(IXY,IZ)
     *     + TNF(IXY,IZ,IG)*SW(IXY,IZ,IG)
 1      CONTINUE
        FNSWT(IXY,IZ)=FNSWT(IXY,IZ)*VOLU(IXY,IZ)
        FNSWTSUM=FNSWTSUM+FNSWT(IXY,IZ)
 2     CONTINUE
 22   CONTINUE
      SWTDELTA=ABS(FNSWTSUM-FNSWTSUMOLD)/FNSWTSUMOLD

      DO 114 IZ = 1, NZ
       DO 14 IXY = 1, NXYL
        DO 13 IG = 1, NG
         EXPLAMDT(IXY,IZ,IG) = 0.D0
         DO 12 IP=1,NPREC
          EXPLAMDT(IXY,IZ,IG) = EXPLAMDT(IXY,IZ,IG) +
     &      ALXPLAMD(IXY,IZ,IG,IP) * CI(IXY,IZ,IP)
 12      CONTINUE
 13     CONTINUE
 14    CONTINUE
 114  CONTINUE

      DO 124 IZ = 1, NZ
       DO 24 IXY = 1, NXYL
        DO 23 IG = 1, NG
         SEFF(IXY,IZ,IG) =
     &     +  FILAMDT0(IXY,IZ,IG) * FNOLDT(IXY,IZ)/FLAMDA
     &     +  EXPLAMDT(IXY,IZ,IG)
     &     +  SWOLD(IXY,IZ,IG)*1./(VELOC(IXY,IZ,IG)*DELTAT)
     &     *VOLU(IXY,IZ)
     &     +  LSEXTR(IXY)*LSEXTZ(IZ)*SEXT(IG)*VOLU(IXY,IZ)
 23     CONTINUE
 24    CONTINUE
 124  CONTINUE

C     
C-----OUTER   ITERATIONS   START----------------------
C     
10000 CONTINUE

      KSTR=KSTR+1
      
      IF(KSTR.EQ.KITR .OR. NPC.EQ.'Y') THEN
       IF(NEWCP.EQ.1) WRITE(55,*)
       WRITE(55,1020) KSTR+1
      ENDIF  
C !vmq      IF(CRTON.EQ.'Y') THEN
C !vmq       IF(NEWCP.EQ.1) WRITE(6,*)
C !vmq       WRITE(*,1020) KSTR+1
C !vmq       WRITE(6,*)'-----------------------'
C !vmq      ENDIF
C     
C------SET FISSION SOURCE(N), FISSION SOURCE(N-1),
C------SET FISSION SOURCE(N-2)
C     
      DO 43 IZ = 1, NZ
       DO 3 IXY = 1, NXYL
        FNPPPOT(IXY,IZ)=FNPPOT(IXY,IZ)
        FNPPOT(IXY,IZ)=FNSWT(IXY,IZ)
 3     CONTINUE
 43   CONTINUE

C !vmq no weil      IF(IOUTER.EQ.2) THEN
C !vmq no weil       IF(OMEGAEXT.NE.0.0) THEN
C !vmq no weil        DO 121 IZ = 1, NZ
C !vmq no weil         DO 21 IXY = 1, NXYL
C !vmq no weil          DO 20 IG=1,NG
C !vmq no weil           SWPPOT(IXY,IZ,IG)=SW(IXY,IZ,IG)
C !vmq no weil 20       CONTINUE
C !vmq no weil 21      CONTINUE
C !vmq no weil 121    CONTINUE
C !vmq no weil       ENDIF
C !vmq no weil      ENDIF	  
      
      DO 134 IZ = 1, NZ
       DO 34 IXY = 1, NXYL
        DO 33 IG = 1, NG
         SCW(IXY,IZ,IG)=
     &     ( (1.0 - BETAT(IXY,IZ))*XHIP(IXY,IZ,IG)
     &     +FILAMDT1(IXY,IZ,IG) )*(FNPPOT(IXY,IZ)/FLAMDA)
     &     -FNSHIFT(IXY,IZ,IG)*SW(IXY,IZ,IG)
     &     +SEFF(IXY,IZ,IG)
 33     CONTINUE
 34    CONTINUE
 134  CONTINUE
C     
C-----INNER   ITERATIONS   START------------------------
C     
      CALL GTIME(RTREC1)
C     
C-------FAST GROUP SOLUTION----------------------
C     
      INERF = 0
      IF(NGF.GT.0) THEN
       DO 400 IGF = 1,NGF
        DO 391 IZ=1,NZ
         DO 390 IXY=1,NXYL
          SCAT(IXY,IZ,IGF) = 0.0
          DO 385 IGP=1,NG
           IF(IGP.EQ.IGF) GOTO 385
           IGPP=IGP
           IF(IGP.GT.IGF) IGPP=IGP-1
           SCAT(IXY,IZ,IGF) = SCAT(IXY,IZ,IGF)
     *       +SIGDSN(IXY,IZ,IGF,IGPP)*SW(IXY,IZ,IGP)
 385      CONTINUE
          SCAT(IXY,IZ,IGF)=SCAT(IXY,IZ,IGF)*VOLU(IXY,IZ)
 390     CONTINUE
 391    CONTINUE
        DO 40 KC1=1,ITRR(IGF)
         
         CALL LSORB(IGF,
     &     A(LSWN),A(LCWN),A(LWOMN),A(LWOMON),AINT(LIRPLANN),
     &     AINT(LIBPLANN),AINT(LIRPLN),AINT(LIBPLN),AINT(LIYPLANN),
     &     AINT(LIYPLN),A(LXCWVN),A(LXSWSVN) )
         
 40     CONTINUE
        INERF = INERF + ITRR(IGF)
 400   CONTINUE
       INERTOTF = INERF
      ENDIF
C     
C-------THERMAL GROUP SOLUTION-------------------
C     
      I_THRMITR = 0
 501  CONTINUE
      
      INERH = 0
      DO 500 IGT = NGF+1,NG
       DO 491 IZ=1,NZ
        DO 490 IXY=1,NXYL
         SCAT(IXY,IZ,IGT) = 0.0
         DO 485 IGP=1,NG
          IF(IGP.EQ.IGT) GOTO 485
          IGPP=IGP
          IF(IGP.GT.IGT) IGPP=IGP-1
          SCAT(IXY,IZ,IGT) = SCAT(IXY,IZ,IGT)
     *      +SIGDSN(IXY,IZ,IGT,IGPP)*SW(IXY,IZ,IGP)
 485     CONTINUE
         SCAT(IXY,IZ,IGT)=SCAT(IXY,IZ,IGT)*VOLU(IXY,IZ)
 490    CONTINUE
 491   CONTINUE

       DO 50 KC2=1,ITRR(IGT)
        CALL LSORB(IGT,
     &    A(LSWN),A(LCWN),A(LWOMN),A(LWOMON),AINT(LIRPLANN),
     &    AINT(LIBPLANN),AINT(LIRPLN),AINT(LIBPLN),AINT(LIYPLANN),
     &    AINT(LIYPLN),A(LXCWVN),A(LXSWSVN) )
 50    CONTINUE
       INERH = INERH + ITRR(IGT)
 500  CONTINUE
      INERTOTH = INERH
      
      I_THRMITR = I_THRMITR + 1
      IF(I_THRMITR.LT.N_THRMITR) GOTO 501
      
C     
C-----INNER   ITERATIONS   END--------------------------
C     
      CALL GTIME(RTREC2)
      RTRECTR=RTRECTR+(RTREC2-RTREC1)
      KKCTR=KKCTR+INERTOTF+INERTOTH
      
      DO 413 IZ=1,NZ
       DO 411 IXY=1,NXYL
        FNSWT(IXY,IZ)= 0.0
        DO 412 IG=1,NG
         FNSWT(IXY,IZ)=FNSWT(IXY,IZ)+TNF(IXY,IZ,IG)*SW(IXY,IZ,IG)
 412    CONTINUE
        FNSWT(IXY,IZ)=FNSWT(IXY,IZ)*VOLU(IXY,IZ)
 411   CONTINUE
 413  CONTINUE
C     
C-----EXTRAPOLATE   THE   FISSION   SOURCE -------------
C-----CALCULATE   THE   ERRORS   -------------------------
C-----(1) EIGENVALUE           -------------------------
C-----(2) FISSION SOURCE       -------------------------
C     
C !vmq no weil      IF(IOUTER.EQ.1) THEN
       CALL CHEBYTR(KSTR,MAOUTERUP,IRETRN,
     &   A(LFNSWTN),A(LFNPPOTN),A(LFNPPPOTN),AINT(LNCOLXYN),
     &   AINT(LNCOLZN),RESIDUAL )
C !vmq no weil      ELSEIF(IOUTER.EQ.2) THEN
C !vmq no weil       CALL WEILANDTTR(KSTR,IRETRN,
C !vmq no weil     &   A(LFNSWTN),A(LFNPPOTN),AINT(LNCOLXYN),AINT(LNCOLZN),
C !vmq no weil     &   A(LSWN),A(LSWPPOTN),RESIDUAL )
C !vmq no weil      ENDIF 

      IF(INEM.EQ.0) RESIDUALOLD=RESIDUAL 

C     
C-----CHECK   THE   OUTER   LOOP   CONVERGENCE -------------
C-----
C-----NOT CONVERGED                    (IRETRN=1)
C-----NOT CONVERGED AND EXCEEDED LIMIT (IRETRN=2)
C-----CONVERGED                        (IRETRN=3)
C-----
C     
      IF(IONE.EQ.2)THEN
       IF((KSTR+1).GE.IOK) GOTO 200
      ENDIF
      
      GOTO (1111,222,1111), IRETRN
      
 1111 IF(IRETRN.EQ.3.AND.KSTR.EQ.0.AND.SWTDELTA.LT.0.0001) GOTO 200
C     
C...  SET FLAG .EQ. 0 IF JUST ENDED A CHEBY CYCLE
C     
      IF(NORDCP.GT.0 .AND. NEWCP.EQ.1 ) NCNT=NCNT+1

      IF(IMETHOD.EQ.2) THEN
       INEM = INEM + 1
      ENDIF
      
      IF(NCNT.EQ.0.OR.ANFDBK.EQ.'N')THEN
       
C     
C...  DETERMINE RELATIVE RESIDUAL ERROR REDUCTION FROM LAST NEM UPDATE
C     
       IF(RESIDUALOLD.EQ.0.0) THEN
        EPSREL=1E+06
       ELSE  
        EPSREL=ABS(RESIDUAL/RESIDUALOLD)
       ENDIF
C     
C-----OUTPUT TO THE SCREEN EVERY OUTER ITERATION
C     
C !vmq       IF(CRTON.EQ.'Y'.AND.IMETHOD.EQ.2) WRITE(*,870) EPSREL,EPSNEM
       IF(NPC.EQ.'Y'.AND.IMETHOD.EQ.2)  WRITE(55,871) EPSREL
       
       KNEM = KNEM + 1
       
       IF (((KNEM.GE.NNEM).OR.(EPSREL.LE.EPSNEM))
     *   .AND.(IMETHOD.EQ.2).AND.(KSTR.GT.0)) THEN

        DO 5492 IG=1,NG
         DO 5491 IZ=1,NZ
          DO 5490 IXY=1,NXYL
           SCAT(IXY,IZ,IG) = 0.0
           DO 5485 IGP=1,NG
            IF(IGP.EQ.IG) GOTO 5485
            IGPP=IGP
            IF(IGP.GT.IG) IGPP=IGP-1
            SCAT(IXY,IZ,IG) = SCAT(IXY,IZ,IG)
     *        +SIGDSN(IXY,IZ,IG,IGPP)*SW(IXY,IZ,IGP)
 5485      CONTINUE
           SCAT(IXY,IZ,IG)=SCAT(IXY,IZ,IG)*VOLU(IXY,IZ)
 5490     CONTINUE
 5491    CONTINUE
 5492   CONTINUE
C     
C...  START OF THE NON-LINEAR NEM ROUTINES
C=========================================
C     
C !vmq        IF(CRTON.EQ.'Y') THEN
C !vmq         PRINT *,'>>>>>>>  PERFORMING NON-LINEAR NEM UPDATE '
C !vmq        ENDIF
        CALL GTIME(TIMENEM1)
        
C !vmq no hexa        IF(NSHAP.EQ.'CART')  THEN
         
         CALL NONNEMC(
     &     A(LADFSVN),A(LADFSVRDN),A(LDCLN),A(LDLNN),A(LDCWN),
     &     A(LDLLN),A(LDLWN),A(LDCNN),
     &     A(LTLXN),A(LTLYN),
     &     A(LTLZN),A(LPLMX1N),A(LPLMX2N),A(LPLMY1N),A(LPLMY2N),
     &     A(LPLMZ1N),A(LPLMZ2N),A(LDXN),A(LDYN),A(LDZN),A(LSWN),
     &     A(LFRACTN),AINT(LNBCN),AINT(LNXSTARTN),AINT(LNXENDN),
     &     AINT(LNDNUMN),AINT(LNYSTARTN),AINT(LNYENDN),
     &     A(LRLN),A(LRLPN),A(LRM1N),A(LRMP1N),A(LRM2N),A(LRMP2N),
     &     A(LDFN),A(LDFPN),A(LJNEMN),A(LSEFVEN) )
         
C !vmq no hexa        ENDIF
C !vmq no hexa        
C !vmq no hexa        IF(NSHAP.EQ.'HEXA')THEN
C !vmq no hexa         
C !vmq no hexa         CALL NONNEMH(
C !vmq no hexa     &     A(LFRACTN),A(LDZN),A(LSWN),A(LSWSN),A(LDCLN),
C !vmq no hexa     &     A(LDCWN),A(LDCNVN),A(LDCNUN),A(LDLLN),A(LDLWN),
C !vmq no hexa     &     A(LDLNVN),A(LDLNUN),A(LADFSVN),A(LADFSVRDN),
C !vmq no hexa     &     A(LTLXN),A(LTLVN),A(LTLUN),A(LTLZN),
C !vmq no hexa     &     A(LPLMZX1N),A(LPLMZV1N),A(LPLMZU1N),A(LPLMXY1N),
C !vmq no hexa     &     A(LPLMXY2N),AINT(LNBCN),AINT(LNXSTARTN),AINT(LNXENDN),
C !vmq no hexa     &     AINT(LNDNUMN),
C !vmq no hexa     &     A(LRLN),A(LRLPN),A(LRM1N),A(LRMP1N),A(LRM2N),A(LRMP2N),
C !vmq no hexa     &     A(LDFN),A(LDFPN),A(LJNEMN),
C !vmq no hexa     &     AINT(LLZN),AINT(LLZ1N),AINT(LLPZN),AINT(LLPZ1N),A(LSEFVEN),
C !vmq no hexa     $     A(LCURNXN),A(LCURNVN),A(LCURNUN),A(LPLMZX2N),
C !vmq no hexa     $     A(LPLMZV2N),A(LPLMZU2N),A(LSRCMOMN),A(LSWSHETN))
C !vmq no hexa         
C !vmq no hexa        ENDIF
        
        CALL GTIME(TIMENEM2)
        TRTNCPU = TRTNCPU + TIMENEM2-TIMENEM1
        INEM = 0
        KNEM = 0
        NCALNON = NCALNON + 1
        MODIFY=1
       ENDIF
       
       SCALE=1.00000000
       CALL RELPOWER(SCALE,
     &   A(LPWRDNN),A(LRELPWRN),A(LZETAN),A(LDIN),
     &   A(LALPHATN),A(LVOLUN),A(LSWN),A(LTPFN),
     &   AINT(LNCOLXYN),AINT(LNCOLZN),A(LFRACTBN)  ,
     $   A(LRELPWRSN),A(LSWSN),A(LTPFSN))
       
C !vmq always anfdbk       IF(ANFDBK.EQ.'Y'.AND.ANFDBKIMP.EQ.'Y') THEN
C !vmq        IF(CRTON.EQ.'Y') THEN
C !vmq         PRINT *,'>>>>>>>  PERFORMING T-H UPDATE '
C !vmq        ENDIF
        
        CALL GTIME(TIN)
        
C        NTHSWITCH=0
         !vmq
         
C        CALL THFDBKK(NTHSWITCH,A(LWTFRRIN),A(LVOLUN),A(LAREAN),
C     &    A(LDOPLN),A(LRHOWN),A(LTAVFN),A(LHEFFN),
C     &    A(LHEFFOLDN),A(LTCOLCOLDN),A(LTAVFOLDN),A(LGGMKINN),
C     &    A(LRHOWOLDN),A(LGGMKN),A(LTTCOLINN),A(LPWRDNN),
C     &    A(LPWRDNOLDN),A(LHEATFLUXN),A(LDZN),AINT(LNCOLXYN),
C     &    AINT(LNCOLZN),A(LFUFRN),A(LTCOLCN),A(LTFREFN),
C     &    A(LTTCOLINOLDN),A(LUNEWN),A(LUOLDN) )

        repeattr = .true. !vmq 
        RETURN  !vmq
 2999   CONTINUE !vmq
        call rel2rk3d !vmq

        CALL GTIME(TOUT)
        TTHTR=TTHTR+(TOUT-TIN)
        
        MODIFY=1
C !vmq always anfdbk      ENDIF
       
C       IF(ANFDBK.EQ.'Y'.AND.ANFDBKIMP.EQ.'Y') THEN
C     
C.....IF MULTIPLE OUTERS (W/O SCALING) PER TIME STEP NEEDED
C.....THEN BYPASS MULTIPLE SCALING
C     
C...  START OF THE MULTIPLE SCALING PROCEDURE
C================================================
C     
        IEXIT=0
        IF(NEWCP.EQ.1.AND.KSTR.GE.ISCTR) THEN
         CALL GTIME(Tin)
         CALL MFST(IEXIT)
         CALL GTIME(TOUT)
         TSCALTR=TSCALTR+(TOUT-TIN)
        ENDIF
C     
C...  T-H ROUTINES BEEN UPDATED...DO NOT UPDATE T-H ROUTINES
C     
C        IF(MODIFY.NE.1)THEN
C         SCALE=1.00
C         IF(IEXIT.NE.1) THEN
C          CALL RELPOWER(SCALE,
C     &      A(LPWRDNN),A(LRELPWRN),A(LZETAN),A(LDIN),
C     &      A(LALPHATN),A(LVOLUN),A(LSWN),A(LTPFN),
C     &      AINT(LNCOLXYN),AINT(LNCOLZN),A(LFRACTBN)  ,
C     $      A(LRELPWRSN),A(LSWSN),A(LTPFSN))
C
C          IF(CRTON.EQ.'Y') THEN
C           PRINT *,'>>>>>>>  PERFORMING T-H UPDATE '
C          ENDIF
C          
C          CALL GTIME(TIN)
C          
C          NTHSWITCH=0
C           !vmq
C          CALL THFDBKK(NTHSWITCH,A(LWTFRRIN),A(LVOLUN),
C     &      A(LAREAN),A(LDOPLN),A(LRHOWN),A(LTAVFN),A(LHEFFN),
C     &      A(LHEFFOLDN),A(LTCOLCOLDN),A(LTAVFOLDN),A(LGGMKINN),
C     &      A(LRHOWOLDN),A(LGGMKN),A(LTTCOLINN),A(LPWRDNN),
C     &      A(LPWRDNOLDN),A(LHEATFLUXN),A(LDZN),AINT(LNCOLXYN),
C     &      AINT(LNCOLZN),A(LFUFRN),A(LTCOLCN),A(LTFREFN),
C     &      A(LTTCOLINOLDN),A(LUNEWN),A(LUOLDN) )
C
C        call rel2rk3d !vmq
C
C          CALL GTIME(TOUT)
C          TTHTR=TTHTR+(TOUT-TIN)
C          
C         ENDIF
C         MODIFY=1
C        ENDIF
C       ENDIF
      ENDIF
C     
C     .. SINGLE SCALING ( ONLY WHEN NOT AN UPDATE )
C--------------------------------------------------------
C     
C !vmq always anfdbk      IF((ANFDBK.EQ.'N'.OR.(ANFDBK.EQ.'Y'.AND.ANFDBKIMP.EQ.'N'))
C !vmq always anfdbk     *  .AND.NEWCP.EQ.1.AND.KSTR.GE.ISCTR) THEN
C !vmq always anfdbk       CALL GTIME(TIN)
C !vmq always anfdbk       CALL SFST
C !vmq always anfdbk       CALL GTIME(TOUT)
C !vmq always anfdbk       TSCALTR=TSCALTR+(TOUT-TIN)
C !vmq always anfdbk      ENDIF
      
      IF(MODIFY .EQ. 1) THEN

       CALL GTIME(TIN)
       
       LTHSHORT = 0
       CALL XSFDBK(
     &   A(LDCLN),A(LDLNN),A(LDCWN),A(LDCNVN),A(LDCNUN),A(LDLLN),
     &   A(LDLWN),A(LDCNN),A(LDLNVN),A(LDLNUN),A(LRIVELON),A(LRNURON),
     &   A(LRNURIN),A(LB2N),
     &   A(LDOPLN),A(LRHOWN),A(LDXEN),A(LDSMN),
     &   A(LDXN),A(LDYN),A(LDZN),A(LVOLUN),A(LAWXN),A(LAWUN),A(LAWVN),
     &   A(LAWZN),A(LAWYN),A(LBWYN),A(LBWXN),A(LBWUN),A(LBWVN),
     &   A(LBWZN),A(LAQN),A(LTCDN),A(LTCAN),A(LTCRN),A(LTNFN),A(LTPFN),
     &   A(LTXTN),A(LSIGDSNN),
     &   A(LBETAN),A(LBETAMIN),A(LXHIPN),A(LXHIPMIN),
     &   A(LBETATN),A(LXHIDMIN),A(LBETATLAMN),A(LFU5N),A(LFU8N),
     &   A(LFPU9N),A(LFPU0N),A(LFPU1N),
     &   A(LFPU2N),A(LSWN),A(LDU38N),A(LDPU39N),A(LDPU40N),A(LDPU41N),
     &   A(LDU35N),A(LDPU42N),A(LRNUU5N),A(LRNUU8N),A(LRNUP9N),
     &   A(LRNUP0N),A(LRNUP1N),A(LRNUP2N),AINT(LNCOLXYN),AINT(LNCOLZN),
     &   AINT(LNBCN),AINT(LNXSTARTN),AINT(LNXENDN),AINT(LNDNUMN),
     &   AINT(LNMAXN),A(LXXEABN),A(LXSMABN),A(LRNUN),A(LTCOLCN),
     &   A(LFRACTN),A(LRHOWREFN),A(LTCOLREFN),
     &   A(LGIN),A(LGXN),A(LGPN),A(LGINMIN),
     &   A(LGXNMIN),A(LGPNMIN),A(LFU5PYRON),A(LFU8PYRON),A(LFPU9PYRON),
     &   A(LFPU0PYRON),A(LFPU1PYRON),A(LFPU2PYRON),
     &   A(LFU5PYRIN),A(LFU8PYRIN),A(LFPU9PYRIN),
     &   A(LFPU0PYRIN),A(LFPU1PYRIN),A(LFPU2PYRIN),
     &   LTHSHORT,A(LTTCOLINN),A(LFU6N),A(LDU36N),A(LRNUU6N),
     &   A(LFU6PYRON),A(LFU6PYRIN),A(LFU4N),A(LDU34N),A(LRNUU4N),
     &   A(LFU4PYRON),A(LFU4PYRIN),A(LRHOWMREFN),
     &   A(LREFBN),
     &   A(LDAM41N),A(LFAM1N),A(LFAM1PYRON),A(LFAM1PYRIN),A(LRNUA1N),
     &   A(LALAMDATN),A(LALAMDAMIN),A(LBFACTN),
     $   A(LTXTON),A(LTNFON),A(LTPFON))

       CALL GTIME(TOUT)
       TXSFDTR=TXSFDTR+(TOUT-TIN)
       
      ENDIF  
      
      IF(MODIFY.EQ.1.OR.(IOUTER.EQ.2.AND.NCNT.EQ.0)) THEN  

C !vmq no weil       IF(IOUTER.EQ.2.AND.(WEILANDTFS*WSCALE).GT.0.0) THEN
C !vmq no weil        
C !vmq no weilC !vmq        IF(CRTON.EQ.'Y') THEN
C !vmq no weilC !vmq         WRITE(*,180) WEILANDTFS*WSCALE
C !vmq no weilC !vmq 180     FORMAT(' >>>>>>>  PERFORMING WEILANDT SHIFT UPDATE WITH ',
C !vmq no weilC !vmq     &     'SHIFT = ',E12.5)         
C !vmq no weilC !vmq        ENDIF
C !vmq no weil        CALL WSHIFT(A(LTNFN),
C !vmq no weil     &    A(LSWN),A(LFNSWTN),A(LFNSHIFTN),A(LBETATN),
C !vmq no weil     &    A(LXHIPN),A(LBETATLAMN),A(LFILAMDT1N))
C !vmq no weil        
C !vmq no weil       ENDIF
       
       CALL TRIDIA0( A(LRBWXVN),A(LBBWXVN),
     &   A(LRBFVN),A(LBBFVN),A(LRQWVN),A(LBQWVN),
     &   A(LYBWXVN),A(LYBFVN),A(LYQWVN),A(LAWZN),
     &   A(LBWZN),A(LAQN),AINT(LIRPLANN),AINT(LIBPLANN),
     &   AINT(LIYPLANN),A(LBFN),A(LQWN),A(LFNSHIFTN) )

       NEWCP=1
       MAOUTERUP=KSTR
       MODIFY=0
       
      ENDIF
      
      IF(NCNT.EQ.0) NCNT=-1
      
      IF(IRETRN.EQ.3) GOTO 200
      
      GOTO 10000
C     
C-----PRINT CONVERGENCE STATUS -------------------------
C     
 222  CONTINUE
      
      CALL GTIME(RTOUT2)
      OUTOTTR=(RTOUT2-RTOUT1)
      RTOUTTR=(RTOUT2-RTOUT1)-(TXSFDTR-TSTARTXS)-(TTHTR-TSTARTTH)
     *  -(TSCALTR+TRTNCPU+RTRECTR)
      RTRECTR=RTRECTR+TLSTR
      WRITE(55,1050)
      CONVRG='NO'
      repeat = .false. !vmq
      
      RETURN
      
 200  CONTINUE
      CALL GTIME(RTOUT2)
      OUTOTTR=(RTOUT2-RTOUT1)
      RTOUTTR=(RTOUT2-RTOUT1)-(TXSFDTR-TSTARTXS)-(TTHTR-TSTARTTH)
     *  -(TSCALTR+TRTNCPU+RTRECTR)
      RTRECTR=RTRECTR+TLSTR
      convrk3d = .true. !vmq
      IF(IRETRN.EQ.3) THEN
       CONVRG='YES'
      ELSE
       CONVRG='N'
      ENDIF
      
 870  FORMAT(/T2,'NEM: L_2 TRUE REL RESID KICKOUT CRIT: ',
     &  2X,E12.5,2X,E12.5)
 871  FORMAT(6X,'NEM: L_2 RELATIVE RESIDUAL         =',E12.5/)
 880  FORMAT(//1X,'ENERGY',
     *  /1X,'GROUP  ',9X,'OMEGA',7X,'INNER IT./OUTER IT.')
 881  FORMAT(3X,I2,6X,E13.5,11X,I3)
 998  FORMAT(1H1,//T55,'(( ITERATION EDIT ))',//)
 1021 FORMAT (T2,'AVERAGE BURNUP : ',F10.2,' MWD/MTU')
 1020 FORMAT('***  OUTER ITERATION STEP = ',I3)
 1050 FORMAT('***WARNING*** OUTER ITERATION LOOP
     &  FAILED TO CONVERGE')
      
      RETURN
      END
