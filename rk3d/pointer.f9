      SUBROUTINE POINTER3D(LOGIC,IOERROR)
C     
C     THIS SUBROUTINE DETERMINES THE A ARRAY POINTERS (I.E. STARTING
C     LOCATIONS OF ARRAYS)
C     
      include 'param.fcb'
      include 'varlen.fcb'
      include 'varlens.fcb'
      include 'dataf.fcb'
      include 'perttr.fcb'
      include 'cntl.fcb'
      include 'xeopt.fcb'
      include 'hgeo.fcb'
      include 'xsec1.fcb'
      include 'nline.fcb'
      include 'crod.fcb'
      include 'geom.fcb'
      include 'adf.fcb'
      include 'extsor.fcb'
      include 'array.fcb'
      include 'adj.fcb'
      include 'gasch.fcb'
      include 'nterm.fcb'
      include 'spectral.fcb'	
      include 'convfact.fcb'      
      include 'cntl2.fcb'
      include 'pinpow.fcb'
      include 'confmap.fcb'
      
      SAVE NMICRO,NTRAN,NCART,NHEXA,NBURN
      GOTO(1,2,3,4,5,6,7) LOGIC
      
 1    CONTINUE
      
C...........FILE_CNT.F
C      NUMARGS=IARGC()
C      IF(NUMARGS.GE.1) THEN
C       CNTRL=' '
C       CALL GETARG(1,CNTRL)
C      ELSE
       CNTRL='3DKIN.CNTL'
C      ENDIF

      OPEN(UNIT=1,FILE=CNTRL,STATUS='OLD')

      READ (1,80) TITLE
 80   FORMAT(A80)
      READ (1,*) NBUSTEP
      READ (1,*) NBMAX
      IF(NBMAX.EQ.0) NBMAX=1
      
      ICSTART  = 1
      LAVBUN   = 1
      LDELBUN  = LAVBUN+NBUSTEP
      LZBN     = LDELBUN+NBUSTEP
      LBUPMN   = LZBN+NBMAX
      LPPMN    = LBUPMN+NBUSTEP
      LISAVEN  = 1
      LOUTN    = LISAVEN+NBUSTEP*2
      LFINALCN = LOUTN+NBUSTEP*10
      LFINALN  = LPPMN+NBUSTEP
      
      GOTO 100
      
 2    CONTINUE
      
      IF(ITRAN.EQ.'Y') THEN
       NTRAN = 1
      ELSE
       NTRAN = 0
      ENDIF
      
      IF(IBURN.EQ.'Y') THEN
       NBURN = 1
      ELSE
       NBURN = 0
      ENDIF
      
C     ...........FILE_GEO.F
C     
C     ---- OPEN GEOMETRICAL INPUT FILE (UNIT=2) :
C     
      OPEN(UNIT=2,FILE=GEOM,STATUS='OLD')
      
C     
C     ---- READ NODE SHAPE ID :
C     
C     --------- NSHAP = HEXA : HEXAGONAL GEOMETRY
C     --------- NSHAP = CART : CARTESIAN GEOMETRY
C     
      READ (2,110)NSHAP
      CALL INPUTCK('NSHAP',NSHAP,'HEXA','CART',' ',IOERROR)
      
 12   FORMAT(A40) 

C     EXPOSURE MAP AVAILABLE? Y/N
      READ(1,110)IEXP
      CALL INPUTCK('IEXP',IEXP,'Y','N',' ',IOERROR)
      IF (IOERROR.EQ.1)THEN
       IEXP='N'                 !...backward compatible with V5.0.2
       IOERROR=0
       WRITE(6,108)
 108   FORMAT(/,'ERROR is OK',/,
     $   '--- ASSUMED INPUT FOLLOWS OLDER 3DKIN (V5.0.2) FORMAT',/)
      ENDIF
      IF(IEXP.EQ.'Y')READ(1,12)FINITEXP

      IF(NSHAP.EQ.'CART') THEN
       NCART = 1
       NHEXA = 0
      ELSEIF(NSHAP.EQ.'HEXA') THEN
       NCART = 0
       NHEXA = 1
      ENDIF
C     
C     ---- READ CORE SYMMETRY :
C     
      READ(2,110)IDRUN
 110  FORMAT (A5)
      
      IF (NSHAP .EQ. 'CART')THEN
C     
C     --------- IDRUN = FCORE : FULL CORE CALC.
C     --------- IDRUN = HCORE : HALF SYMMETRY CORE CALC.
C     --------- IDRUN = QCORE : QUARTER SYMMETRY CORE CALC.
C     --------- IDRUN = AXIAL : ONE DIMENSION AXIAL CALC.
C     
       IF(IDRUN.NE.'FCORE'.AND.IDRUN.NE.'HCORE'.AND. IDRUN.NE.'QCORE'
     &   .AND. IDRUN.NE.'AXIAL')THEN
        WRITE(6,*)'####ERROR, INPUT THE RIGHT SYMMETRY TYPE'
        IOERROR = 1
       ENDIF
       
      ELSEIF(NSHAP .EQ. 'HEXA')THEN
C     
C     --------- IDRUN = FCORE : FULL CORE CALC.
C     --------- IDRUN = TCORE : ONE-THIRD SYMMETRY CORE CALC.
C     --------- IDRUN = SCORE : ONE-SIXTH SYMMETRY CORE CALC.
C     --------- IDRUN = AXIAL : ONE DIMENSION AXIAL CALC.
C     
C     
       IF(IDRUN.NE.'FCORE'.AND.IDRUN.NE.'TCORE'.AND.IDRUN.NE.'SCORE'
     &   .AND.IDRUN.NE.'AXIAL') THEN
        WRITE(6,*)'####ERROR, INPUT THE RIGHT SYMMETRY TYPE'
        IOERROR = 1
       ENDIF
       
      ENDIF
      
      IF(NSHAP.EQ.'CART')THEN
C     
C     
C     ----- READ # OF MESHES IN THE X,Y DIRECTIONS :
C     
       READ (2,*) NX,NY
C     
C     ----- READ X,Y MESH REFINEMENT
C     
       READ (2,*) NMULXY
       
      ELSEIF(NSHAP.EQ.'HEXA')THEN
       
       READ(2,*) NHR

       NMULXY=1
       
       IF(IDRUN.EQ.'FCORE'.OR.IDRUN.EQ.'AXIAL') THEN
        NX=4*NHR+1
        NY=2*NHR+1
       ELSEIF(IDRUN.EQ.'TCORE') THEN
        NXCENTER=2*NHR+1
        NY=NHR+1
        NX=NXCENTER+NY-1
       ELSEIF(IDRUN.EQ.'SCORE') THEN
        NX=2*NHR+1
        NY=NHR+1
       ENDIF
       
      ENDIF
      
      NXORIG=NX
      NYORIG=NY
      NX=NMULXY*NX
      NY=NMULXY*NY

      IF(NSHAP.EQ.'CART') THEN
       NXYLMAX = NX*NY
       NXYTMAX = NXYLMAX+(2*(NX+NY))
      ELSEIF(NSHAP.EQ.'HEXA') THEN
       IF(IDRUN.EQ.'FCORE') THEN
        NXYLMAX = 3*NHR*(NHR+1)+1
        NXYTMAX = NXYLMAX+(6*NHR+6)
       ELSEIF(IDRUN.EQ.'TCORE') THEN
        NXYLMAX = (NHR+1)**2
        NXYTMAX = NXYLMAX+(4*NHR+6)
       ELSEIF(IDRUN.EQ.'SCORE') THEN
        NXYLMAX = (NHR**2+3*NHR+2)/2
        NXYTMAX = NXYLMAX+(3*NHR+6)
       ENDIF
      ENDIF
C     
C     ------ CALCULATING THE MAXIMUM NUMBER OF LINES OF A GIVEN COLORED
C     [ FOR THE SOLVER ].
      
      IF(NSHAP.EQ.'CART') THEN
       IF(MOD(NXYLMAX+1,2).EQ.0)THEN
        NXYCOLMAX = (NXYLMAX+1)/2
       ELSE
        NXYCOLMAX = NXYLMAX/2
       ENDIF
      ELSEIF(NSHAP.EQ.'HEXA') THEN
       IF(MOD(NXYLMAX+2,3).EQ.0)THEN
        NXYCOLMAX = (NXYLMAX+2)/3
       ELSEIF(MOD(NXYLMAX+1,3).EQ.0)THEN
        NXYCOLMAX = (NXYLMAX+1)/3
       ELSEIF(MOD(NXYLMAX,3).EQ.0)THEN
        NXYCOLMAX = NXYLMAX/3
       ENDIF
      ENDIF
C     
C     
C-----READ NUMBER OF AXIAL NODES :
C     
      READ (2,*) NZ
C     
C-----READ NZ MESH REFINEMENT
C     
      READ (2,*) NMULZ
      
      NZORIG=NZ
      NZ=NMULZ*NZ
      
      
C     
C......READ # OF BASIC ( RADIAL ) FIGURES OF THE CORE
C     
      READ (2,*) NFIGURE

      ICSTART    = LFINALN

      LDDXN      = LFINALN
      LDDYN      = LDDXN+NX
      LDDZN      = LDDYN+NY
      LNSPACXN   = LDDZN+NZ
      LNSPACYN   = LNSPACXN+NXORIG
      LNSPACZN   = LNSPACYN+NYORIG
      LNXSTARTN  = LNSPACZN+NZORIG
      LNXENDN    = LNXSTARTN+NY
      LNDNUMN    = LNXENDN+NY
      LNYSTARTN  = LNDNUMN+(NX+4)*(NY+2)
      LNYENDN    = LNYSTARTN+NX
      LNCOL2DTN  = LNYENDN+NX
      LNCOLZTN   = LNCOL2DTN+NXORIG*NYORIG*NFIGURE
      LLSEXT2DTN = LNCOLZTN+NZORIG
      LLROD2DTN  = LLSEXT2DTN+NXORIG*NYORIG
      LNROT2DTN  = LLROD2DTN+NXORIG*NYORIG
      LNREF2DTN  = LNROT2DTN+NXORIG*NYORIG
      LNTOPZTN   = LNREF2DTN+NXORIG*NYORIG
      LLSEXTZTN  = LNTOPZTN+NZORIG
C     MULTICYCLE
      LEXP3DTN   = LLSEXTZTN+NZORIG
      LEXP3DN    = LEXP3DTN +NXORIG*NYORIG*NZORIG
      LEXPINITN  = LEXP3DN  +NX*NY*NZORIG
      LFINALN    = LEXPINITN+NXYLMAX*NZ
C
C     SURFACE BURNUP
C
      LBUSURF3DTN= LFINALN
      LBUSURF3DN = LBUSURF3DTN+NXORIG*NYORIG*NZORIG*6*NHEXA
      LBUSURFN   = LBUSURF3DN +NX*NY*NZORIG*6*NHEXA
      LFINALN    = LBUSURFN   +NXYLMAX*NZ*6*NHEXA
      
      GOTO 100
      
 3    CONTINUE
      
C     ...........FILE_XSC.F
C     
C     --------OPEN X-SECTION INPUT FILE (UNIT=3, FILENAME=XSECT) :
C     
      OPEN(UNIT=3,FILE=XSECT,STATUS='OLD')
C     
C     -------- READ NUMBER OF NEUTRON ENERGY GROUPS
C     
      READ (3,*)NG
C     
C     -------- READ NUMBER OF THERMAL NEUTRON ENERGY GROUPS
C     
      READ (3,*)NGT
      NGF = NG - NGT
      
      NMG = NG-1
C     
C-----READ THE NUMBER OF TOTAL MATERIAL COLORS
C     
      READ (3,*) ICOLXY
      ICOLMAX = ICOLXY
C     
C     -----READ THE MAXIMUM NUMBER OF BURNUP VALUES X-SEC SPECIFIED FOR
C     
      READ (3,*) NBUMAX
C     MOD  ***COMMENT OUT ASSIGNMENT FOR NMOD IF GOING***
C     MOD  ***TO ACTIVATE DISTINCT MODERATOR TREATMENT***
      NMOD='N'
C     
C     ------SKIP FOLLOWING INPUT IF X-SECTION CORRECTION OPTION IS OFF
C     
      IF(NXSEC.EQ.'Y') THEN
C     
C     ---------READ  NUMBER OF PRECURSOR`S GROUP
C     
       READ (3,*) NPREC
       
C     
C     ----------READ NUMBER OF DECAY HEAT PRECURSORS
C     
       READ (3,*) NDECAY
C     
C     ----------READ IF MODERATOR TO BE TREATED DISTINCTLY
C     
       IF(NMOD.EQ.'Y') THEN
        NXYLMOD=NXYL
        NZMOD=NZ
       ELSE
        NXYLMOD=1
        NZMOD=1
       ENDIF
C     
C----------READ HOW SOLUBLE POISON NUMBER DENISTY SHOULD BE TREATED
C     
C     MOD  ***COMMENT IN READ AND COMMENT OUT ASSIGN FOR NSP IF GOING***
C     MOD  ***TO ACTIVATE SOLUBLE POISON NUMBER DENSITY TREATMENT OPTION***
C     MOD         READ (3,*) NSP
       NSP='C'
       CALL INPUTCK('NSP',NSP,'C','M','A',IOERROR)
       IF(NSP.EQ.'A') THEN
        NXYLNSP=NXYL
        NZNSP=NZ
       ELSE
        NXYLNSP=1
        NZNSP=1
       ENDIF
C     
C     ----------READ NUMBER OF TERMS IN X-SECTIONS T-H FEEDBACK CORRECTIONS
C     
       READ (3,*) NTERMMACRO,NTERMMACRI
       READ (3,*) NTERMCSCATRO,NTERMCSCATRI
       READ (3,*) NTERMFPRO,NTERMFPRI
C     
C     -----READ IN X-SECTION T-H FEEDBACK REPRESENTATIONS
C     
       IF(NTERMMACRO.GT.0)
     &   READ(3,*) (IXSMACRO(ITERM),ITERM=1,NTERMMACRO)
       IF(NTERMMACRI.GT.0)
     &   READ(3,*) (IXSMACRI(ITERM),ITERM=1,NTERMMACRI)
       IF(NTERMCSCATRO.GT.0)
     &   READ(3,*) (IXSCSCATRO(ITERM),ITERM=1,NTERMCSCATRO)
       IF(NTERMCSCATRI.GT.0)
     &   READ(3,*) (IXSCSCATRI(ITERM),ITERM=1,NTERMCSCATRI)
       IF(NTERMFPRO.GT.0)
     &   READ(3,*) (IXSFPRO(ITERM),ITERM=1,NTERMFPRO)
       IF(NTERMFPRI.GT.0)
     &   READ(3,*) (IXSFPRI(ITERM),ITERM=1,NTERMFPRI)
C     
C     -------- READ IF MICROSCOPIC CROSS-SECTION OPTION
C     
       READ(3,110) IMICRO
       CALL INPUTCK('IMICRO',IMICRO,'Y','N',' ',IOERROR)
       
       IF(IMICRO.EQ.'Y') THEN
        READ(3,110)INUMDEN
        DO 301 I=1,5
         IF(INUMDEN(I:I).EQ.' ')GOTO 301 
         IF(ICHAR(INUMDEN(I:I)).GE.48.AND.ICHAR(INUMDEN(I:I)).LE.57)THEN
          BACKSPACE(3)
          INUMDEN='N'
          OEOC='N'
          GOTO 302
         ENDIF
 301    CONTINUE
        CALL INPUTCK('INUMDEN',INUMDEN,'Y','N',' ',IOERROR)
        IF(INUMDEN.EQ.'Y')READ(3,'(A40)')FNUMDEN
       ENDIF
      ENDIF
      READ(1,110)OEOC
      CALL INPUTCK('OEOC',OEOC,'Y','N',' ',IOERROR)
      IF(OEOC.EQ.'Y')THEN
       READ(1,'(A40)',ERR=112)FEOCEXP
       IF(IMICRO.EQ.'Y')READ(1,'(A40)',ERR=112)FEOCDEN
      ENDIF
      GO TO 111
 112  WRITE(6,*)'ERROR-POINTER.F: IN READING FEOC FILENAME'
      WRITE(6,*)'FROM ',CNTRL,' FILE'
      STOP
 111  CONTINUE
      
      IF(NSHAP.EQ.'HEXA')THEN
C
C     PIN POWER RECONSTRUCTION? Y/N
C
       READ(1,110)PPR
       CALL INPUTCK('PPR',PPR,'Y','N',' ',IOERROR)
       IF(IOERROR.EQ.1)STOP 'ERROR IN CNTL FILE -- PPR'
       IF(PPR.EQ.'Y')THEN
        READ(1,110)FPIN
        CALL INPUTCK('FPIN',FPIN,'Y','N',' ',IOERROR)
        IF(IOERROR.EQ.1)STOP 'ERROR IN CNTL FILE -- FPIN'
        IF(FPIN.EQ.'Y')THEN
         READ(1,12)INPPIN
         OPEN(81,FILE=INPPIN,STATUS='OLD')
         READ(81,*)
         READ(81,*)NPIN
        ELSE
         READ(1,*)NHRPIN
        ENDIF
        READ(1,110)OUTPPR
        CALL INPUTCK('OUTPPR',OUTPPR,'Y','N',' ',IOERROR)
        IF(IOERROR.EQ.1)STOP 'ERROR IN CNTL FILE -- OUTPPR'
        IF(OUTPPR.EQ.'Y')THEN
         READ(1,12)OUTPIN
         OPEN(82,FILE=OUTPIN,STATUS='UNKNOWN')
        ENDIF
C     PIN COORDINATES IN AN ASSEMBLY
        IF(FPIN.NE.'Y')THEN
         NPIN=0
         DO IDUM=1,NHRPIN-1
          NPIN=NPIN+IDUM
         ENDDO
         NPIN=6*NPIN+1
        ENDIF
        LPINLOCRN  = LFINALN
        LPINLOCTN  = LPINLOCRN + NPIN*NHEXA
        LAMAXPELLETN=LPINLOCTN + NPIN*NHEXA
        LAMAXPINN  = LAMAXPELLETN+ NXYLMAX*NHEXA
        LRPOWN     = LAMAXPINN+ NXYLMAX*NHEXA
        LPPOWN     = LRPOWN+ NPIN*NHEXA
        LFINALN    = LPPOWN+ NPIN*NHEXA
       ENDIF
      ENDIF
 302  CLOSE(1)
      
      IF(NXSEC.EQ.'Y')THEN
       IF(IMICRO.EQ.'Y') THEN

        NISOT=8
        NRXMAX=2
C     
C----------READ NUMBER OF TERMS IN X-SECTIONS T-H FEEDBACK CORRECTIONS
C     
        READ (3,*) NTERMMICRO
        READ (3,*) NTERMMICRI
C     
C     -----READ IN X-SECTION T-H FEEDBACK REPRESENTATIONS
C     
        IF(NTERMMICRO.GT.0)
     &    READ(3,*) (IXSMICRO(ITERM),ITERM=1,NTERMMICRO)
        IF(NTERMMICRI.GT.0)
     &    READ(3,*) (IXSMICRI(ITERM),ITERM=1,NTERMMICRI)
        NMICRO = 1
       ELSE
        NISOT=0
        NRXMAX=5
        NTERMMICRO = 1
        NTERMMICRI = 1
        NMICRO = 0
       ENDIF
       
      ELSE
       
       NPREC = 1
       NDECAY = 1
       NTERMMACRO = 1
       NTERMMACRI = 0
       NTERMCSCATRO = 1
       NTERMCSCATRI = 0
       NTERMFPRO = 0
       NTERMFPRI = 0
       IXSMACRO(1)=1
       IXSCSCATRO(1)=1
       IMICRO='N'
       NISOT=0
       NRXMAX=5
       NTERMMICRO = 1
       NTERMMICRI = 1
       NMICRO = 0
       
      ENDIF
      
      IF(IMICRO.EQ.'Y') THEN
       
       ITERM=1
       DO 102 IM=1,NTERMMACRO
        DO 101 IK=1,NTERMMICRO
         IF (IXSMICRO(IK).EQ.IXSMACRO(IM)) GOTO 102
 101    CONTINUE
        ITERM=ITERM+1
 102   CONTINUE
       NTERMMACTRO=ITERM-1+NTERMMICRO
       
       ITERM=1
       DO 107 IM=1,NTERMMACRI
        DO 106 IK=1,NTERMMICRI
         IF (IXSMICRI(IK).EQ.IXSMACRI(IM)) GOTO 107
 106    CONTINUE
        ITERM=ITERM+1
 107   CONTINUE
       NTERMMACTRI=ITERM-1+NTERMMICRI
       
      ELSE
       
       NTERMMACTRO=NTERMMACRO
       NTERMMACTRI=NTERMMACRI
       
      ENDIF
C     
C--------READ IF X-SECTION COLOR FILES ARE READ FROM SEPERATE FILES
C     
      READ (3,110) AXSEC
      CALL INPUTCK('AXSEC',AXSEC,'Y','N',' ',IOERROR)
      
      IF(AXSEC.EQ.'Y') THEN
       NAXSEC=1
      ELSE
       NAXSEC=0
      ENDIF
      
      ICSTART    = LFINALN
      
      LAXSCINN   = LFINALCN
      LFINALCN   = LAXSCINN+ICOLXY*10*NAXSEC
      LFUFRN     = LFINALN
      
      LNCOLORN   = LFUFRN+ICOLXY
      LADFSN     = LNCOLORN+ICOLXY
      LADFSRDN   = LADFSN+ICOLXY*NBUMAX*NADFS*NG
      LFINALN    = LADFSRDN+ICOLXY*NBUMAX*NADFS*NG
      IF(PPR.EQ.'Y')THEN
       PI=ACOS(-1.)
       DALPHA=2.*PI/3.
       ALPHA(1)=PI/3.
       ALPHA(2)=PI
       ALPHA(3)=5.*PI/3.
       LCPADFN   = LFINALN
       LCPADFRDN = LCPADFN  +ICOLXY*NBUMAX*NG*6*NHEXA
       LFFN      = LCPADFRDN+ICOLXY*NBUMAX*NG*6*NHEXA
       LFFRDN    = LFFN     +ICOLXY*NBUMAX*NPIN*NHEXA
       LUPUDENN  = LFFRDN   +ICOLXY*NBUMAX*NPIN*NHEXA
      ELSE
       LUPUDENN  = LFINALN
      ENDIF
C     
C     MULTICYCLE
C     
      LANUMDENN   = LUPUDENN   +ICOLXY*12*NMICRO
      LANUMDEN3DN = LANUMDENN  +NXYLMAX*NZ*13*NMICRO
      LANUMDEN3DTN= LANUMDEN3DN+NX*NY*NZORIG*13*NMICRO
C     
      LANUMDENSN = LANUMDEN3DTN+NXORIG*NYORIG*NZORIG*13*NMICRO
      LZETAN     = LANUMDENSN+NXYLMAX*NZ*13*NMICRO*6*NHEXA

      LALPHAIN   = LZETAN+NDECAY
      LALPHANN   = LALPHAIN+NISOT*NDECAY*NMICRO
      LXFPNRON   = LALPHANN+NBUMAX*ICOLXY*NDECAY
      LXFPNRIN   = LXFPNRON+NBUMAX*ICOLXY*NG*2*NTERMFPRO
      LGPNN      = LXFPNRIN+NBUMAX*ICOLXY*NG*2*NTERMFPRI
      LGINN      = LGPNN+NBUMAX*ICOLXY
      LGXNN      = LGINN+NBUMAX*ICOLXY
      LGINMIN    = LGXNN+NBUMAX*ICOLXY
      LGXNMIN    = LGINMIN+NISOT*NMICRO
      LGPNMIN    = LGXNMIN+NISOT*NMICRO
      LSEXTN     = LGPNMIN+NISOT*NMICRO
      LALAMDAN   = LSEXTN+NG
      LALAMDAMIN = LALAMDAN  +NPREC
      LBETAMIN   = LALAMDAMIN+NISOT*NPREC*NMICRO
      LBETANN    = LBETAMIN+NISOT*NPREC*NMICRO
      LXHIDMIN   = LBETANN+NBUMAX*ICOLXY*NPREC
      LWTFRRON   = LXHIDMIN+NG*NPREC
      LWTFRRIN   = LWTFRRON+ICOLXY
      LBUBOSN    = LWTFRRIN+ICOLXY
      LXSECRON   = LBUBOSN+NBUMAX*ICOLXY
      LXSECRIN   = LXSECRON+NBUMAX*ICOLXY*NRXMAX*NG*NTERMMACRO
      LXHIPMIN   = LXSECRIN+NBUMAX*ICOLXY*NRXMAX*NG*NTERMMACRI
      LXHIPNN    = LXHIPMIN+(NISOT+1)*NG*NMICRO
      LXSECRRON  = LXHIPNN+NBUMAX*ICOLXY*NG
      LXSECRRIN  = LXSECRRON+NBUMAX*ICOLXY*NG*NTERMCSCATRO
      LVELOCNN   = LXSECRRIN+NBUMAX*ICOLXY*NG*NTERMCSCATRI
      LBFACTNN   = LVELOCNN+NBUMAX*ICOLXY*NG
      LUCHAINRON = LBFACTNN+NBUMAX*ICOLXY*NPREC
      LUCHAINRIN = LUCHAINRON+ICOLXY*NBUMAX*21*NG*NTERMMICRO*NMICRO
      LRNUU4N    = LUCHAINRIN+ICOLXY*NBUMAX*21*NG*NTERMMICRI*NMICRO
      LRNUU5N    = LRNUU4N+NG*NMICRO
      LRNUU6N    = LRNUU5N+NG*NMICRO
      LRNUU8N    = LRNUU6N+NG*NMICRO
      LRNUP9N    = LRNUU8N+NG*NMICRO
      LRNUP0N    = LRNUP9N+NG*NMICRO
      LRNUP1N    = LRNUP0N+NG*NMICRO
      LRNUP2N    = LRNUP1N+NG*NMICRO
      LRNUA1N    = LRNUP2N+NG*NMICRO

      LRFPA1PYRON= LRNUA1N+NG*NMICRO
      LRFPA2PYRON= LRFPA1PYRON+NG*NTERMMICRO*NMICRO
      LRFPA1PYRIN= LRFPA2PYRON+NG*NTERMMICRO*NMICRO
      LRFPA2PYRIN= LRFPA1PYRIN+NG*NTERMMICRI*NMICRO
      LXSECSCRON = LRFPA2PYRIN+NG*NTERMMICRI*NMICRO
      LXSECSCRIN = LXSECSCRON+NBUMAX*ICOLXY*NG*NMG*NTERMCSCATRO
      LRTN       = LXSECSCRIN+NBUMAX*ICOLXY*NG*NMG*NTERMCSCATRI
      LNMAXN     = LRTN+NG
      LB2COLN    = LNMAXN+ICOLXY
      LRHOWREFN  = LB2COLN+NBUMAX*ICOLXY*NG
      LRHOWMREFN = LRHOWREFN+ICOLXY
      LTCOLREFN  = LRHOWMREFN+ICOLXY
      LTMODREFN  = LTCOLREFN+ICOLXY
      LTFREFN    = LTMODREFN+ICOLXY
      LREFBN     = LTFREFN+ICOLXY
c     
c     Lattice Code Number Density
c     
      LINITNDN   = LREFBN+ICOLXY
      LFINALN    = LINITNDN+ICOLXY*NBUMAX*12*NMICRO
      
      GOTO 100
      
 4    CONTINUE

C     ...........FILE_KIN.F
C     
C     ---- OPEN KINETIC INPUT FILE (UNIT=4) :
C     
      IF(ITRAN.EQ.'Y'.OR.(IXE(1).EQ.4.OR.IXE(1).EQ.5))THEN
       OPEN(UNIT=4,FILE=KINET,STATUS='OLD')
      ENDIF
      
      IF(ITRAN.EQ.'Y')THEN
C     
C     -------NUMBER OF PERTURBATIONS TO BE PERFORMED
C     
       READ(4,*) NPERT
       NPERTMAX = NPERT
       NFP = 0
       NFPMAX = NFP
C     
C     -------NUMBER OF TIME TIME-DEPENDENT OUTPUT TO BE PRINTED
C     
       READ (4,*) NPRINT
C     
C     -------NUMBER OF DIFFERENT TIME SPANS ( WITH DIFFERENT TIME-STEP SIZE )
C     
       READ(4,*) NTSPN
C     
C     ====  CHECK FOR THE CORE TRANSIENT OPTION
C     
      ELSEIF(IXE(1).EQ.4.OR.IXE(1).EQ.5)THEN
C     
C     -------  NUMBER OF TIME STEPS FOR TRANSIENT FISSION PRODUCT
C     
       READ(4,*) NFP
       NFPMAX = NFP
       NPERT = 0
       NPERTMAX = NPERT
       NPRINT = 0
       NTSPN = 0
      ELSE
       NFP = 0
       NFPMAX = 0
       NPERT = 0
       NPERTMAX = 0
       NPRINT = 0
       NTSPN = 0
      ENDIF
      
      ICSTART  = LFINALN
      LTIMETRN = LFINALN
      LPMTN    = LTIMETRN+NPERT
      LTINTN   = LPMTN+NPERT
      LGMINTN  = LTINTN+NPERT
      LZBTN    = LGMINTN+NPERT
      LTIMEPRN = LZBTN+NBMAX*NPERT
      LTIMESPN = LTIMEPRN+NPRINT
      LDELTN   = LTIMESPN+NTSPN
      LTIMEFPN = LDELTN+NTSPN
      LPRFPN   = LTIMEFPN+NFP
      LPMFPN   = LPRFPN+NFP
      LTINFPN  = LPMFPN+NFP
      LZBFPN   = LTINFPN+NFP
      LDELTFPN = LZBFPN+NBMAX*NFP
      
      LFINALN  = LDELTFPN+NFP
      
      GOTO 100
      
 5    CONTINUE
C     ....... GEOMETRY.F
      
      ICSTART      = LFINALN
      LDXN         = LFINALN
      LDYN         = LDXN+1+NX+1
      LDZN         = LDYN+1+NY+1
      LDISTN       = LDZN+1+NZ+1
      LLRODN       = LDISTN+1+NZ
      LNCOLXYN     = LLRODN+NXYLMAX
      LNCOLZN      = LNCOLXYN+NXYLMAX*NFIGURE
      LIBIYNDELN   = LNCOLZN+NZ
      LIBIXWDELN   = LIBIYNDELN+NX*NY
      LNBCYYENDN   = LIBIXWDELN+NX*NY
      LNBCYYSTARTN = LNBCYYENDN+NX
      LNBCXXENDN   = LNBCYYSTARTN+NX
      LNBCXXSTARTN = LNBCXXENDN+NY
      LIBIXWN      = LNBCXXSTARTN+NY
      LNXSTARTBN   = LIBIXWN+NX*NY
      LNXENDBN     = LNXSTARTBN+NY
      LIBIYNN      = LNXENDBN+NY
      LNBCN        = LIBIYNN+NX*NY
      LNCOL2DN     = LNBCN+NXYTMAX
      LLROD2DN     = LNCOL2DN+NX*NY*NFIGURE
      LLSEXT2DN    = LLROD2DN+NX*NY
      LLSEXTZN     = LLSEXT2DN+NX*NY
      LLSEXTRN     = LLSEXTZN+NZ
      LABCYDELN    = LFINALCN
      LNBCXENDN    = LLSEXTRN+NXYLMAX      
      LNYENDBN     = LNBCXENDN+NY
      LNBCYENDN    = LNYENDBN+NX
      LIBIYN       = LNBCYENDN+NX
      LNBCYSTARTN  = LIBIYN+NX*(NY+1)
      LIBIXN       = LNBCYSTARTN+NX
      LNBCXSTARTN  = LIBIXN+(NX+1)*NY
      LABCXDELN    = LABCYDELN+(NX*2)
      LFINALCN     = LABCXDELN+(NY*2)
      LNREF2DN     = LNBCXSTARTN+NY      
      LNTOPZN      = LNREF2DN+NX*NY
      LNROTN       = LNTOPZN+NZ
      LNREFN       = LNROTN+NXYLMAX
      LNROT2DN     = LNREFN+NXYLMAX
      LFRACTBN     = LNROT2DN+NX*NY
      LIBPITCHXHN  = LFRACTBN+NXYLMAX
      LIBPITCHYHN  = LIBPITCHXHN+NY
      LIBIXXN      = LIBPITCHYHN+NX
      LIBIYYN      = LIBIXXN+(NX+1)*NY
      LNBCXRSTARTN = LIBIYYN+NX*(NY+1)
      LNBCYRSTARTN = LNBCXRSTARTN+NY
      LNYSTARTBN   = LNBCYRSTARTN+NX
      
      LFINALN      = LNYSTARTBN+NX
      
      GOTO 100
      
 6    CONTINUE
C     ......... CONVER.F + THPROP.F
      
      ICSTART      = LFINALN
      LDOPLN       = LFINALN
      LAREAN       = LDOPLN+NXYL*NZ
      LVOLUN       = LAREAN+NXYL
      
C     ....... GASCATC.F/GASCATH.F
      
      LIRPLANN     = LVOLUN+NXYL*NZ
      LIBPLANN     = LIRPLANN+NXYCOLMAX
      LIRPLN       = LIBPLANN+NXYCOLMAX
      LIBPLN       = LIRPLN+NXYCOLMAX*2
      LIYPLANN     = LIBPLN+NXYCOLMAX*2
      LIYPLN       = LIYPLANN+NXYCOLMAX*NHEXA
      
C     ....... INITAL.F
      
      LBUNODEN   = LIYPLN+NXYCOLMAX*2*NHEXA
      LDLNN      = LBUNODEN+NXYL*NZ
      LDLLN      = LDLNN+NXYT*NZ*NG*NCART
      LDLWN      = LDLLN+NXYL*(NZ+1)*NG
      LDLNVN     = LDLWN+NXYT*NZ*NG
      LDLNUN     = LDLNVN+NXYT*NZ*NG*NHEXA
      LFRACTN    = LDLNUN+NXYT*NZ*NG*NHEXA
      LDIN       = LFRACTN+NXYL*NZ
      LDU38N     = LDIN+NXYL*NZ*NDECAY
      LDPU39N    = LDU38N+NXYL*NZ*NMICRO
      LDPU40N    = LDPU39N+NXYL*NZ*NMICRO
      LDPU41N    = LDPU40N+NXYL*NZ*NMICRO
      LDU34N     = LDPU41N+NXYL*NZ*NMICRO
      LDU35N     = LDU34N+NXYL*NZ*NMICRO
      LDU36N     = LDU35N+NXYL*NZ*NMICRO
      LDAM41N    = LDU36N+NXYL*NZ*NMICRO

C-----SURFACE HEX ONLY
      LDU38SN    = LDAM41N +NXYL*NZ*NMICRO
      LDPU39SN   = LDU38SN +NXYL*NZ*NMICRO*6*NHEXA
      LDPU40SN   = LDPU39SN+NXYL*NZ*NMICRO*6*NHEXA
      LDPU41SN   = LDPU40SN+NXYL*NZ*NMICRO*6*NHEXA
      LDPU42SN   = LDPU41SN+NXYL*NZ*NMICRO*6*NHEXA    
      LDU34SN    = LDPU42SN+NXYL*NZ*NMICRO*6*NHEXA
      LDU35SN    = LDU34SN +NXYL*NZ*NMICRO*6*NHEXA
      LDU36SN    = LDU35SN +NXYL*NZ*NMICRO*6*NHEXA
      LDAM41SN   = LDU36SN +NXYL*NZ*NMICRO*6*NHEXA
      LDBPSN     = LDAM41SN+NXYL*NZ*NMICRO*6*NHEXA
      LDLFP1N    = LDBPSN+NXYL*NZ*NMICRO*6*NHEXA
      LDLFP2N    = LDLFP1N+NXYL*NZ*NMICRO
      LDPU42N    = LDLFP2N+NXYL*NZ*NMICRO
      LDBPN      = LDPU42N+NXYL*NZ*NMICRO
      LSEFFN     = LDBPN+NXYL*NZ*NMICRO
      LFNSWTN    = LSEFFN+NXYL*NZ*NG
      LFNPPOTN   = LFNSWTN+NXYL*NZ
      LFNPPPOTN  = LFNPPOTN+NXYL*NZ
      LFNOLDTN   = LFNPPPOTN+NXYL*NZ
      LDXEN      = LFNOLDTN+NXYL*NZ
      LDION      = LDXEN+NXYL*NZ
      LDPMN      = LDION+NXYL*NZ
      LDSMN      = LDPMN+NXYL*NZ
      LSWOLDN    = LDSMN+NXYL*NZ
      LSWN       = LSWOLDN+NXYL*NZ*NG
      LSWPPOTN   = LSWN+NXYL*NZ*NG
      LSWSN      = LSWPPOTN+NXYL*NZ*NG
      LSWOLDSN   = LSWSN+6*NXYL*NZ*NG*NHEXA
      LSWSHETN   = LSWOLDSN+NXYL*NZ*NG*6*NHEXA
      LFINALN    = LSWSHETN+NXYL*NZ*NG*6*NHEXA
      IF(PPR.EQ.'Y')THEN
       LSWCN     = LFINALN
       IF(NG.GT.2)THEN
        LCOLSWSN    = LSWCN+NXYL*NZ*NG*6*NHEXA
        LCOLSWCN    = LCOLSWSN+NXYL*NZ*2*6*NHEXA
        LCOLTPFN    = LCOLSWCN+NXYL*NZ*2*6*NHEXA
        LCOLTPFSN   = LCOLTPFN+NXYL*NZ*2*NHEXA
        LCOLTNFN    = LCOLTPFSN+NXYL*NZ*2*6*NHEXA
        LCOLTXTN    = LCOLTNFN+NXYL*NZ*2*NHEXA
        LCOLTCDN    = LCOLTXTN+NXYL*NZ*2*NHEXA
        LCOLSIGDSNN = LCOLTCDN+NXYL*NZ*2*NHEXA
        LCOLXHIPN   = LCOLSIGDSNN+NXYL*NZ*2*NHEXA
        LGGMKN      = LCOLXHIPN+NXYL*NZ*2*NHEXA
       ELSE
        LGGMKN      = LSWCN+NXYL*NZ*NG*6*NHEXA
       ENDIF
      ELSE
       LGGMKN       = LFINALN
      ENDIF
      LTAVFN     = LGGMKN+NXYL*(NZ+1)
      LHEFFN     = LTAVFN+NXYL*NZ
      LRHOWN     = LHEFFN+NXYL*NZ
      LRHOWMN    = LRHOWN+NXYL*NZ
      LRHOWNSPN  = LRHOWMN+NXYLMOD*NZMOD
      LALPHATN   = LRHOWNSPN+NXYLNSP*NZNSP
      
C     ...... DEPLETE
      
      LALPHAN   = LALPHATN+NXYL*NZ*NG
      LTPFN     = LALPHAN+NXYL*NZ*NG*NDECAY
      LTPFON    = LTPFN+NXYL*NZ*NG
      LTPFSN    = LTPFON+NXYL*NZ*NG*NHEXA
      LTEMPXSN  = LTPFSN+NXYL*NZ*NG*6*NHEXA
      LCSCATRON = LTEMPXSN+NXYL*NZ*NG*6*NHEXA
      LCSCATRIN = LCSCATRON+NXYL*NZ*NG*NMG*NTERMCSCATRO
      LRNURON   = LCSCATRIN+NXYL*NZ*NG*NMG*NTERMCSCATRI
      LRNURIN   = LRNURON+NXYL*NZ*NG*NTERMMACTRO
      LRNUN     = LRNURIN+NXYL*NZ*NG*NTERMMACTRI
      LFU4N     = LRNUN+NXYL*NZ*NG
      LFU5N     = LFU4N+NXYL*NZ*NG
      LFU6N     = LFU5N+NXYL*NZ*NG
      LFU8N     = LFU6N+NXYL*NZ*NG*NMICRO
      LFPU9N    = LFU8N+NXYL*NZ*NG*NMICRO
      LFPU0N    = LFPU9N+NXYL*NZ*NG*NMICRO
      LFPU1N    = LFPU0N+NXYL*NZ*NG*NMICRO
      LFPU2N    = LFPU1N+NXYL*NZ*NG*NMICRO
      LFAM1N    = LFPU2N+NXYL*NZ*NG*NMICRO

C-----SURFACE HEX ONLY
      LFU4SN    = LFAM1N+NXYL*NZ*NG*NMICRO
      LFU5SN    = LFU4SN+NXYL*NZ*NG*6*NHEXA
      LFU6SN    = LFU5SN+NXYL*NZ*NG*6*NHEXA
      LFU8SN    = LFU6SN+NXYL*NZ*NG*NMICRO*6*NHEXA
      LFPU9SN   = LFU8SN+NXYL*NZ*NG*NMICRO*6*NHEXA
      LFPU0SN   = LFPU9SN+NXYL*NZ*NG*NMICRO*6*NHEXA
      LFPU1SN   = LFPU0SN+NXYL*NZ*NG*NMICRO*6*NHEXA
      LFPU2SN   = LFPU1SN+NXYL*NZ*NG*NMICRO*6*NHEXA
      LFAM1SN   = LFPU2SN+NXYL*NZ*NG*NMICRO*6*NHEXA
C-----

      LFU4PYRON = LFAM1SN+NXYL*NZ*NG*NMICRO*6*NHEXA
      LFU5PYRON = LFU4PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFU6PYRON = LFU5PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFU8PYRON = LFU6PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFPU9PYRON= LFU8PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFPU0PYRON= LFPU9PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFPU1PYRON= LFPU0PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFPU2PYRON= LFPU1PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFAM1PYRON= LFPU2PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO

C-----SURFACE HEX ONLY
      LFU4PYROSN = LFAM1PYRON+NXYL*NZ*NG*NTERMMICRO*NMICRO
      LFU5PYROSN = LFU4PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFU6PYROSN = LFU5PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFU8PYROSN = LFU6PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFPU9PYROSN= LFU8PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFPU0PYROSN= LFPU9PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFPU1PYROSN= LFPU0PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFPU2PYROSN= LFPU1PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFAM1PYROSN= LFPU2PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFU4PYRISN = LFAM1PYROSN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFU5PYRISN = LFU4PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFU6PYRISN = LFU5PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFU8PYRISN = LFU6PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFPU9PYRISN= LFU8PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFPU0PYRISN= LFPU9PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFPU1PYRISN= LFPU0PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFPU2PYRISN= LFPU1PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
      LFAM1PYRISN= LFPU2PYRISN+NXYL*NZ*NG*NTERMMICRI*NMICRO*6*NHEXA
C-----

      LFU4PYRIN = LFAM1PYRISN+NXYL*NZ*NG*NTERMMICRO*NMICRO*6*NHEXA
      LFU5PYRIN = LFU4PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFU6PYRIN = LFU5PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFU8PYRIN = LFU6PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFPU9PYRIN= LFU8PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFPU0PYRIN= LFPU9PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFPU1PYRIN= LFPU0PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFPU2PYRIN= LFPU1PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LFAM1PYRIN= LFPU2PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO

      LRELPWRN     = LFAM1PYRIN+NXYL*NZ*NG*NTERMMICRI*NMICRO
      LRELPWROLDN  = LRELPWRN+NXYL*NZ
      LRELPWRSN    = LRELPWROLDN+NXYL*NZ*NBURN
      LRELPWROLDSN = LRELPWRSN+NXYL*NZ*6*NHEXA
      LGPN      = LRELPWROLDSN+NXYL*NZ*NBURN*6*NHEXA
      LGIN      = LGPN+NXYL*NZ*NG
      LGXN      = LGIN+NXYL*NZ*NG
      LBETATN   = LGXN+NXYL*NZ*NG
      LBETAN    = LBETATN+NXYL*NZ
      LBFACTN   = LBETAN+NXYL*NZ*NPREC
      LALAMDATN = LBFACTN+NXYL*NZ*NPREC
      LXHIPN    = LALAMDATN+NXYL*NZ*NPREC
      LCARON    = LXHIPN+NXYL*NZ*NG
      LCARIN    = LCARON+NXYL*NZ*NG*NTERMMACTRO
      LRNFRON   = LCARIN+NXYL*NZ*NG*NTERMMACTRI
      LRNFRIN   = LRNFRON+NXYL*NZ*NG*NTERMMACTRO
      LPFRON    = LRNFRIN+NXYL*NZ*NG*NTERMMACTRI
      LPFRIN    = LPFRON+NXYL*NZ*NG*NTERMMACTRO
      LTRRON    = LPFRIN+NXYL*NZ*NG*NTERMMACTRI
      LTRRIN    = LTRRON+NXYL*NZ*NG*NTERMMACTRO
      LCRRON    = LTRRIN+NXYL*NZ*NG*NTERMMACTRI
      LCRRIN    = LCRRON+NXYL*NZ*NG*NTERMCSCATRO

C-----SURFACE HEX ONLY
      LCAROSN   = LCRRIN+NXYL*NZ*NG*NTERMCSCATRI
      LCARISN   = LCAROSN+NXYL*NZ*NG*NTERMMACTRO*6*NHEXA
      LRNFROSN  = LCARISN+NXYL*NZ*NG*NTERMMACTRI*6*NHEXA
      LRNFRISN  = LRNFROSN+NXYL*NZ*NG*NTERMMACTRO*6*NHEXA
      LPFROSN   = LRNFRISN+NXYL*NZ*NG*NTERMMACTRI*6*NHEXA
      LPFRISN   = LPFROSN+NXYL*NZ*NG*NTERMMACTRO*6*NHEXA
      LCRROSN   = LPFRISN+NXYL*NZ*NG*NTERMMACTRI*6*NHEXA
      LCRRISN   = LCRROSN+NXYL*NZ*NG*NTERMCSCATRO*6*NHEXA
C-----

      LB2N      = LCRRISN+NXYL*NZ*NG*NTERMCSCATRI*6*NHEXA
      LU4APYRON = LB2N+NXYL*NZ*NG
      LU5APYRON = LU4APYRON+NG*NTERMMICRO*NMICRO
      LU6APYRON = LU5APYRON+NG*NTERMMICRO*NMICRO
      LU8APYRON = LU6APYRON+NG*NTERMMICRO*NMICRO
      LP9APYRON = LU8APYRON+NG*NTERMMICRO*NMICRO
      LP0APYRON = LP9APYRON+NG*NTERMMICRO*NMICRO
      LP1APYRON = LP0APYRON+NG*NTERMMICRO*NMICRO
      LP2APYRON = LP1APYRON+NG*NTERMMICRO*NMICRO
      LBPAPYRON = LP2APYRON+NG*NTERMMICRO*NMICRO
      LA1APYRON = LBPAPYRON+NG*NTERMMICRO*NMICRO

      LU4APYRIN = LA1APYRON+NG*NTERMMICRO*NMICRO
      LU5APYRIN = LU4APYRIN+NG*NTERMMICRI*NMICRO
      LU6APYRIN = LU5APYRIN+NG*NTERMMICRI*NMICRO
      LU8APYRIN = LU6APYRIN+NG*NTERMMICRI*NMICRO
      LP9APYRIN = LU8APYRIN+NG*NTERMMICRI*NMICRO
      LP0APYRIN = LP9APYRIN+NG*NTERMMICRI*NMICRO
      LP1APYRIN = LP0APYRIN+NG*NTERMMICRI*NMICRO
      LP2APYRIN = LP1APYRIN+NG*NTERMMICRI*NMICRO
      LBPAPYRIN = LP2APYRIN+NG*NTERMMICRI*NMICRO
      LA1APYRIN = LBPAPYRIN+NG*NTERMMICRI*NMICRO

      LU4AN     = LA1APYRIN+NG*NTERMMICRI*NMICRO
      LU5AN     = LU4AN+NG*NMICRO
      LU6AN     = LU5AN+NG*NMICRO
      LU8AN     = LU6AN+NG*NMICRO
      LP9AN     = LU8AN+NG*NMICRO
      LP0AN     = LP9AN+NG*NMICRO
      LP1AN     = LP0AN+NG*NMICRO
      LP2AN     = LP1AN+NG*NMICRO
      LA1AN     = LP2AN+NG*NMICRO
      LBPAN     = LA1AN+NG*NMICRO
      LFLN      = LBPAN+NG*NMICRO
      LDU34OLDN = LFLN+NG
      LDU35OLDN = LDU34OLDN+NXYL*NZ*NMICRO
      LDU36OLDN = LDU35OLDN+NXYL*NZ*NMICRO
      LDU38OLDN = LDU36OLDN+NXYL*NZ*NMICRO
      LDPU39OLDN= LDU38OLDN+NXYL*NZ*NMICRO
      LDPU40OLDN= LDPU39OLDN+NXYL*NZ*NMICRO
      LDPU41OLDN= LDPU40OLDN+NXYL*NZ*NMICRO
      LDPU42OLDN= LDPU41OLDN+NXYL*NZ*NMICRO
      LDLFP1OLDN= LDPU42OLDN+NXYL*NZ*NMICRO
      LDLFP2OLDN= LDLFP1OLDN+NXYL*NZ*NMICRO
      LDBPOLDN  = LDLFP2OLDN+NXYL*NZ*NMICRO
      LDAM41OLDN= LDBPOLDN+NXYL*NZ*NMICRO

C-----SURFACE HEX ONLY
      LDU34OLDSN = LDAM41OLDN+NXYL*NZ*NMICRO
      LDU35OLDSN = LDU34OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDU36OLDSN = LDU35OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDU38OLDSN = LDU36OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDPU39OLDSN= LDU38OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDPU40OLDSN= LDPU39OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDPU41OLDSN= LDPU40OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDPU42OLDSN= LDPU41OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDBPOLDSN  = LDPU42OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LDAM41OLDSN= LDBPOLDSN+NXYL*NZ*NMICRO*6*NHEXA
C-----

      LADFSVN    = LDAM41OLDSN+NXYL*NZ*NMICRO*6*NHEXA
      LADFSVRDN  = LADFSVN+NXYL*NZ*NG*8

      IDUM=0
      IF(PPR.EQ.'Y')IDUM=1
      LCPADFVN   = LADFSVRDN+NXYL*NZ*NG*8
      LCPADFVRDN = LCPADFVN+NXYL*NZ*NG*6*NHEXA*IDUM
      LFFVN      = LCPADFVRDN+NXYL*NZ*NG*6*NHEXA*IDUM
      LFFVRDN    = LFFVN+NXYL*NZ*NPIN*NHEXA*IDUM

      LXXEABRON  = LFFVRDN+NXYL*NZ*NPIN*NHEXA*IDUM
      LXXEABRIN  = LXXEABRON+NXYL*NZ*NG*NTERMFPRO
      LXSMABRON  = LXXEABRIN+NXYL*NZ*NG*NTERMFPRI
      LXSMABRIN  = LXSMABRON+NXYL*NZ*NG*NTERMFPRO
      LXXEABN    = LXSMABRIN+NXYL*NZ*NG*NTERMFPRI
      LXSMABN    = LXXEABN+NXYL*NZ*NG
      LVELOCN    = LXSMABN+NXYL*NZ*NG
      LBUN       = LVELOCN+NXYL*NZ*NG
      LSIGN      = LBUN+NBUMAX
      
C     ..... STEADYN/SLOWTRAN
      
      LRIVELON = LSIGN+NBUMAX
      LTCDN    = LRIVELON+NXYL*NZ*NG
      LTCAN    = LTCDN+NXYL*NZ*NG
      LTCRN    = LTCAN+NXYL*NZ*NG
      LTNFN    = LTCRN+NXYL*NZ*NG
      LTNFON   = LTNFN+NXYL*NZ*NG
      LTNFSN   = LTNFON+NXYL*NZ*NG*NHEXA
      LSIGDSNN = LTNFSN+6*NXYL*NZ*NG*NHEXA
C     ........ RELPOWER
      
      LPWRDNN  = LSIGDSNN+NXYL*NZ*NG*NMG
      
C     ............ THFDBKS
      
      LTCOLCN   = LPWRDNN+NXYL*NZ
      LTMODCN   = LTCOLCN+NXYL*NZ
      LUNEWN    = LTMODCN+NXYLMOD*NZMOD
      LUOLDN    = LUNEWN+NXYL*NZ
C     ............ XSFDBK
      
      LDCLN      = LUOLDN+NXYL*NZ
      LDCWN      = LDCLN+NXYL*(NZ+1)*NG
      LDCNVN     = LDCWN+NXYT*NZ*NG
      LDCNUN     = LDCNVN+NXYT*NZ*NG*NHEXA
      LDCNN      = LDCNUN+NXYT*NZ*NG*NHEXA
      LAWXN      = LDCNN+NXYT*NZ*NG*NCART
      LAWUN      = LAWXN+NXYL*NZ*NG
      LAWVN      = LAWUN+NXYL*NZ*NG*NHEXA
      LAWZN      = LAWVN+NXYL*NZ*NG*NHEXA
      LAWYN      = LAWZN+NXYL*NZ*NG
      LBWYN      = LAWYN+NXYL*NZ*NG*NCART
      LBWXN      = LBWYN+NXYL*NZ*NG*NCART
      LBWUN      = LBWXN+NXYL*NZ*NG
      LBWVN      = LBWUN+NXYL*NZ*NG*NHEXA
      LBWZN      = LBWVN+NXYL*NZ*NG*NHEXA
      LAQN       = LBWZN+NXYL*NZ*NG
      LFNSHIFTN  = LAQN+NXYL*NZ*NG
      LTXTN      = LFNSHIFTN+NXYL*NZ*NG
      LTXTON     = LTXTN+NXYL*NZ*NG
      LTXTSN     = LTXTON+NXYL*NZ*NG*NHEXA
      LBETATLAMN = LTXTSN+6*NXYL*NZ*NG*NHEXA
      
      LSVN       = LBETATLAMN+NXYL*NZ*NG
      
      LFINALN    = LSVN+NXYL*NZ*NG
      
      GOTO 100

      
 7    CONTINUE

C     ......  TRIDIA0.F
      
      NXYCOL=MAX(IRPCNT,IBPCNT,IYPCNT)
      
      ICSTART   = LFINALN
      LRBWXVN   = LFINALN
      LBBWXVN   = LRBWXVN+(NXYCOL)*NZ*NG
      LRBFVN    = LBBWXVN+(NXYCOL)*NZ*NG
      LBBFVN    = LRBFVN+(NXYCOL)*NZ*NG
      LRQWVN    = LBBFVN+(NXYCOL)*NZ*NG
      LBQWVN    = LRQWVN+(NXYCOL)*NZ*NG
      LYBWXVN   = LBQWVN+(NXYCOL)*NZ*NG
      LYBFVN    = LYBWXVN+(NXYCOL)*NZ*NG*NHEXA
      LYQWVN    = LYBFVN+(NXYCOL)*NZ*NG*NHEXA
      LBFN      = LYQWVN+(NXYCOL)*NZ*NG*NHEXA
      LQWN      = LBFN+NXYL*NZ*NG
      
C     ....... LSORB0
      
      LSSWN     = LQWN+NXYL*NZ*NG
      LITRRN    = LSSWN+NXYL*NZ*NG
      LWOMN     = LITRRN+NG
      LWOMON    = LWOMN+NG
      LWOMOLDN  = LWOMON+NG
      LFLUXN    = LWOMOLDN+NG
      LCWN      = LFLUXN+NXYL*NZ*NG
      LXCWVN    = LCWN+NXYL*NZ*NG
      LXSWSVN   = LXCWVN+(NXYCOL)*NZ*NG
      LRMWVN    = LXSWSVN+(NXYCOL)*NZ*NG
      
C     ..... OUTIN
      
      LFILAMDT0N  = LRMWVN+(NXYCOL)*NZ*NG
      LFILAMDT1N  = LFILAMDT0N+NXYL*NZ*NG
      LEXPLAMDTN  = LFILAMDT1N+NXYL*NZ*NG
      LSCATN      = LEXPLAMDTN+NXYL*NZ*NG
      LSCWN       = LSCATN+NXYL*NZ*NG
      
C     ..........NONNEM
      
      LCURNXN     = LSCWN+NXYL*NZ*NG
      LCURNYN     = LCURNXN+NXYT*NZ*NG
      LCURNVN     = LCURNYN+NXYT*NZ*NG*NCART
      LCURNUN     = LCURNVN+NXYT*NZ*NG*NHEXA
      LCURNZN     = LCURNUN+NXYT*NZ*NG*NHEXA
      LTLXN       = LCURNZN+NXYL*(NZ+1)*NG
      LTLYN       = LTLXN+NXYL*NZ*NG
      LTLVN       = LTLYN+NXYL*NZ*NG*NCART
      LTLUN       = LTLVN+NXYL*NZ*NG*NHEXA
      LTLZN       = LTLUN+NXYL*NZ*NG*NHEXA
      LPLMX1N     = LTLZN+NXYL*NZ*NG
      LPLMX2N     = LPLMX1N+NXYL*NZ*NG*NCART
      LPLMY1N     = LPLMX2N+NXYL*NZ*NG*NCART
      LPLMY2N     = LPLMY1N+NXYL*NZ*NG*NCART
      LPLMZ1N     = LPLMY2N+NXYL*NZ*NG*NCART
      LPLMZ2N     = LPLMZ1N+NXYL*NZ*NG*NCART
      LPLMZX1N    = LPLMZ2N+NXYL*NZ*NG*NCART
      LPLMZX2N    = LPLMZX1N+NXYL*NZ*NG*NHEXA
      LPLMZV1N    = LPLMZX2N+NXYL*NZ*NG*NHEXA
      LPLMZV2N    = LPLMZV1N+NXYL*NZ*NG*NHEXA
      LPLMZU1N    = LPLMZV2N+NXYL*NZ*NG*NHEXA
      LPLMZU2N    = LPLMZU1N+NXYL*NZ*NG*NHEXA
      LPLMXY1N    = LPLMZU2N+NXYL*NZ*NG*NHEXA
      LPLMXY2N    = LPLMXY1N+NXYL*NZ*NG*NHEXA
      LRLN        = LPLMXY2N+NXYL*NZ*NG*NHEXA
      LRLPN       = LRLN+NG
      LRM1N       = LRLPN+NG
      LRMP1N      = LRM1N+NG
      LRM2N       = LRMP1N+NG
      LRMP2N      = LRM2N+NG
      LDFN        = LRMP2N+NG
      LDFPN       = LDFN+NG
      LJNEMN      = LDFPN+NG
      LLZN        = LJNEMN+NG
      LLZ1N       = LLZN+NG*NHEXA
      LLPZN       = LLZ1N+NG*NHEXA
      LLPZ1N      = LLPZN+NG*NHEXA
      
C     NONTWO
      
      LSXTN      = LLPZ1N+NG*NHEXA
      LSXTPN     = LSXTN+NG
      LAMAT1N    = LSXTPN+NG
      LXOUT1N    = LAMAT1N+14*NG-16
      LBRHS1N    = LXOUT1N+2*NG
      LAMAT2N    = LBRHS1N+2*NG
      LXOUT2N    = LAMAT2N+14*NG-16
      LBRHS2N    = LXOUT2N+2*NG
      LAMAT3N    = LBRHS2N+2*NG
      LXOUT3N    = LAMAT3N+32*NG-32
      LBRHS3N    = LXOUT3N+4*NG
      LEXCN      = LBRHS3N+4*NG
      LEXCPN     = LEXCN+(4+NHEXA)*NG
      LSRCMOMN   = LEXCPN+(4+NHEXA)*NG
      LAKN       = LSRCMOMN+NHEXA*3*NXYL*NZ*NG*3
      LCSH0N     = LAKN+NXYL*NZ*NG*NHEXA
      LSNH1N     = LCSH0N+NXYL*NZ*NG*NHEXA
      LCSH2N     = LSNH1N+NXYL*NZ*NG*NHEXA
      LA1N       = LCSH2N+NXYL*NZ*NG*NHEXA
      LA2N       = LA1N+NG
      LA3N       = LA2N+NG
      LA4N       = LA3N+NG
      LALN       = LA4N+NG
      LALPN      = LALN+NG
      LTFN       = LALPN+NG
      LTFPN      = LTFN+NG
      LSSCATN    = LTFPN+NG
      LSSCATPN   = LSSCATN+NG
      LTDN       = LSSCATPN+NG
      LFL2N      = LTDN+NG
      LTDPN      = LFL2N+NG
      LFLPN      = LTDPN+NG
      LPL1N      = LFLPN+NG
      LPL2N      = LPL1N+NG
      
C     ..... NONPLM
      
      LSEFVEN    = LPL2N+NG
      LPCN       = LSEFVEN+NXYL*NZ*NG
      LTLN       = LPCN+NG*3
      LTLPN      = LTLN+NG
      LTLMN      = LTLPN+NG
      
C     .... MFST
      
      IF(IISC.EQ.1.OR.IISCTR.EQ.1) THEN
       
       LCCWN   = LTLMN+NG
       LB2SPECN= LCCWN+NXYL*NZ*NG
       
       IF(ISPSHTR.EQ.1.OR.ISPSH.EQ.1) THEN
        LFINALN = LB2SPECN+NXYL*NZ*NG
       ELSE
        LFINALN = LB2SPECN
       ENDIF
       
      ELSE
       
       LCCWN = LTLMN+NG
       LB2SPECN = LCCWN
       
       LFINALN  = LB2SPECN
       
      ENDIF
      
C     .... ERRORN
      
      LPWRDNOLDN = LFINALN
      
C     ....... OUTPCRT/OUTPUTSS/OUPUTA
      
      IF(IADJ.EQ.'Y') THEN
       NADJ = 1
      ELSE
       NADJ = 0
      ENDIF
      
      LZBTRN    = LPWRDNOLDN+NXYL*NZ*NTRAN
      LAXIALTOPN= LZBTRN+NBMAX
      LAXIALBOTN= LAXIALTOPN+NZ
      LZN       = LAXIALBOTN+NZ
      LFPRINTN  = LZN+NZ
      LFLUX2DN  = LFPRINTN+NXYL*NZ
      LFLUX1DN  = LFLUX2DN+NXYL*NG*NADJ
      
C     ........PERTURB
      
      LGGMKINN   = LFLUX1DN+NZ*NG*NADJ
      LTTCOLINN  = LGGMKINN+NXYL*NTRAN
      LTTCOLINOLDN=LTTCOLINN+NXYL*NTRAN
      
C     .......STARTER
      
      LALXPLAMDN  = LTTCOLINOLDN+NXYL*NTRAN
      LCIN        = LALXPLAMDN+NXYL*NZ*NG*NPREC*NTRAN
      LHEFFOLDN   = LCIN+NXYL*NZ*NPREC*NTRAN
      LTCOLCOLDN  = LHEFFOLDN+NXYL*NZ*NTRAN
      LTAVFOLDN   = LTCOLCOLDN+NXYL*NZ*NTRAN
      LRHOWOLDN   = LTAVFOLDN+NXYL*NZ*NTRAN
      LHEATFLUXN  = LRHOWOLDN+NXYL*NZ*NTRAN
      LEXPLAMDN   = LHEATFLUXN+NXYL*NZ*NTRAN
      
      IF(MOD(LEXPLAMDN,2).EQ.0) LEXPLAMDN = LEXPLAMDN+1
      
      LFACT0N     = LEXPLAMDN+2*NPREC*NTRAN
      LFACT1N     = LFACT0N+NPREC*NTRAN
      
C     .......DECAYH
      
      LDFACTN  = LFACT1N + NPREC*NTRAN
      
      IF(MOD(LDFACTN,2).EQ.0) LDFACTN = LDFACTN+1
      
      LFINALN  = LDFACTN+2*NDECAY*NTRAN
c     DRWM
      LAKINFN   = LFINALN
      LFINALN   = LAKINFN+NXYL*NZ

C     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      
      WRITE(6,*) 'FINAL A-ARRAY LENGTH = ',LFINALN,
     &  '   SPACE ALLOCATED = ',MAXMEM
      WRITE(6,*)
      
 100  CONTINUE
      
      IF(LFINALN.GT.MAXMEM) THEN
       WRITE(6,*) 'VARIABLES LOADED EXCEEDED THE ASSIGNED A ARRAY'
       WRITE(6,*) 'CURRENT A-ARRAY LENGTH = ',LFINALN,
     &   '   SPACE ALLOCATED = ',MAXMEM
       WRITE(6,*) 'CURRENT ENTRY INDEX INTO POINTER = ',LOGIC
       WRITE(6,*)
       STOP 'POINTER'
      ENDIF
      
      IF(LFINALCN.GT.3000) THEN
       WRITE(6,*) 'VARIABLES LOADED EXCEEDED THE ASSIGNED AC ARRAY'
       WRITE(6,*) 'CURRENT AC-ARRAY LENGTH = ',LFINALCN,
     &   '   SPACE ALLOCATED = ',6000
       WRITE(6,*) 'CURRENT ENTRY INDEX INTO POINTER = ',LOGIC
       WRITE(6,*)
       STOP 'POINTER'
      ENDIF

      DO 205 IA=ICSTART,LFINALN
       A(IA) = 0.0
 205  CONTINUE

      RETURN
      END
