C23456789012345678901234567890123456789012345678901234567890123456789012
C                                                                      C
                     SUBROUTINE FILE_PRF( IOERROR )
C                                                                      C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C
C  THIS SUBROUTINE READS THE PARAMETERS USED TO CONTROL THE SOLUTION
C  METHODS EMPLOYED AND PROVIDES THE CONVERGENCE CRITERIA
C
C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      include 'param.fcb'
      include 'opti.fcb'
      include 'soln2.fcb'
      include 'nemcnt.fcb'
      include 'che.fcb'
      include 'cntl.fcb'
      include 'extsor.fcb'
      include 'spectral.fcb'
      include 'only.fcb'
      include 'dataf.fcb'
      include 'depletepc.fcb'
      include 'adj.fcb'
      include 'pinpow.fcb'
 
      CHARACTER*8 AMETHOD, AOUTER, AISC, ASPSH, AISCTR, ASPSHTR
C
C---- OPEN COMPUTATIONAL TECHNIQUES INPUT FILE (UNIT=15) :
C
       OPEN(UNIT=15,FILE=PERFM,STATUS='OLD')
 
C
C---- READ MAX # OF ITERATIONS ON THERMAL GROUPS :
C---- READ # OF OUTER ITERATION LIMIT :
C
C---- READ OUTER ITERATION EIGENVALUE CONVERGENCE CRITERIA :
C---- READ OUTER ITERATION L_2 CONVERGENCE CRITERIA :
C---- READ OUTER ITERATION RESIDUAL CONVERGENCE CRITERIA :
C---- READ OUTER ITERATION L_INF CONVERGENCE CRITERIA :
C---- READ INNER FLUX CONVERGENCE CRITERIA :
C
      READ(15,*) N_THRMITR
      READ(15,*) KITR
      READ(15,*) EPSK
      READ(15,*) EPSOT
      READ(15,*) EPSRESID
      READ(15,*) EPSINF
      READ(15,*) EPSDET
C
C----- INPUT WHETHER CONVERGENCE DEMANDED AFTER COEFFICIENT MATRIX UPDATE
C
C.... ACONV = 'Y' ... DEMANDED
C...  ACONV = 'N' ... NOT DEMANDED
C
      READ(15,10) ACONV 
 10   FORMAT(A5)
      CALL INPUTCK('ACONV',ACONV,'Y','N',' ',IOERROR)
C
C----- INPUT METHOD OF SOLUTION
C
C.... AMETHOD = 'FDM' ... FINITE DIFFERENCE METHOD [ FDM ]
C.... AMETHOD = 'NEM' ... NON-LINEAR NODAL EXPANSION METHOD [ NEM ]
C
      READ(15,10) AMETHOD
      CALL INPUTCK('AMETHOD',AMETHOD,'NEM','FDM',' ',IOERROR)
 
      IF(AMETHOD.EQ.'FDM') THEN
        IMETHOD=1
        IF(PPR.EQ.'Y')THEN
         WRITE(6,*)'************** Warning ***************'
         WRITE(6,*)'Pin power reconstruction is set to 0  '
         WRITE(6,*)'(No pin reconstruction) since FDM     '
         WRITE(6,*)'is chosen. Set method to NEM to enable'
         WRITE(6,*)'pin power reconstruction.             '
         WRITE(6,*)'**************************************'
         WRITE(55,*)'************** Warning ***************'
         WRITE(55,*)'Pin power reconstruction is set to 0  '
         WRITE(55,*)'(No pin reconstruction) since FDM     '
         WRITE(55,*)'is chosen. Set method to NEM to enable'
         WRITE(55,*)'pin power reconstruction.             '
         WRITE(55,*)'**************************************'
         PPR='N'
        ENDIF
      ELSE
        IMETHOD=2
        NUMNEMITER=0 !vmq
      ENDIF
C
C.... FOR THE NEM METHOD : INPUT FREQUENCY OF NEM UPDATE
C     STANDARD VALUES :-
C      IF TH = OFF ... NNEM = # OF OUTER ITERATIONS [ NNEM=10 ]
C      IF TH = ON  ... NNEM = # OF TH UPDATES [ NNEM=5 ]
C     INPUT 
C
      IF (IMETHOD.EQ.2) THEN
        READ (15,*) NNEM
        READ (15,*) EPSNEM
      ENDIF
C
C.... FOR DEPLETION ON : INPUT METHOD TO BE USED
C     STANDARD VALUES :-
C      IF ADEPL = 'PRED' USE PREDICTOR METHOD
C      IF ADEPL = 'CORR' USE PREDICTOR-CORRECTOR METHOD
C
      IF (IBURN.EQ.'Y') THEN
        READ (15,20) ADEPL
 20     FORMAT(A4)
        CALL INPUTCK('ADEPL',ADEPL,'PRED','CORR',' ',IOERROR)
C        
C.... FOR DEPLETION ON : INPUT FREQUENCY OF PREDICTOR STEP
C     STANDARD VALUES :-
C      IF TH = OFF ... NDELPC = # OF OUTER ITERATIONS
C      IF TH = ON  ... NDELPC = # OF TH UPDATES
C
        IF(ADEPL.EQ.'CORR') THEN
          READ (15,*) NDELPC
        ELSE
          NDELPC=10000000
        ENDIF
      ENDIF
C
C
C==== START THE STEADY-STATE I/O PARAMETERS
C             ===============
C 
C-----  INPUT CHEBYCHEV ACCELERATION OPTION
C
C.... AOUTER = 'CHEB'....CHEBYSHEV ACCELERATION
C.... AOUTER = 'WEIL'....WEILANDT SHIFT ACCELERATION
      READ (15,10) AOUTER
      CALL INPUTCK('AOUTER',AOUTER,'CHEB','WEIL',' ',IOERROR)
 
      IF(AOUTER.EQ.'CHEB') THEN
        IOUTER=1
      ELSEIF(AOUTER.EQ.'WEIL') THEN
        IOUTER=2  
      ENDIF

C
C-----  INPUT FREQUENCY OF T-H UPDATE IN TERMS OF OUTER ITERATIONS
C-----  ALSO SETS UPPER WEILANDT ORDER WHEN USED
C-----  ALSO INPUT THE RELATIVE L_2 RESIDUAL REDUCTION TO DETERMINE
C-----  WHEN EITHER A NEW CHEBY OR WEILANDT SHIFT CYCLE IS TO BEGIN
C
      READ(15,*)IUPOUTER,EPREDRESID
      IF(ANFDBK.EQ.'N') THEN
        IF(NNEM.LT.IUPOUTER.AND.IMETHOD.EQ.2) THEN
          NNEM=IUPOUTER
          WRITE(*,105)
          WRITE(55,105)
105       FORMAT(/'##########INPUT INCONSISTENCY WITH CODE LOGIC: '/
     &         'FREQUENCY OF NEM UPDATES MUST NOT BE LESS THAN '/
     &         'UPPER LIMIT ON CHEBYCHEV POLYNOMIAL ORDER'/
     &         'OR THE WEILANDT SHIFT CYCLE LENGTH.'/
     &         'NEM UPDATE FREQUENCY RESET TO UPPER POLYNOMIAL '/
     &         'ORDER OR SHIFT CYCLE LENGTH.'/
     &         'EXECUTION CONTINUES##########'/)
        ENDIF
        IF(NDELPC.LT.IUPOUTER.AND.ADEPL.EQ.'CORR') THEN
          NDELPC=IUPOUTER
          WRITE(*,106)
          WRITE(55,106)
106       FORMAT(/'##########INPUT INCONSISTENCY WITH CODE LOGIC: '/
     &         'FREQUENCY OF DEPLETION-CORRECTOR UPDATES MUST NOT BE '/
     &         'LESS THAN UPPER LIMIT ON CHEBYCHEV POLYNOMIAL ORDER'/
     &         'OR THE WEILANDT SHIFT CYCLE LENGTH.'/
     &         'DEPLETION-CORRECTOR UPDATE FREQUENCY RESET TO UPPER '/
     &         'POLYNOMIAL ORDER OR SHIFT CYCLE LENGTH.'/
     &         'EXECUTION CONTINUES##########'/)
        ENDIF
      ENDIF
C
C-----  INPUT WEILANDT SHIFT TO APPLY FOR STEADY-STATE & TRANSIENT/ADJOINT
C       PROBLEMS
C
      
      IF(IOUTER.EQ.2) THEN
        IF(IADJ.EQ.'Y'.OR.ITRAN.EQ.'Y') THEN
          READ(15,*) WEILANDTEI,WEILANDTFS
        ELSE
          READ(15,*) WEILANDTEI
        ENDIF  
C
C-----  INPUT STATIONARY EXTRAPOLATION PARAMETER FOR FLUX IF WEILANDT OR NO
C       CHEBYSHEV ACCELERATION
C
        READ(15,*) OMEGAEXT
      ENDIF     
C
C-----  INPUT STEADY-STATE SCALING FACTOR TECHNIQUE OPTION
C
C.... AISC = 'N'...NO SCALING FACTOR ACCELERATION
C.... AISC = 'Y'...SCALING FACTOR ACCELERATION
C
      READ (15,10)AISC
      CALL INPUTCK('AISC',AISC,'Y','N',' ',IOERROR)
 
      IF(AISC.EQ.'N') THEN
        IISC = 0
      ELSE
        IISC = 1
      ENDIF
 
      ISC = 100000
      ISPSH = 0
 
      IF (IISC.EQ.1)THEN
C
C...... OUTER ITERATION AT WHICH SCALING FACTOR STARTS
C
        READ (15,*)ISC
C
C
C------ STEADY-STATE SPECTRAL SHIFT CORRECTION OPTION
C
C...ASPSH = 'N'  : NO SPECTRAL SHIFT CORRECTION
C...ASPSH = 'Y'  : SPECTRAL SHIFT CORRECTION
C
        READ (15,10)ASPSH
        CALL INPUTCK('ASPSH',ASPSH,'Y','N',' ',IOERROR)
        ISPSH = 1
        IF(ASPSH.EQ.'N') ISPSH=0
 
      ENDIF
 
      IF(ITRAN .EQ. 'Y' )THEN
C
C==== START THE TRANSIENT I/O PARAMETERS
C             ============
 
C
C---- NUMBER OF OUTER ITERATIONS PER TIME STEP ADVANCE OPTION
C
C....... IONE = 1 : CONVERGENCE CRITERIA DEPENDENT
C....... IONE = 2 : FIXED NUMBER OF OUTER ITERATIONS PER TIME STEP
 
        READ (15,*) IONE
        IF(IONE.NE.1.AND.IONE.NE.2)THEN
          WRITE(6,*)
     &    '###ERROR, INPUT THE RIGHT VALUE FOR # OF OUTERS/TIME STEP'
          IOERROR = 1
        ENDIF
C
C----- INPUT NUMBER OF OUTERS PER TIME STEP
C
        IF(IONE.EQ.2)THEN
          READ (15,*)IOK
        ENDIF
C
C-----  INPUT WHETHER IMPLICIT OR EXPLICIT T=H FEEDBACK TO BE USED
C-----  ANFDBKIMP = 'Y'...IMPLICIT T-H FEEDBACK
C-----  ANFDBKIMP = 'N'...EXPLICIT T-H FEEDBACK
C
        READ (15,10) ANFDBKIMP
        CALL INPUTCK('ANFDBKIMP',ANFDBKIMP,'Y','N',' ',IOERROR)
C
C-----  INPUT TRANSIENT SCALING FACTOR TECHNIQUE OPTION
C
C.... AISCTR = 'N'...NO SCALING FACTOR ACCELERATION
C.... AISCTR = 'Y'...SCALING FACTOR ACCELERATION
C
        READ (15,10) AISCTR
        CALL INPUTCK('AISCTR',AISCTR,'Y','N',' ',IOERROR)
 
        IF(AISCTR.EQ.'N') THEN
          IISCTR = 0
        ELSE
          IISCTR = 1
        ENDIF
 
        IF(IISCTR.EQ.0)THEN
          ISCTR=10000
        ENDIF
C
C...... OUTER ITERATION (WITHIN TIME STEP) AT WHICH SCALING FACTOR START
C
        IF (AISCTR .EQ. 'Y')THEN
          READ (15,*) ISCTR
          ISCTR = ISCTR - 1
C
C------ TRANSIENT SPECTRAL SHIFT CORRECTION OPTION
C
C...ASPSHTR = 'N'  : NO SPECTRAL SHIFT CORRECTION
C...ASPSHTR = 'Y'  : SPECTRAL SHIFT CORRECTION
C
          READ (15,10) ASPSHTR
 
          IF(ASPSHTR.EQ.'N') THEN
            ISPSHTR=0
          ELSE
            ISPSHTR = 1
          ENDIF
 
        ENDIF
 
      ENDIF
      CLOSE(UNIT=15) 

      RETURN
      END
