C1234567890123456789012345678901234567890123456789012345678901234567890
C
                        SUBROUTINE NONPLMC(
     &  DX,DY,DZ,VOLU,FNSWT,FNOLDT,
     &  BETATLAM,FILAMDT0,FILAMDT1,CURNX,CURNY,CURNZ,TLX,TLY,
     &  TLZ,PLMX1,PLMX2,PLMY1,PLMY2,PLMZ1,PLMZ2,SWOLD,RIVELO,
     &  SEFVE,EXPLAMDT,SW,NBC,NXSTART,NXEND,NDNUM,NYSTART,NYEND,
     &  TL,TLP,TLM )
C
C1234567890123456789012345678901234567890123456789012345678901234567890
C
C
C     THIS SUBROUTINE CALCULATES THE LEAKAGES FOR EVERY
C     NODE, IN EVERY DIRECTION, AND THE EXPANSION COEFFICIENTS
C     FOR THE QUADRATIC LEAKAGE APPROXIMATION.
C      ********** FOR CARTESIAN GEOMETRY **************
C
C
C1234567890123456789012345678901234567890123456789012345678901234567890
C
      include 'param.fcb'
      include 'geom.fcb'
      include 'veloc.fcb'
      include 'xsec1.fcb'
      include 'bcs.fcb'
      include 'cntl.fcb'
      include 'che.fcb'
 
      DIMENSION TL(NG),   TLP(NG),   TLM(NG)
 
       DIMENSION
     &    NBC(*)               ,
     &    NXSTART(*)                            ,NXEND(*)             ,
     &    NDNUM(-1:NX+2,0:*)                    ,NYSTART(*)           ,
     &    NYEND(*)                              ,RIVELO(NXYL,NZ,*)    ,
     &    SEFVE(NXYL,NZ,*)                      ,
     &    SWOLD(NXYL,NZ,*)                      ,SW(NXYL,NZ,*)        ,
     &    DX(0:*)                               ,DY(0:*)              ,
     &    DZ(0:*)                               ,VOLU(NXYL,*)         ,
     &    FNSWT(NXYL,*)                         ,FNOLDT(NXYL,*)       ,
     &    FILAMDT0(NXYL,NZ,*)                   ,FILAMDT1(NXYL,NZ,*)  ,
     &    EXPLAMDT(NXYL,NZ,*)                   ,
     &    CURNX(NXYT,NZ,*)                      ,CURNY(NXYT,NZ,*),
     &    CURNZ(NXYL,NZ+1,*)                    ,TLX(NXYL,NZ,*)       ,
     &    TLY(NXYL,NZ,*)                        ,TLZ(NXYL,NZ,*)       ,
     &    PLMX1(NXYL,NZ,*)                      ,PLMX2(NXYL,NZ,*)     ,
     &    PLMY1(NXYL,NZ,*)                      ,PLMY2(NXYL,NZ,*)     ,
     &    PLMZ1(NXYL,NZ,*)                      ,PLMZ2(NXYL,NZ,*)     ,
     &    BETATLAM(NXYL,NZ,*)
 
      DO 16 IG = 1,NG
        DO 14 IZ = 1,NZ
          DO 12 IY = 1,NY
            DO 10 IX = NXSTART(IY),NXEND(IY)
              IXY=NDNUM(IX,IY)
              IXYE=NDNUM(IX+1,IY)
              IXYS=NDNUM(IX,IY+1)
              SEFVE(IXY,IZ,IG)=0.0
              IF(ITRANSIT.EQ.0) GOTO 2
                SEFVE(IXY,IZ,IG) = (  FILAMDT0(IXY,IZ,IG)*FNOLDT(IXY,IZ)
     &           / FLAMDA
     &           +  EXPLAMDT (IXY,IZ,IG)
     &           + (FILAMDT1(IXY,IZ,IG)-BETATLAM(IXY,IZ,IG) )
     &           * FNSWT(IXY,IZ)/FLAMDA
     &                                  ) / VOLU(IXY,IZ)
     &           + RIVELO(IXY,IZ,IG)*(SWOLD(IXY,IZ,IG) - SW(IXY,IZ,IG))
 
 2            CONTINUE
 
          TLX(IXY,IZ,IG)=(CURNX(IXYE,IZ,IG)-CURNX(IXY,IZ,IG))/DX(IX)
          TLY(IXY,IZ,IG)=(CURNY(IXYS,IZ,IG)-CURNY(IXY,IZ,IG))/DY(IY)
          TLZ(IXY,IZ,IG)=(CURNZ(IXY,IZ+1,IG)-CURNZ(IXY,IZ,IG))/DZ(IZ)
 10         CONTINUE
 12       CONTINUE
 14     CONTINUE
 16   CONTINUE
 
 
      DO 20 IX = 1,NX
        DO 22 IY = NYSTART(IX),NYEND(IX)
          DO 24 IZ =1,NZ
            DO 26 IG = 1,NG
              IXY=NDNUM(IX,IY)
              IF ((IX.NE.NXSTART(IY)).AND.(IX.NE.NXEND(IY))) THEN
                W = DX(IX)
                WM = DX(IX-1)
                WP = DX(IX+1)
                IXYP=NDNUM(IX+1,IY)
                IXYM=NDNUM(IX-1,IY)
                TL(IG)  = TLY(IXY,IZ,IG) + TLZ(IXY,IZ,IG)
     &                       - SEFVE(IXY,IZ,IG)
                TLP(IG) = TLY(IXYP,IZ,IG) + TLZ(IXYP,IZ,IG)
     &                       - SEFVE(IXYP,IZ,IG)
                TLM(IG) = TLY(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                       - SEFVE(IXYM,IZ,IG)
              ELSE
                W = DX(IX)
                TL(IG)  = TLY(IXY,IZ,IG) + TLZ(IXY,IZ,IG)
     &                     - SEFVE(IXY,IZ,IG)
                IXYP=NDNUM(IX+1,IY)
                IF(IXYP.GT.NXYL) THEN
                  IBC=NBC(IXYP-NXYL)
                  IF(IBC.EQ.0) THEN
                    WP=W
                    TLP(IG) = TL(IG)
                  ELSEIF(IBC.EQ.1.OR.IBC.EQ.2) THEN
                    WP=.0
                    TLP(IG)=.0
                  ENDIF
                ELSE
                  WP = DX(IX+1)
                  TLP(IG) = TLY(IXYP,IZ,IG) + TLZ(IXYP,IZ,IG)
     &                     - SEFVE(IXYP,IZ,IG)
                ENDIF
                IXYM=NDNUM(IX-1,IY)
                IF(IXYM.GT.NXYL) THEN
                  IBC=NBC(IXYM-NXYL)
                  IF(IBC.EQ.0) THEN
                    WM=W
                    TLM(IG) = TL(IG)
                  ELSEIF(IBC.EQ.1.OR.IBC.EQ.2) THEN
                    WM=.0
                    TLM(IG)=.0
                  ELSEIF(IBC.LT.0) THEN
                    WM=DY(IX)
                    IXYM=-1*IBC
                    TLM(IG) = TLX(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                   - SEFVE(IXYM,IZ,IG)
                  ENDIF
                ELSE
                  WM = DX(IX-1)
                  TLM(IG) = TLY(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                     - SEFVE(IXYM,IZ,IG)
                ENDIF
              ENDIF
              PLMX1(IXY,IZ,IG) = POL1(W,WP,WM,TL(IG),TLP(IG),TLM(IG))
              PLMX2(IXY,IZ,IG) = POL2(W,WP,WM,TL(IG),TLP(IG),TLM(IG))
 
              IF ((IY.NE.NYSTART(IX)).AND.(IY.NE.NYEND(IX))) THEN
                W = DY(IY)
                WM = DY(IY-1)
                WP = DY(IY+1)
                IXYP=NDNUM(IX,IY+1)
                IXYM=NDNUM(IX,IY-1)
                TL(IG)  = TLX(IXY,IZ,IG) + TLZ(IXY,IZ,IG)
     &                          - SEFVE(IXY,IZ,IG)
                TLP(IG) = TLX(IXYP,IZ,IG) + TLZ(IXYP,IZ,IG)
     &                          - SEFVE(IXYP,IZ,IG)
                TLM(IG) = TLX(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                          - SEFVE(IXYM,IZ,IG)
              ELSE
                W = DY(IY)
                TL(IG)  = TLX(IXY,IZ,IG) + TLZ(IXY,IZ,IG)
     &                        - SEFVE(IXY,IZ,IG)
                IXYP=NDNUM(IX,IY+1)
                IF(IXYP.GT.NXYL) THEN
                  IBC=NBC(IXYP-NXYL)
                  IF(IBC.EQ.0) THEN
                    WP = W
                    TLP(IG) = TL(IG)
                  ELSEIF(IBC.EQ.1.OR.IBC.EQ.2) THEN
                    WP=0.
                    TLP(IG)=.0
                  ENDIF
                ELSE
                  WP = DY(IY+1)
                  TLP(IG) = TLX(IXYP,IZ,IG) + TLZ(IXYP,IZ,IG)
     &                         - SEFVE(IXYP,IZ,IG)
                ENDIF
                IXYM=NDNUM(IX,IY-1)
                IF(IXYM.GT.NXYL) THEN
                  IBC=NBC(IXYM-NXYL)
                  IF(IBC.EQ.0) THEN
                    WM = W
                    TLM(IG) = TL(IG)
                  ELSEIF(IBC.EQ.1.OR.IBC.EQ.2) THEN
                    WM=0.
                    TLM(IG)=.0
                  ELSEIF(IBC.LT.0) THEN
                    IXYM=-1*IBC
                    IF(IDRUN.EQ.'HCORE') THEN
                      WM=W
                      TLM(IG) = TLX(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                         - SEFVE(IXYM,IZ,IG)
                    ELSEIF(IDRUN.EQ.'QCORE') THEN
                      WM=DX(IY)
                      TLM(IG) = TLY(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                        - SEFVE(IXYM,IZ,IG)
                    ENDIF
                  ENDIF
                ELSE
                  WM = DY(IY-1)
                  TLM(IG) = TLX(IXYM,IZ,IG) + TLZ(IXYM,IZ,IG)
     &                          - SEFVE(IXYM,IZ,IG)
                ENDIF
              ENDIF
              PLMY1(IXY,IZ,IG) = POL1(W,WP,WM,TL(IG),TLP(IG),TLM(IG))
              PLMY2(IXY,IZ,IG) = POL2(W,WP,WM,TL(IG),TLP(IG),TLM(IG))
 
              IF ((IZ.NE.1).AND.(IZ.NE.NZ)) THEN
                W = DZ(IZ)
                WM = DZ(IZ-1)
                WP = DZ(IZ+1)
                TL(IG)  = TLX(IXY,IZ,IG) + TLY(IXY,IZ,IG)
     &                          - SEFVE(IXY,IZ,IG)
                TLP(IG) = TLX(IXY,IZ+1,IG) + TLY(IXY,IZ+1,IG)
     &                          - SEFVE(IXY,IZ+1,IG)
                TLM(IG) = TLX(IXY,IZ-1,IG) + TLY(IXY,IZ-1,IG)
     &                          - SEFVE(IXY,IZ-1,IG)
              ELSE
                W = DZ(IZ)
                TL(IG)  = TLX(IXY,IZ,IG) + TLY(IXY,IZ,IG)
     &                          - SEFVE(IXY,IZ,IG)
                IF(IZ.EQ.NZ) THEN
                  IF(LIZU.EQ.0) THEN
                    WP = W
                    TLP(IG) = TL(IG)
                  ELSEIF(LIZU.EQ.1.OR.LIZU.EQ.2) THEN
                    WP=.0
                    TLP(IG)=.0
                  ENDIF
                ELSE
                  WP = DZ(IZ+1)
                  TLP(IG) = TLX(IXY,IZ+1,IG) + TLY(IXY,IZ+1,IG)
     &                            - SEFVE(IXY,IZ+1,IG)
                ENDIF
                IF(IZ.EQ.1) THEN
                  IF(LIZD.EQ.0) THEN
                    WM = W
                    TLM(IG) = TL(IG)
                  ELSEIF(LIZD.EQ.1.OR.LIZD.EQ.2) THEN
                    WM=.0
                    TLM(IG)=.0
                  ENDIF
                ELSE
                  WM = DZ(IZ-1)
                  TLM(IG) = TLX(IXY,IZ-1,IG) + TLY(IXY,IZ-1,IG)
     &                            - SEFVE(IXY,IZ-1,IG)
                ENDIF
              ENDIF
              PLMZ1(IXY,IZ,IG) = POL1(W,WP,WM,TL(IG),TLP(IG),TLM(IG))
              PLMZ2(IXY,IZ,IG) = POL2(W,WP,WM,TL(IG),TLP(IG),TLM(IG))	      
 26         CONTINUE
 24       CONTINUE
 22     CONTINUE
 20   CONTINUE
 
      RETURN
      END
 
 
 
         FUNCTION POL1 (W,WP,WM,TL,TLP,TLM)
         IMPLICIT REAL(8) (A-H,O-Z) !VMQ
         DD = 1./((W+WP)*(W+WM)*(W+WM+WP))
         POL1 = DD*W*
     &    ( (TLP-TL)*(W+2.*WM)*(W+WM)+(TL-TLM)*(W+2.*WP)*(W+WP))
         RETURN
         END
 
 
         FUNCTION POL2 (W,WP,WM,TL,TLP,TLM)
         IMPLICIT REAL(8) (A-H,O-Z) !VMQ
         DD = 1./((W+WP)*(W+WM)*(W+WM+WP))
         POL2 = DD*W*W*((TLP-TL)*(W+WM)+(TLM-TL)*(W+WP))
         RETURN
         END
