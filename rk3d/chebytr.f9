C23456789012345678901234567890123456789012345678901234567890123456789012
C                                                                      C
                SUBROUTINE CHEBYTR(NOUTIT,MAOUTERUP,IRETRN,
     &      FNSWT,FNPPOT,FNPPPOT,NCOLXY,NCOLZ,RESIDUAL)
C                                                                      C
C23456789012345678901234567890123456789012345678901234567890123456789012
C
C
C  THIS SUBROUTINE APPLIES THE SEMI-IMPLICIT CHEBYSHEV POLYNOMIAL
C  ACCELERATION METHOD AND CHECKS FOR CONVERGENCE FOR THE TRANSIENT
C  PROBLEM
C
C
C12345678901234567890123456789012345678901234567890123456789012345678901
C
 
      include 'param.fcb'
      include 'che.fcb'
      include 'cntl.fcb'
      include 'conv.fcb' !vmq
      include 'geom.fcb'
      include 'opti.fcb'
      include 'xsec1.fcb'
      include 'only.fcb'
      include 'nonfue.fcb'
      include 'nemcnt.fcb'
      include 'flamdold.fcb'
      include 'array.fcb'
      include 'varlen.fcb'
 
       DIMENSION
     &   FNSWT(NXYL,*)                      ,FNPPOT(NXYL,*)      ,
     &   FNPPPOT(NXYL,*)                    ,
     &   NCOLZ(*)                           ,NCOLXY(NXYLMAX,*)

       REAL*8 FISDEL,ERRATD
 
C
C STATEMENT FUNCTION TO COMPUTE INVER COSINE HYPERBOLIC OF X :
C
        ACOSH(X)=DLOG(X+SQRT(X*X-1.0)) !
C
C INITIALIZE PARAMETERS :
C
        INEWCP=0
        DIFKEF=0.0
        GAMMAD=0.0
	ERRATD=ERRATN
        ERRATN=0.0
        FLAMNEW = 0.D0
        ALPHAC=0.0
        BETAC=0.0
C
C IS CHEBYSHEV ACCELERATION PERMITTED OR ALREADY IN PROGRESS ? :
C
        IF(NEWCP .EQ. 1) THEN
C
C INITIALIZE THE BEGINNING OF A CHEBYSHEV EXTRAPOLATION CYCLE :
C
          INEWCP=1
          NEWCP=0
          NORDCP=0
          ERPROD=1.0
          SIGMA=MIN(SIGBAR,0.999)
          
        ENDIF
        IF(NOUTIT.EQ.0) SIGMA=0.95*SIGMA
C
C OBTAIN NEXT PAIR OF CHEBYSHEV POLYNOMIAL COEFFICIENTS :
C
        NORDCP=NORDCP+1
        IF(NORDCP .EQ. 1) THEN
          ALPHAC=2.0/(2.0-SIGMA)
          BETAC=0.0
        ELSE  
          COSHGM=(2.0-SIGMA)/SIGMA
          GAMMA=ACOSH(COSHGM)
          ALPHAC=4.0*COSH((NORDCP-1)*GAMMA)/
     *                              (SIGMA*COSH(NORDCP*GAMMA))
          BETAC=(1.0-SIGMA*0.5)*ALPHAC-1.0
        ENDIF
C
C CALCULATE FISSION SOURCE NORM AND RELATED QUANTITIES :
C
C    ERRATN = L-2 NORM OF THE OUTER ITERATIVE RESIDUAL (S(L)-S(L-1))
C    GAMMAD = NORMALIZED INNER PRODUCT OF S(L) AND S(L-1) [S(L),S(L-1)]
C    FISPLN = 2-D VOLUME-INTEGRATED FISSION SOURCE
C
       DO 1 IZ=1,NZ
         DO 1 IXY=1,NXYL
           ICC = NCOLXY(IXY,NCOLZ(IZ))
           IF(ICC .GT. NFUEXY) THEN
             FISDEL=ABS((FNSWT(IXY,IZ))-(FNPPOT(IXY,IZ)))
             FISDELN = FISDEL/FNSWT(IXY,IZ)
             FLAMNEW = MAX(FLAMNEW,FISDELN)
             ERRATN=ERRATN+FISDEL*FISDEL
             GAMMAD=GAMMAD+ABS(FNSWT(IXY,IZ))*(FNPPOT(IXY,IZ))/ERRATD
           ENDIF
 1     CONTINUE
C
C SELECT ACCELERATION OPTION AND APPLY ACCELERATION:
C
       IF(ALPHAC.NE.0.0.AND.BETAC.NE.0.0) THEN
C
C (1) FULL TWO-TERM CHEBYSHEV ACCELERATION :
C
         DO 2 IZ=1,NZ
           DO 2 IXY=1,NXYL
             FNSWT(IXY,IZ)=FNPPOT(IXY,IZ)
     &         +ALPHAC*(FNSWT(IXY,IZ)-FNPPOT(IXY,IZ))
     &         +BETAC *(FNPPOT(IXY,IZ)-FNPPPOT(IXY,IZ))
2        CONTINUE
       ELSEIF(ALPHAC.NE.0.0) THEN
C
C (2) ONE-TERM CHEBYSHEV ACCELERATION :
C
         DO 3 IZ=1,NZ
           DO 3 IXY=1,NXYL
             FNSWT(IXY,IZ)=FNPPOT(IXY,IZ)
     &         +ALPHAC*(FNSWT(IXY,IZ)-FNPPOT(IXY,IZ))
3        CONTINUE
       ENDIF
C
C COMPUTE RESIDUAL AND NEW EIGENVALUE
C
      CALL RESID(
     &   A(LVOLUN),A(LBETATN),A(LBETATLAMN),
     &   A(LFILAMDT1N),A(LSWN),A(LTNFN),A(LXHIPN),A(LSEFFN),
     &   AINT(LLSEXTRN),AINT(LLSEXTZN),A(LSEXTN),A(LSCWN),
     &   A(LFNSHIFTN),EIGEN,RESIDUAL )
C
C COMPUTE RESIDUAL RELATIVE REDUCTION
C
       DIFFIS=SQRT((ERRATN/GAMMAD)/ERRATD)
       IF(INEWCP.EQ.1) DIFFISOLD=DIFFIS
       IF(DIFFISOLD.GT.0.0) THEN
         DIFRESID=SQRT(DIFFIS/DIFFISOLD)
       ELSE  
         DIFRESID=1.
       ENDIF  
       DIFLAMNEW = FLAMNEW/(1.-SIGMA)
C
C COMPUTE FISSION SOURCE ERRORS AND ESTIMATE THE DOMINANCE RATIO :
C
       ERRAT=SQRT(ERRATN/ERRATD)
       IF(NOUTIT .EQ. 0) THEN
         SIGBAR=SIGMA
       ELSEIF((NOUTIT-MAOUTERUP).GT.1..AND.NORDCP.LE.1) THEN
         SIGBAR=ERRAT
       ENDIF
         
       IF(NORDCP.GT.1) THEN
C
C MONITOR THE EFFECTIVENESS OF THE EXTRAPOLATION CYCLE.
C AFTER REACHING A POLYNOMIAL OF DEGREE THREE, TERMINATE
C THE CURRENT CYCLE WHENEVER THE ERROR REDUCTION FACTOR (ERPROD)
C EXCEEDS THE THEORETICAL ERROR REDUCTION FACTOR (1./CPM1)
C (I.E. WHENEVER GAMMA .GE. 1).
C WHEN A NEW EXTRAPOLATION CYCLE IS INDICATED (NEWCP=1),
C THE LATEST DOMINANCE RATIO ESTIMATE (SIGBAR) WILL BE USED.
C
          ERPROD=ERPROD*ERRAT
          ORDCPM=DFLOAT(NORDCP-1) !vmq
          CPM1=COSH(ORDCPM*ACOSH((2.-SIGMA)/SIGMA))
          GAMMA=CPM1*ERPROD
          IF(GAMMA .LT. 1.0) THEN
            SIGBAR=SIGMA*(1.0+COS(ACOS(GAMMA)/ORDCPM))*0.5
          ENDIF
          IF(GAMMA .GE. 1.0) THEN 
            SIGBAR=SIGMA*(1.0+COSH(ACOSH(GAMMA)/ORDCPM))*0.5
          ENDIF
          IF(GAMMA.GE.1.0.AND.NORDCP.GE.3) NEWCP=1
          IF(NORDCP.GE.IUPOUTER.OR.DIFRESID.LE.EPREDRESID
     *               .OR.(IONE.EQ.2.AND.(NOUTIT+1).GE.IOK)) THEN
            IF(GAMMA.LT.1.0) SIGBAR = 0.99*SIGMA
            NEWCP=1
          ENDIF
        ENDIF
  
C !vmq alway anfdbk        IF(IMETHOD.EQ.1.AND.(ANFDBK.EQ.'N'.OR.
C !vmq alway anfdbk     *                 (ANFDBK.EQ.'Y'.AND.ANFDBKIMP.EQ.'N'))) INEWCP=1
C
C CHECK CONVERGENCE :
C
        IRETRN=1
        IF(NOUTIT .GE. KITR) IRETRN=2
 
C !vmq        IF(CRTON.EQ.'Y') THEN
C !vmq          WRITE(*,87)DIFFIS,EPSOT
C !vmq          WRITE(*,92)RESIDUAL,EPSRESID
C !vmq          WRITE(*,91)DIFRESID,EPREDRESID
C !vmq          WRITE(*,90)NORDCP
C !vmq        ENDIF
 
        IF(ACONV.EQ.'Y') THEN
          IF(      DIFFIS.LE.EPSOT
     &       .AND. INEWCP.EQ.1
     &       .AND. INEM.EQ.0
     &       .AND. RESIDUAL.LE.EPSRESID)IRETRN=3
        ELSE
          IF(      DIFFIS.LE.EPSOT
     &       .AND. RESIDUAL.LE.EPSRESID)IRETRN=3
        ENDIF
 
        IF(IRETRN.EQ.3) SIGBAR=SIGMA
 
        IF(NPC.EQ.'Y') THEN
          WRITE(55,300) DIFLAMNEW,DIFFIS,RESIDUAL,
     &                    NORDCP,SIGMA,SIGBAR
        ENDIF   

 87     FORMAT(T2,' L_2 OUTER ITER RESID CONV. CRITERIA: ',
     &                                         2X,E12.5,2X,E12.5)
 90     FORMAT(T2,' CHEBYSHEV POLY. ORDER              : ',4X,I2)
 91     FORMAT(T2,' L_2 RELATIVE RESID KICKOUT CRITERIA: ',
     &                                         2X,E12.5,2X,E12.5)
 92     FORMAT(T2,' L_2 TRUE RESIDUAL CONV. CRITERIA   : ',
     &                                         2X,E12.5,2X,E12.5)
300     FORMAT(/6X,'L_INF OUTER ITERATIVE REL RESIDUAL =',E12.5,
     &         /6X,'L_2 OUTER ITERATIVE REL RESIDUAL   =',E12.5,
     &         /6X,'L_2 TRUE RELATIVE RESIDUAL         =',E12.5,
     &         /6X,'ORDER=',I3,' SIGMA=',E12.5,' SIGMA EST.=',E12.5,
     &         /)

        RETURN
        END
