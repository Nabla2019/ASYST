*if def,selap
       subroutine zusolv(zutemp,fzsol,fosol,fzr,fo,isat,fzrsat,fosat,
     +fzrs,fos,fslute,fprcp)
c
c     zusolv calculates the solubility of uo2 in zr-u-o compounds
c     for temperatures in the range of 2248 - 2673 k
c     isat   = output indication of solvent supersaturation
c               isat = 0 for solvent that is not supersaturated
c               isat = 1 for supersaturated solvent
c     fzrsat = output atomic fraction zircaloy in saturated solvent
c              (atoms zr/atoms solvent)
c     fosat  = output atomic fraction oxygen in saturated solvent
c              (atoms o/atoms solvent)
c     fslute = output atomic fraction solute add to solvent to
c              achieve equilibrium (atoms solute/atoms solution)
c              returned when isat = 0
c     fzrs   = output atomic fraction zircaloy in precipitate
c              (atoms zr/atoms precipitate) returned when isat = 1
c     fos    = output atomic fraction oxygen in precipitate
c              (atoms 0/atoms precipitate) returned when isat = 1
c     fprcp  = output atomic fraction solid precipitated from
c              solvent to achieve equilibrium (atoms precipitate/
c              atoms solvent) returned when isat = 1
c     zutemp = input compound temperature (k)
c     fzsol  = input atomic fraction zirconium in solute
c              (atoms zirconium/atoms solute) normally 0.0 for
c              for u0.3300.67.
c     fosol  = input atomic fraction oxygen in solute
c              (atoms o/atoms solute) normally 2/3 for uo.330o.67.
c     fzr    = input atomic fraction zircaloy in solvent
c              (atoms zr/atoms solvent)
c     fo     = input atomic fraction oxygen in solvent
c              (atoms o/atoms solvent)
c
c     the subcode coef is called by this subroutine
c
c     zusolv was orginally coded as pslv by d. l. hagrman,
c     november, 1980.
c     this version was coded by j. k. hohorst, july, 1985.
c
       implicit none
       include "ufiles.h"
       integer isat
       real zutemp,fzsol,fosol,fzr,fo,fzrsat,fosat,fzrs,fos,fslute,fprcp
c
c  Local variables.
       real a,a1,a1l1,a2,absd,al1u,al1z,al2t,aiso,arg,as1u,as1z,aslsl,
     * atie,b,b1,b1l1,b2,bl1u,bl1z,bl2t,biso,bs1u,bs1z,bslsl,btie,
     * c6,denom,fo2m1,fo2m2,fo2m3,fo2m4,foq1,foq2,foq3,foq4,foq5,
     * foq7,fouo1,fouo2,fouo3,fouo4,fouo5,fouo6,fouo7,fouo8,fuo2q1,
     * fuo2q2,fuo2q3,fuo2q4,fuo2q5,fuo2q7,fozr1,fozr2,fozr3,fozr4,
     * fozr5,fozr6,fozr7,fzq1,fzq2,fzq3,fzq4,fzq5,fzq7,radcl,s6,t,
     * vnum,x1,x2,x6,x6lp,x31,x38,xbpnt,xil1,xint1,xint2,xint3,
     * xint4,xl2pt,xo2m1,xo2m2,xo2m3,xo2m4,xouo1,xouo2,xouo3,xouo4,
     * xouo5,xouo6,xouo7,xouo8,xozr1,xozr2,xozr3,xozr4,xozr5,xozr6,
     * xozr7,xq1,xq2,xq3,xq4,xq5,xq7,xsol,xtl,xts,xuzr1,xuzr2,xvent,
     * y1,y2,y6,y31,y38,ybpnt,yil1,yint1,yint2,yint3,yint4,yiso,
     * yl2pt,yo2m1,yo2m2,yo2m3,yo2m4,youo1,youo2,youo3,youo4,youo5,
     * youo6,youo7,youo8,yozr1,yozr2,yozr3,yozr4,yozr5,yozr6,yozr7,
     * yq1,yq2,yq3,yq4,yq5,yq7,ysol,ytl,yts,yuzr1,yuzr2,yvent
       real fndst
       external coef
c
      fndst(x1,y1,x2,y2) = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1)
     + * (y2 - y1))
      t = zutemp
c        max. temperature limit is 2673.0 until
c          further work is done by mr.hagrman
        if(t .gt. 2673.0) t=2673.0
c     define the variables to be used in the program
      c6 = cos(3.141593/3.)
      s6 = sin(3.141593/3.)
c     find the liquidus and solidus segment coordinates for
c     zr-zro2 side of the triangular phase diagram.
      if((t .lt. 2173.) .or. (t .gt. 2973.)) go to 200
         fozr1 = (1785.754 - sqrt(1785.754 * 1785.754 + 390.6488
     +           * (764.6003 - t))) / 390.6488
         xozr1 = c6 * fozr1 + (1. - fozr1)
         yozr1 = s6 * fozr1
c        write (output,11)fozr1,xozr1,yozr1
c  11    format(2x,'fozr1=',e10.3,2x,'xozr1=',e10.3,2x,'yozr1=',e10.3)
         fozr7 = (52252.48 + sqrt(52252.48 * 52252.48 - 95519.41 *
     +           (30182.27 - t))) / 95519.41
         xozr7 = c6 * fozr7 + (1. - fozr7)
         yozr7 = s6 * fozr7
c
c     the next temperature range to be checked and calculated
  200 if(( t .lt. 2173. ) .or. ( t .gt. 2248.)) go to 210
         arg = 694.3412 * 694.3412 + 2788.519 * (2075.109 - t)
         if(arg .lt. 0.)  arg = 0.
         fozr2 = (694.3412 + sqrt(arg))/2788.519
         xozr2 = c6 * fozr2 + (1. - fozr2)
         yozr2 = s6 * fozr2
         arg = 10100.05 * 10100.05 - 40562.47 *(266.9135 + t)
         if(arg .lt. 0.)  arg = 0.
         fozr6 = (10100.05 + sqrt(arg)) / 40562.47
         xozr6 = c6 * fozr6 + (1. - fozr6)
         yozr6 = s6 * fozr6
c
c     the values for the next temperature range are calculated
c     and checked
  210  if((t .lt. 2125.) .or. (t .gt. 2213.))  go to  220
          fozr3 = (1114.952 - sqrt(1114.952 * 1114.952 + 13704.72 *
     +            (2125. - t)))/13704.72
          xozr3 = c6 * fozr3 + (1. - fozr3)
          yozr3 = s6 * fozr3
          fozr4 = (-131.723 + sqrt(131.723 * 131.723 - 5602.96 *
     +            (2125. - t)))/5602.96
          xozr4 = c6 * fozr4 + (1. - fozr4)
          yozr4 = s6 * fozr4
c
c     the next temperature range is checked for and if the
c     temperature is within this range the values are calculated.
  220  if(( t .lt. 2213.) .or. ( t .gt. 2248.))  go to 230
       fozr3 = (263.9718 - sqrt(263.9718 * 263.9718 + 1060. *
     +         (2182.271 - t)))/1060.
       xozr3 = c6 * fozr3 + (1. - fozr3)
       yozr3 = s6 * fozr3
       arg = 1941.412 * 1941.412 + 7796.837 * (1764.588 - t)
       if(arg .lt. 0.) arg = 0.
       fozr5 = (1941.412 - sqrt(arg))/7796.837
       xozr5 = c6 * fozr5 + (1. - fozr5)
       yozr5 = s6 * fozr5
c
c      find the liquid and solid segments  coordinates for zr0.7o0.33
c      -u0.33o.67 quasi
c
  230  if(( t .lt. 2173.) .or. ( t .gt. 2240.747)) go to 240
       fuo2q1 = (-13.40961 + sqrt(13.40961 * 13.40961 + 829.9846 *
     +          (2240.747 - t)))/829.9846
       foq1 = 2. * fuo2q1/3. + .3 * (1. - fuo2q1)
       fzq1 = .7 * (1. - fuo2q1)
       xq1 = c6 * foq1 + fzq1
       yq1 = s6 * foq1
c
c     the next set of temperature varialbes
  240  if(( t .lt. 2173.) .or. (t .gt. 2673.)) go to 250
       fuo2q2 = (11234.85 - sqrt(11234.85 * 11234.85 - 27575.76 *
     +          (1883.545 + t)))/27575.76
       foq2 = 2. * fuo2q2/3. + .3 * (1. - fuo2q2)
       fzq2 = .7 * (1. - fuo2q2)
c      write (output,12)fuo2q2,foq2,fzq2
c  12  format(2x,'fuo2q2=',e10.3,2x,'foq2=',e10.3,2x,'fzq2=',e10.3)
       xq2 = c6 * foq2 + fzq2
       yq2 = s6 * foq2
c      write (output,13)xq2,yq2
c  13  format(2x,'xq2=',e10.3,2x,'yq2=',e10.3)
       fuo2q4 = (105794.3 + sqrt(105794.3 * 105794.3 - 128462.5 *
     +          (84438.99 + t)))/128462.5
       foq4 = 2. * fuo2q4 / 3. + .3 * ( 1. - fuo2q4)
       fzq4 = .7 * (1. - fuo2q4)
       xq4 = c6 * foq4 + fzq4
       yq4 = s6 * foq4
c
c     the next set of temperature variables
  250  if((t .lt. 2673.) .or. (t .gt. 3119.)) go to 260
       fuo2q3 = (4930. - sqrt(4930. * 4930. - 6000. * (311. + t)))
     +          /3000.
       foq3 = 2. * fuo2q3/3. + .3 * (1. - fuo2q3)
       fzq3 = .7 * (1. - fuo2q3)
       xq3 = c6 * foq3 + fzq3
       yq3 = s6 * foq3
       fuo2q5 = (2489.661 + sqrt(2489.661 * 2489.661 - 4179.972 *
     +          (3918.35 - t)))/4179.972
       foq5 = 2. * fuo2q5/3. + .3 * (1. - fuo2q5)
        fzq5 = .7 * (1. - fuo2q5)
        xq5 = c6 * foq5 + fzq5
        yq5 = s6 * foq5
       fuo2q7 = (41641.97 + sqrt(41641.97 * 41641.97 - (15257.48 -
     +          t)))/94995.94
        foq7 = 2. * fuo2q7/3. + .3 * (1. - fuo2q7)
        fzq7 = .7 * (1. - fuo2q7)
        xq7 = c6 * foq7 + fzq7
        yq7 = s6 * foq7
c
c     find liquidus and solidus segments  coordinates for u-uo2 side
c     of the triangular phase diagram
  260   if((t .lt. 1391.) .or. (t .gt. 1406.)) go to 270
        fouo1 = (1406. - t)/228.833
        xouo1 = c6 * fouo1
        youo1 = s6 * fouo1
c
c     check the next temperature range
  270   if((t .lt. 1391.) .or. (t .gt. 2700.)) go to 280
        fouo2 = (2940.587 - sqrt(2940.587 * 2940.587 + 4833.744 *
     +          (1026.259 - t)))/4833.744
        xouo2 = c6 * fouo2
        youo2 = s6 * fouo2
        fouo5 = (473984.9 + sqrt(473984.9 * 473984.9 - 763564.9 *
     +          (291499.1 + t)))/763564.9
        xouo5 = c6 * fouo5
        youo5 = s6 * fouo5
c
c     check the next temperature range
  280   if((t .lt. 2700.) .or. (t .gt. 3119.))  go to 290
        radcl = sqrt(3119.  - t)/1610.
        fouo3 = (2. - radcl)/(3. - radcl)
        xouo3 = c6 * fouo3
        youo3 = s6 * fouo3
        absd = (sqrt(418.85 * 418.85 + 1469. * (3119. - t)) -
     +         418.85)/1469.
        fouo6 = (2. - absd)/(3. - absd)
        xouo6 = c6 * fouo6
        youo6 = s6 * fouo6
c
c     check the next temperature range
  290   if((t .lt. 2973.) .or. (t .gt. 3119.)) go to 300
        fouo4 = (2. + radcl)/(3. + radcl)
        xouo4 = c6 * fouo4
        youo4 = s6 * fouo4
c
c     check the next temperature range
  300   if((t .lt. 1926.) .or. (t .gt. 2873.)) go to 310
        fouo8 = (478156.7 - sqrt(478156.7 * 478156.7 - 67587. *
     +          (3383979. - t)))/675870.
        xouo8 = c6 * fouo8
        youo8 = s6 * fouo8
c
c     check the next temperature range
  310  if((t .le. 2873.) .or. (t .gt. 3119.)) go to 320
       fouo7 = (37574.67 - sqrt(37574.7 * 37574.67 - 48052.59 *
     +         (31862.23 - t)))/48052.59
       xouo7 = c6 * fouo7
       youo7 = s6 * fouo7
c
c    find liquidus and solidus coordinates for u-zr
  320  if((t .lt. 1406.) .or. (t .gt. 2125.))  go to 330
       xuzr1 = (478.5 - sqrt(478.5 * 478.5 + 238. * (1406. - t)))
     +         /238.
       yuzr1 = 0.
       xuzr2 = (-208.5 + sqrt(208.5 * 208.5 - 302. * (1406. - t)))
     +         /302.
       yuzr2 = 0.
c
c    find liquidus and solidus coordinates for zro2-uo2
  330  if((t .lt. 2809.) .or. (t .gt. 3119.)) go to 340
       if(t .lt. 2989.) go to 350
       fo2m3 = (3119. - t)/433.3333
       go to 370
  350  if(t .lt. 2832.) go to 360
       fo2m3 = (443.0286 + sqrt(443.0286 * 443.0286 + 2194.367 *
     +         (2920.676 - t)))/2194.367
       go to 370
  360  arg = .25 - (35809.46 - t)/132001.8
       if(arg .lt. 0.)  arg = 0.
       fo2m3 = .5 - sqrt(arg)
  370  xo2m3 = (1. + fo2m3)/3.
       yo2m3 = s6 * 2./3.
c
       if(t .gt. 2821.)  go to 380
       arg = .25 - (5794.401 - t)/11941.6
       if(arg .lt. 0.)  arg = 0.
       fo2m4 = .5 + sqrt(arg)
       go to 390
c
  380  if(t .gt. 2851.341) go to 400
       fo2m4 = (4162.934 - sqrt(4162.934 * 4162.934 + 6838.223 *
     *         (327.3354 - t)))/6838.223
       go to 390
c
  400  if(t .gt. 2862.) go to 410
       fo2m4 = (t - 2817.588)/59.2158
       go to 390
c
  410  if(t .gt. 2973.)  go to 420
       fo2m4 = (793. + sqrt(793. * 793. - 1160. * (3399. - t)))/
     +         1160.
  390  xo2m4 = (1. + fo2m4)/3.
       yo2m4 = s6 * 2./3.
c
  420  if(t .lt. 2843.) go to 430
       fo2m1 = (107. - sqrt(107. * 107. - 41.44 * (3119. - t)))/1036.
       go to 440
c
  430  fo2m1 = .5 - sqrt(.25 - (2862.125 - t)/212.5)
  440  xo2m1 = (1. + fo2m1)/3.
       yo2m1 = 2./3. * s6
c
       if(t .gt. 2832.) go to 450
       arg = (.25 - (2872.889 - t)/255.556)
       if(arg .lt. 0.) arg = 0.
       fo2m2 = .5 + sqrt(arg)
       go to 460
c
  450  if(t .gt. 2973.) go to 340
       fo2m2 = (2212.5 + sqrt(2212.5 * 2212.5 - 2850. * (4548. - t)))/
     +         2850.
  460  xo2m2 = (1. + fo2m2)/3.
       yo2m2 = 2./3. * s6
c
c    correlations for internal points follow
  340  if((t .lt. 1391.) .or. (t .gt. 2248.)) go to 470
       x6 = xouo5 + .01
       y6 = youo5
       if(t .lt. 1587.277) then
          x6lp = xouo5 + .01 * xuzr1/.1993
       else
          x6lp = x6
       endif
c
  470  if((t .lt. 1273.) .or. (t .gt. 2248.)) go to 480
c
       if(t .lt. 2223.) x38 = .6248868 + t * (2.938827e-04 + t
     +                        * (-9.967758e-08))
       if(t .ge. 2223.) x38 = -7.207558 + t * 3.595666e-03
       if(t .lt. 2178.) y38 = .5935931 + t * (-4.90869e-04 + t
     +                        * 1.629741e-07)
       if(t .ge. 2178.) y38 = 2.848266 - t * 1.171115e-03
  480  if((t .lt. 1273.) .or. (t .gt. 2125.)) go to 490
       x31 = x38 + c6 * .01
       y31 = x38 - s6 * .01
  490  if((t .le. 2073.) .or. (t .gt. 2213.))  go to 500
       xbpnt = 32.99604 + t * (-2.993934e-02 + t * 6.984916e-06)
       ybpnt = -27.11131 + t * (2.472659e-02 + t * (-5.619053e-06))
c    interpolate for interior l2 point left side
  500  if((t .lt. 2673.) .or. (t .ge. 2700.))  go to 510
       xint1 = 1.108093e-02 * (t - 2673.) + xq3 * (2700. - t)/27.
       yint1 = 1.919274e-02 * (t - 2673.) + yq3 * (2700. - t)/27.
  510  if((t .lt. 2673.) .or. (t .ge. 2809.))  go to 520
       xint2 = 3.676471e-03 * (t - 2673.) + xq3 * (2809. - t)/136.
       yint2 = 4.245223e-03 * (t - 2673.) + yq3 * (2809. - t)/136.
c     interpolation for start of three phase region
  520  if((t .lt. 2809.) .or. (t .ge. 2973.))  go to 530
       a1 = xozr1
       b1 = yozr1
       a2 = xq7
       b2 = yq7
       call coef(a1,b1,a2,b2,a,b)
       a1l1 = a
       b1l1 = b
       a1 = xo2m4
       b1 = yo2m4
       a2 = .85
       b2 = .3 * s6
       call coef(a1,b1,a2,b2,a,b)
       a1 = a1l1
       b1 = b1l1
       a2 = a
       b2 = b
       call coef(a1,b1,a2,b2,a,b)
       xint4 = -a
       yint4 = b
c    interpolation for interior solidus point at zro2-uo2 mix
  530  if((t .lt. 2673.) .or. (t .ge. 2809.))  go to 540
       xint3 = 3.676471e-03 * (t - 2673.) + xq5 * (2809. - t)/136.
       yint3 = 4.245223e-03 * (t - 2673.) + yq5 * (2809. - t)/136.
  540  if((t .lt. 2173.) .or. (t .ge. 2240.747)) go to 541
       a1 = xozr1
       b1 = yozr1
       a2 = xq2
       b2 = yq2
       call coef(a1,b1,a2,b2,a,b)
       al2t = a
       bl2t = b
       a1 = xozr2
       b1 = yozr2
       a2 = xq1
       b2 = yq1
       call coef(a1,b1,a2,b2,a,b)
       a1 = a
       b1 = b
       a2 = al2t
       b2 = bl2t
       call coef(a1,b1,a2,b2,a,b)
       xl2pt = -a
       yl2pt = b
c
c     calculate saturation composition and solute fraction in solution
  541  if((t .lt. 2248.) .or. (t .gt. 2673.)) go to 900
       xsol = c6 * fosol + fzsol
       ysol = s6 * fosol
       xvent = c6 * fo + fzr
       yvent = s6 * fo
c
c     calculate fractions and compositions
c     find equation of solvent - solute line
       a1 = xsol
       b1 = ysol
       a2 = xvent
       b2 = yvent
       call coef(a1,b1,a2,b2,a,b)
       aslsl = a
       bslsl = b
c
c     find the equations of the two liquidus segments
       a1 = xozr1
       b1 = yozr1
       a2 = xq2
       b2 = yq2
       call coef(a1,b1,a2,b2,a,b)
       al1z = a
       bl1z = b
       a1 = xouo2
       b1 = youo2
       call coef(a1,b1,a2,b2,a,b)
       al1u = a
       bl1u = b
       a1 = xouo5
       b1 = youo5
       a2 = xq4
       b2 = yq4
       call coef(a1,b1,a2,b2,a,b)
       as1u = a
       bs1u = b
c
c     test for supersaturated solvent
       isat = 0
       if(xvent .le. xq2) then
          if(yvent .gt. (al1u * xvent + bl1u)) isat = 1
       else
          if(yvent .gt. (al1z * xvent + bl1z)) isat = 1
       endif
       if(isat .gt. 0) go to 550
c
c     find both intersections the higher one is real
       a1 = al1z
       b1 = bl1z
       a2 = aslsl
       b2 = bslsl
       call coef(a1,b1,a2,b2,a,b)
       xil1 = -a
       yil1 = b
       a1 = al1u
       b1 = bl1u
       call coef(a1,b1,a2,b2,a,b)
       if(yil1 .lt. b) then
          xil1 = -a
          yil1 = b
       endif
c
       denom = fndst(xsol,ysol,xvent,yvent)
       vnum = fndst(xil1,yil1,xvent,yvent)
       fslute = vnum/denom
       fosat = yil1/s6
       fzrsat = xil1 - c6 * fosat
       fzrs = 0.
       fos = 0.
       fprcp = 0.
       go to 1000
c
c     calculate fluid and precipitate compositions, precipitate
c     fraction;  determine location  = u or zr side of zro.7o0.3-
c     u0.3o0.7 isopleth.
c     find isopleth equation
  550  a1 = c6 * .3 + .7
       b1 = s6 * .3
       a2 = 1./3.
       b2 = s6 * 2./3.
       call coef(a1,b1,a2,b2,a,b)
       aiso = a
       biso = b
       yiso = aiso * xvent + biso
       if(yiso .gt. yvent) go to 560
c
c     zr side group pf tie-lines
c     find equation of solidus segment
       a1 = xozr7
       b1 = yozr7
       a2 = xq4
       b2 = yq4
       call coef(a1,b1,a2,b2,a,b)
       as1z = a
       bs1z = b
c     find the tie-line through the solvent composition
       a1 = xvent
       b1 = yvent
       a2 = c6 * .3 + .7
       b2 = s6 * .3
c      write (output,21)a1,b1,a2,b2
c  21  format(2x,'1',2x,'a1=',e10.3,2x,'b1=',e10.3,2x,'a2=',
c    + e10.3,2x,'b2=',e10.3)
       call coef(a1,b1,a2,b2,a,b)
c      write (output,23)a,b
c  23  format(2x,'1',2x,'a=',e10.3,2x,'b=',e10.3)
       atie = a
       btie = b
c     find the intersection of the tie line and the solidus
c      write (output,14)atie,btie,as1z,bs1z
c  14  format(2x,'atie=',e10.3,2x,'btie=',e10.3,2x,'as1z=',e10.3,
c    + 2x,'bs1z=',e10.3)
       a1 = atie
       b1 = btie
       a2 = as1z
       b2 = bs1z
       call coef(a1,b1,a2,b2,a,b)
       xts = -a
       yts = b
c     find the intersection of the tie-line and the liquidus
c      write (output,15)atie,btie,al1z,bl1z
c  15  format(2x,'2',2x,'atie=',e10.3,2x,'btie=',e10.3,2x,
c    +  'al1z=',e10.3,2x,'bl1z=',e10.3)
       a1 = atie
       b1 = btie
       a2 = al1z
       b2 = bl1z
       call coef(a1,b1,a2,b2,a,b)
       xtl = -a
       ytl = b
       go to 570
c     u side group of tie line
c     find the equation of the solidus segment
  560 a1 = xouo5
      b1 = youo5
      a2 = xq4
      b2 = yq4
c
       call coef(a1,b1,a2,b2,a,b)
      as1u = a
      bs1u = b
c     find the tie-line through the solvent compoistion
       a1 = xvent
       b1 = yvent
       a2 = 1./3.
       b2 = s6 * 2./3.
c      write (output,22)a1,b1,a2,b2
c  22  format(2x,'2',2x,'a1=',e10.3,2x,'b1=',e10.3,2x,'a2=',
c    + e10.3,2x,'b2=',e10.3)
       call coef(a1,b1,a2,b2,a,b)
       atie = a
       btie = b
c     find the intersection of the tie-line and the solidus
       a1 = atie
       b1 = btie
       a2 = as1u
       b2 = bs1u
c      write (output,16)atie,btie,as1u,bs1u
c  16  format(2x,'3','atie=',e10.3,2x,'btie=',e10.3,2x,'as1u=',
c    + e10.3,2x,'bs1u=',e10.3)
       call coef(a1,b1,a2,b2,a,b)
       xts = -a
       yts = b
c     find the intersection of the tie-line and the liquidus
       a1 = atie
       b1 = btie
       a2 = al1u
       b2 = bl1u
c      write (output,17)atie,btie,al1u,bl1u
c  17  format(2x,'4','atie=',e10.3,2x,'btie=',e10.3,2x,'al1u=',
c    + e10.3,2x,'bl1u=',e10.3)
       call coef(a1,b1,a2,b2,a,b)
       xtl = -a
       ytl = b
  570  denom = fndst(xts,yts,xtl,ytl)
       vnum = fndst(xvent,yvent,xtl,ytl)
c      write (output,1)denom,vnum
c   1  format(2x,'denom=',e10.3,2x,'vnum=',e10.3)
       fprcp = vnum/denom
       fosat = ytl/s6
c      write (output,2)c6,s6,fosat
c   2  format(2x,'c6=',e10.3,2x,'s6=',e10.3,2x,'fosat=',e10.3)
c      write (output,3)xtl,ytl
c   3  format(2x,'xtl=',e10.3,2x,'ytl=',e10.3)
c      write (output,4)xts,yts
c   4  format(2x,'xts=',e10.3,2x,'yts=',e10.3)
       fzrsat = xtl - c6 * fosat
       fos = yts/s6
       fzrs = xts - c6 * fos
       fslute = 0.
       go to 1000
c
  900  fslute = 0.
       fprcp = 0.
       fzrsat = 0.
       fosat = 0.
       fzrs = 0.
       fos = 0.
 1000  return
       end
*endif
