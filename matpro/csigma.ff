       subroutine csigma (ctemp,deloxy,anrin,fnck,fncn,cwkf,cwnf,rstran,
     & strant,strest,a1,a2,a3)
!   csigma calculates power law true stress as a function of
!   true cladding strain, true cladding strain rate,
!   cladding temperature, average oxygen concentration
!   in cladding, fast neutron fluence, and cold work
!   a1,a2, and a3 = output coefficients of anisotropy (unitless)
!   strest = output power law true stress (pa)
!   strant = input true strain (unitless )
!   rstran = input true strain rate (s**(-1))
!   ctemp  = input cladding meshpoint temperature (k)
!   deloxy = input average oxygen concentration excluding
!   oxide layer - average oxygen concentration of
!   as received cladding  (kg oxygen/kg zircaloy)
!   anrin  = input contractile strain ratio during uniaxial tensile
!   test. circumferential strain/radial strain.
!   if unknown, input zero or negative number (m/m)
!   fnck   = input effective fast fluence for strength
!   coefficient (neutrons/(m**2))
!   fncn   = input effective fast fluence for strain hardening
!   exponent (neutrons/(m**2))
!   cwkf   = input effective cold work for strength
!   coefficient (unitless ratio of areas)
!   cwnf   = input effective cold work for strain hardening
!   exponent (unitless ratio of areas)
!   conversion from pa  to  psi  is 1.4505e-04 (psi/pa)
!   csigma was coded by M. Bohn and Modified by D. L. Hagrman in
!   February 1977.
!   Modified by D. L. Hagrman October 1977.
!
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       real(kr) ctemp,deloxy,anrin,fnck,fncn,cwkf,cwnf,rstran,strant,
     & strest,a1,a2,a3
!
       include 'contrl.h'
!
       real(kr) ak,am,an,rr,t
!
       if (chngno(70)) then
         call ckmnr (ctemp,deloxy,fnck,fncn,cwkf,cwnf,rstran,ak,an,am)
       else
         call ckmn (ctemp,deloxy,fnck,fncn,cwkf,cwnf,rstran,ak,an,am)
       endif
       t = ctemp
!  Anisotropy constants.
       if (t.le.1203.233 .and. strant.le.0.3) then
         rr = 2.65 + t*(1.36e-03 - t*2.27e-06)
         if (strant .ge. 0.15)
     &   rr = 1.0 + (strant*(1.0 - rr)/2.25e-2)*(strant - 3.0e-1)
       else
         rr = 1.0
       endif
       if (anrin.gt.0.) rr = anrin
       a1 = rr/(rr + 1.0)
       a2 = -(rr - 5.4)/(4.4*(rr + 1.0))
       a3 = 1.0/(rr + 1.0)
       strest = ak*(strant**an)*((rstran/1.0e-3)**am)
       return
       end
