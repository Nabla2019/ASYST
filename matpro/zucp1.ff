*if def,selap
       function zucp1(z,u,s,a1,a2,ux2,zx2,a3,a4,a5,afsoil,zutemp)
!  Returns the specific heat capacity at constant pressure for
!  zirconium-uranium-oxygen compounds, and elemental aluminum,
!  lithium, cadmium, or silicon dioxide (soil).
!
!     zucp1   = output compound specific heat capacity (j/(kg*k))
!     u      = input atomic fraction uranium in compound
!              (atoms uranium/atoms in compound)
!     z      = input atomic fraction zirconium in compound
!              (atoms zirconium/atoms in compound)
!     s      = input atomic fraction stainless steel in compound/
!              mixture (atoms steel/atoms conglomerate)
!     a1     = input atomic fraction silver-indium-cadmium in
!              compound/mixture (atoms ag-in-cd/atoms conglomerate)
!     a2     = input atomic fraction boron carbide in compound/mixture
!              atoms boron carbide (b4c)/atoms conglomerate)
!     a3     = input atomic fraction aluminum in compound/mixture
!              atoms aluminum (al) /atoms conglomerate)
!     a4     = input atomic fraction lithium in compound/mixture
!              atoms lithium (li)/atoms conglomerate)
!     a5     = input atomic fraction cadmium in compound/mixture
!              atoms cadmium (cd)/atoms conglomerate)
!     afsoil = input atomic fraction soil in compound/mixture
!              (atoms soil/atoms conglomerate)
!     ux2    = input atomic fraction uranium dioxide in compound/
!              mixture (atoms uo2/atoms conglomerate)
!     zx2    = input atomic fraction zirconium dioxide in compound/
!              mixture (atoms zro2/atoms conglomerate)
!
!     zutemp = compound temperature (k)
!
!     the functions ccp, fcp, zocp, acp, scp, ucp, scop, siocp are
!     called by this function.
!     the subroutines alcp, licp, and cdcp are also called by this
!     subroutine.
!
!     zucp1 was coded by d. l. hagrman march 1982.
!     zucp1 was modifed by j. k. hohorst, january, 1987.
!     zucp1 was modified by s. w. james, may, 1989.
!
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
       include 'ufiles.h'
       real(kr) z,u,s,a1,a2,ux2,zx2,a3,a4,a5,afsoil,zutemp
!
!  Local variables.
       integer ier1,ier2,ier3
       real(kr) ca1,ca2,ca3,ca4,ca5,cs,cso2,cu,cuo2,czo2,czr,sx2
       real(kr) acp,ccp,ccpr,ca6,fcp,scp,siocp,socp,ucp,zocp,zucp1
!
       include 'contrl.h'
!
      sx2 = 1.-u-z-s-a1-a2-a3-a4-a5-afsoil-ux2-zx2
!
!     it is assumed that the remainder, sx2, is stainless steel oxide.
!
      if (sx2 .lt. -1.0e-6) then
         write (output,20) sx2
   20    format ('0zucp1 - sx2 =', e13.5)
         write (output,901) u,z,s,a1,a2,a3,a4,a5,afsoil,ux2,zx2
         stop 'zucp1'
      else
         if(sx2 .gt. 1.0) then
            write (output,903) u,z,s,a1,a2,a3,a4,a5,afsoil,ux2,zx2
            stop 'zucp1'
         endif
      endif
      cu = ucp(zutemp)
       if (chngno(70)) then
         czr = ccpr(zutemp)
       else
         czr = ccp(zutemp)
       endif
      cs = scp(zutemp)
      ca1 = acp(1,zutemp)
      ca2 = acp(2,zutemp)
      call alcp ( zutemp, ca3, ier1 )
      call licp ( zutemp, ca4, ier2 )
      call cdcp ( zutemp, ca5, ier3 )
!   Note. 2830.0 is solidus temperature for mixture of UO2 and ZrO2.
      if(zutemp.le.2830.0)then
      cuo2 = fcp(zutemp,0.0,2.0,0.95)
      else
!   Note. 2873.0 is liquidus temperature for mixture of UO2 and ZrO2.
        if(zutemp.lt.2873.0)then
!   Note. 6372.093 = heat of fusion divided by liquidus temperature
!                    minus solidus temperature.
        cuo2=6372.093
        else
!   Note. 503.0 = MATPRO value for heat capacity of liquefied UO2.
        cuo2=503.0
        end if
      end if
      czo2 = zocp(zutemp)
      cso2 = socp(zutemp)
      ca6  = siocp(zutemp)
!
      zucp1 = (cu*0.238*u + czr*0.091*z + cs*0.056*s + ca1*0.109*a1 +
     #       ca2*0.055*a2 + ca3*0.027*a3 + ca4*0.007*a4 + ca5*0.112*a5 +
     #       ca6*0.060*afsoil + cuo2*0.270*ux2 + czo2*0.123*zx2 +
     #       cso2*0.088*sx2) /
     #       (0.238*u + 0.091*z + 0.056*s + 0.109*a1 + 0.055*a2 +
     #       0.027*a3 + 0.007*a4 + 0.112*a5 + 0.060*afsoil + 0.270*ux2 +
     #       0.123*zx2 + 0.088*sx2)
!
  901 format(2x,'input fraction sum .gt. 1 u, z, s, a1, a2, a3, a4, a5,
     #afsoil, ux2, zx2 = '/1p,11e10.4)
  903 format(2x,'input fraction sum .lt. 0 u, z, s, a1, a2, a3, a4, a5,
     #afsoil, ux2, zx2 = '/1p,11e10.4)
      return
      end
*endif
