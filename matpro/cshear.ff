      function cshear (ctemp, fnck, cwkf, deloxy)
c
c     cshear calculates the shear modulus of zircaloy-2 and -4
c     as a function of temperature, fast neutron fluence,
c     cold work, and average oxygen concentration.  grain
c     orientation is assumed random.
c     the expected standard error is computed but not returned
c     (ucsher)
c
c     cshear = output shear modulus for zircaloy-2 and -4
c              with random texture (pa)
c     ucsher = output standard error expected in cshear (pa)
c                (not currently returned)
c     ctemp  = input cladding temperature (k)
c     fnck   = input effective fast fluence (neutrons/(m**2))
c     cwkf   = input effective cold work (unitless ratio of areas)
c     deloxy = input average oxygen concentration excluding
c              oxide layer - average oxygen concentration of
c              as-received cladding  (kg oxygen/kg zircaloy)
c
c     the shear modulus calculated by this function is based on
c     data from the following references
c
c     (1) l. r. bunnell, g. b. mellinger  and j. l. bates, high
c         temperature properties of zircaloy - oxygen alloys, epri
c         report np - 524 (1977)
c     (2) e. s. fisher and c. j. renken, physical review 135 2a
c         (20 july 1964) pp a482 - 494.
c     (3) p. e. armstrong and h. l. brown, transactions of the
c         metallurgical society of aime 230 (august 1964)
c         pp 962 - 966
c     (4) a. padel and a. groff, journal of nuclear materials 59
c         (1976) pp 325 - 326.
c     (5) w. r. smalley, saxton core ii fuel performance evaluation.
c         part i: materials, wcap-3385-56 (september 1971)
c
c     cshear was coded by r. l. miller, june 1974
c     modified by d. l. hagrman december 1977
c
$if def,in32,1
       implicit real*8(a-h,o-z)
c
      c1 = 7.07e+11 - ctemp * 2.315e+08
      c2 = 1.0
      if(fnck .gt. 1.0e+22) c2 = 0.88*(1.0 - exp(-fnck/1.0e+25))
     #                           + exp(-fnck/1.0e+25)
      c3 = -.867e+10
      cshear = (4.04e+10-2.168e+07*ctemp + c1*deloxy + c3*cwkf)/c2
      if(ctemp .lt. 1090. ) go to 101
c
c     calculate a to a + b and a + b to b boundaries
      wfox = deloxy + 0.0012
      taab = 1094. + wfox * (-1.289e+03 + wfox * 7.914e+05)
      if ( wfox .lt. 0.025) go to 15
      taab = 1556.4 + 3.8281e+04*(wfox - 0.025)
   15 tabb = 392.46 * ((100*deloxy + 0.1242807)**2 + 3.1417)
      if (deloxy .lt. 4.7308937e-03) go to 25
      tabb = (100*deloxy + 0.12) * 491.157 + 1081.7413
   25 continue
c
      if (ctemp .lt. taab) go to 101
      if (ctemp .gt. tabb) go to  35
      amodl  = (4.04e+10-2.168e+07*taab  + c1*deloxy + c3*cwkf)/c2
      amodr  = 3.49e+10 - tabb * 1.66e+07
      cshear = amodl + (ctemp - taab ) * (amodr - amodl )/(tabb - taab)
      go to 101
   35 cshear = 3.49e+10 - ctemp*1.66e+07
  101 continue
      if(cshear .lt. 1.0 ) cshear = 1.0
      ucsher = 9.0e+09
c
      return
      end
