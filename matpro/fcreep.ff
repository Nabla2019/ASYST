      function fcreep (ftemp,fstres,fdens,fgrn,fis,comp,fom,time,it,
     *                 tlast,pstres)
c
c      this function calculates the total creep for uo2 or (u,pu)02
c      fuel
c
c      ftemp  = input temperature of the fuel ring (k)
c      fstres = input stress (pa)
c      fdens  = input initial density of the fuel (kg/m**3)
c      fgrn   = input grain size (microns)
c      fis    = input fission rate ((fissions/m**3)/s)
c      comp   = input plutonia content (weight percent)
c      fom    = input fuel oxygen to metal ratio
c      time   = input time to end of time step (s)
c      tlast  = input time to end of last time step (s)
c      pstres = input stress on fuel during previous time step (pa)
c      l      = input fuel ring index (1 - 10)
c      it     = input time step number
c      fcreep = output strain rate ((m/m)/s)
c
c      fcreep was developed using the following data
c          burton and reynolds acta metallurgica 21 (1973)
c          seltzer  journal of nuclear materials 34 (1970)
c          perrin bmi - 1899 (1971)
c          poteat and yust  ornl-p-2371
c          wolfe and kaufman   wapd - tm - 587 (1967)
c          bohaboy et al  geap - 10054 (1969)
c
c       fcreep was developed and coded by c. s. olsen (november 1974).
c       fcreep was modified by r. e. mason (november 1978).
c
$if def,in32,1
       implicit real*8(a-h,o-z)
c
       strans = 16547416.8/(fgrn**0.5714)
       roth   = 11.45 * comp/100. + (1. - comp/100.) * 10.97
       d      = 0.1 * fdens / roth
       if (it .le. 1) xtime = 0.0
       if (comp .gt. 0.0) go to 50
       if (fom  .lt. 2.0) fom = 2.0
       xlfom  = -log10(fom - 1.99999)/2.5
       qu1    =  9000.0
       qu2    = 10000.0
       q1     = qu1 / (exp(8.0 * (1.0 - xlfom)/xlfom) + 1.0) + 36294.4
       q2     = qu2 / (exp(8.0 * (1.0 - xlfom)/xlfom) + 1.0) + 56431.8
c
       if (fstres .gt. pstres) xtime = tlast
       ttime  = time - xtime
       uprury = 2.5 * exp(-1.2e-06 * ttime) + 1.0
       eruf   = 3.72264e-35 * fis * fstres * exp(-2617.0/ftemp)
       if (comp .gt. 0.0) go to 50
c
c      low stress uo2 creep calculation
c
       if (fstres .gt. strans) go to 30
       ucrepl = (0.391924 + 1.31e-19 * fis) * fstres * exp(-q1/ftemp) /
     #             ((-87.7 + d) * fgrn * fgrn)
c
       fcreep = uprury * (ucrepl + eruf)
       go to 1000
   30  continue
c
c      high stress uo2 calculations
c
       ucrepl = (0.391924 + 1.31e-19 *  fis) * strans * exp(-q1/ftemp) /
     #             ((-87.7 + d) * fgrn * fgrn)
       ucreph = 2.0391 e-25 * (fstres ** 4.5) * exp(-q2/ftemp)/(-90.5+d)
c
       fcreep = uprury * (ucrepl + ucreph + eruf)
       go to 1000
c
   50  continue
c      calculation of mixed oxide creep
c
c      low stress (u,pu)o2 calculations
c
       if (fstres .gt. strans) go to 70
       pcrepl = (0.1007 + 7.57e-20 * fis) *  fstres/(fgrn * fgrn)  *
     #           exp(-50327.1/ftemp + 33.3*(1. - .01*d) + .014 * comp)
c
       fcreep = pcrepl
c
       go to 1000
   70  continue
c
c      high stress (u,pu)02 calculations
c
       pcreph = 6.4691e-25 * (fstres ** 4.5) * exp(-70458.0/ftemp  +
     #          10.3 * (1. - 0.01 * d) + 0.014 * comp)
       pcrepl = (0.1007 + 7.57e-20 * fis) *  strans / (fgrn * fgrn)  *
     #           exp(-50327.1/ftemp + 33.3*(1. - .01*d) + .014 * comp)
c
       fcreep = pcrepl + pcreph
c
c      the following calculations provide the upper and lower bounds
c      to the creep rate equations and are not an output of the
c      function fcreep unless the user desires to modify the
c      subcode appropriately.
c
c      ucreph is the upper bound
       ucreph = fcreep * 17.78
c      ucrepl is the lower bound
       ucrepl = fcreep * 0.0562
c
 1000  continue
       return
       end
