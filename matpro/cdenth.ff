       subroutine cdenth ( t, tref, h, ierr )
c
c  This routine calculates the enthalpy of cadmium as a function of
c  temperature.  It returns also the flag ierr that is set to 0
c  normally but to 1 if the input temperature lies outside the range
c  300 k to 4000 k.  Note that no matter what the input temperature
c  is, an enthalpy is still returned.  If t is outside the table range,
c  either the first or last tabular value of enthalpy will be returned.
c  Inputs to this are t and tref.  tref is the reference temperature
c  at which the enthalpy is calculated.  This is normally 298 k but
c  if the user wishes another reference temp that is fine.  Note that
c  if t .le. 298.0 or if t .lt. tref, then the returned value of h is
c  zero.
c
c  This was written in May, 1989, by S. W. James, a consultant to EG&G
c  Idaho.
c  Modified by J. K. Hohorst , October 1989.
c
c  Questions about this work may be referrred to the author at
c  (208) 522-5978 by phone...
c  or   3835 Georgia Lane
c           Idaho Falls, Id 83406 by mail.
c
       implicit none
c
c  Local variables.
       integer ierr,indx,npts
       real h,t,tref
       real pol8
       external pol8
       real tt(8), hh(8)
c
c       construct the following table so that the function
c       pol8 may be used to do the linear interpolation
c       for enthalpy as function of temperature.
c
c       this data is from page appendix b-5 of cronenberg's report
c       entitled "handbook of material melt properties",
c       report no. esa-scdap-101, april 1989. the units there
c       were cal/g for enthalpy and k for temperature. thus, here
c       where si units are required, the enthalpy table has been
c       multiplied by 4184.0 to give j/kg.
c       (start of table)
c
       save tt, hh, npts, indx
       data tt / 298., 400., 500., 594., 594.001, 600., 800., 1000. /
       data hh / 0., .2405e5, .4877e5, .7296e5, 1.2805e5, 1.2965e5,
     *           1.8251e5, 2.3537e5 /
       data npts / 8 /
       data indx / 1 /
c
c      (end of table:)
c      all units are s.i.
       if( t .lt. tt(1) .or. t .gt. tt(npts)) then
         ierr = 1
       else
         ierr = 0
       end if
       h = pol8 ( hh, tt,    t, npts, indx )
     *   - pol8 ( hh, tt, tref, npts, indx )
       return
       end
