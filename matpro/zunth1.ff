*if def,selap
       function zunth1(z,u,s,a1,a2,ux2,zx2,zutemp,a3,a4,a5,afsoil,
     & rftemp)
!  Calculates the change in enthalpy of zirconium-unranium
!  steel-control rod - oxygen compounds or mixtures or elemental
!  aluminum, lithium, or cadmium during a constant pressure change
!  in temperature.
!
!     zunth1  = output change in enthalpy (j/kg)
!     z       = input atom fraction zirconium metal in
!               compound/mixture (atoms zirconium/atoms conglomerate)
!     u       = input atom fraction uranium metal in compound/mixture
!               (atoms uranium/atoms conglomerate)
!     s       = input atom fraction stainless steel in
!               compound/mixture (atoms steel/atoms conglomerate)
!     a1      = input atom fraction silver-indium-cadmium in
!               compound/mixture (atoms ag-in-cd/atoms conglomerate)
!     a2      = input atom fraction boron carbide in compound/mixture
!               (atoms boron carbide (b4c)/atoms conglomerate)
!     a3      = input atomic fraction aluminum in compound/mixture
!               atoms aluminum (al) /atoms conglomerate)
!     a4      = input atomic fraction lithium in compound/mixture
!               atoms lithium (li)/atoms conglomerate)
!     a5      = input atomic fraction cadmium in compound/mixture
!               atoms cadmium (cd)/atoms conglomerate)
!     afsoil  = input atomic fraction soil in compound/mixture
!               atoms soil/atoms conglomerate
!     ux2     = input atom fraction uranium dioxide in
!               compound mixture (atoms uo2/atoms conglomerate)
!     zx2     = input atom fraction zirconium dioxide in
!               compund/mixture (atoms zro2/atoms conglomerate)
!     zutemp  = compund/mixture temperature (k)
!     rftemp  = reference temperature (k)
!
!     the subcodes uenthl, centhl, senthl, aenthl, fenthl,
!     zonthl, sonthl, alenth, lienth, cdenth, and sioeth are called
!     by this function
!
!     zunth1 was coded by j. k. hohorst, january, 1986
!
!     deck name and function name changed from zunthl to zunth1
!     to avoid conflict with the different zunthl in selap.
!     g. a. jayne    nov, 1986.
!
!     extended to include elemental aluminum, lithium, and cadmium by
!     s. w. james in may, 1989.
!
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       include 'contrl.h'
       include "ufiles.h"
!
       real(kr) z,u,s,a1,a2,ux2,zx2,zutemp,a3,a4,a5,afsoil,rftemp
       real(kr) zunth1
!
!  Local variables.
       integer ier1,ier2,ier3
       real(kr) ha1,ha2,ha3,ha4,ha5,hs,hsx2,hu,hux2,hux2r,hzr,hzx2,sx2
       real(kr) zutmp1
       real(kr) hsoil
       real(kr) fhefus
       real(kr) aenthl,centhl,centhlr,senthl,sioeth,sonthl,
     & uenthl,zonthl
       real fenthl
       real gaddum
!     fhefus = output uo2 heat of fusion (j/kg)
!     Value for fhefus is from that value assigned it in subroutine
!     qfuson.
       data fhefus / 2.74e+05/
!      calculate heat of fusions
!*     write(output,9003)ux2,zx2,fhefus,zutemp,rftemp
!*9003   format(' in ZUNTH1 at start, ux2=',e10.4,' zx2=',e10.4,
!*   # ' fhefus=',e10.4,' zutemp=',e10.4,' rftemp=',e10.4)
!
!     it is assumed that what is left, sx2, is stainless steel oxide.
!
      gaddum = 0.0
      sx2 = 1.0 -u -z -s -a1 -a2 -a3 -a4 -a5 -afsoil -ux2 -zx2
      if (sx2 .lt. -1.0e-6) then
         write (output,20) sx2
   20    format ('0zunth1 - sx2 =', e13.5)
         write (output,901) u,z,s,a1,a2,a3,a4,a5,afsoil,ux2,zx2
!        zzzz=0.0
!        zabc=1.0/zzzz
         stop 'zunth1'
      else
         if(sx2 .gt. 1.0) then
            write (output,903) u,z,s,a1,a2,a3,a4,a5,afsoil,ux2,zx2
!           zzzz=0.0
!           zabc=1.0/zzzz
            stop 'zunth1'
         endif
      endif
      hu = uenthl(zutemp,rftemp)
      if (chngno(70)) then
        hzr = centhlr(zutemp,rftemp)
      else
        hzr = centhl(zutemp,rftemp)
      endif
      hs = senthl(zutemp,rftemp)
      ha1 = aenthl(1,zutemp,rftemp)
      ha2 = aenthl(2,zutemp,rftemp)
!     in calculating ha3, ha4, and ha5 use a reference temp of 298 k.
       call alenth(zutemp, rftemp, ha3, ier1)
       call lienth(zutemp, rftemp, ha4, ier2)
       call cdenth(zutemp, rftemp, ha5, ier3)
!     for soil (silicon dioxide)
      hsoil = sioeth(zutemp,rftemp)
!     Assume steady state temperature, so pass to fenthl a fraction of
!     molten fuel of 1.0, which is not used except for case of temperatu
!     greater than melting temperature.
      hux2r = fenthl(rftemp,0.0,2.0,3113.,0.0,fhefus,gaddum)
      zutmp1=zutemp
      if(zutmp1.gt.2830.0)zutmp1=2830.0
      hux2  = fenthl(zutmp1,0.0,2.0,3113.,0.0,fhefus,gaddum)
      if(zutemp.gt.2830.0)then
!    add on energy in heat of fusion and superheat.
        if(zutemp.lt.2873.0)then
!   Note. 4.74e+5 = 2.74e+5 (heat of fusion of UO2)
!         43.0 = difference between solidus and liquidus temperature
!                for mixture of UO2 and ZrO2.
        hux2=hux2+((zutemp-2830.0)/43.)*2.74e+5
        else
!    Note. 503.0 = MATPRO heat capacity for liquid UO2.
        hux2=hux2+2.74e+5+(zutemp-2873.0)*503.0
        end if
      end if
      hux2 = hux2 - hux2r
      hzx2 = zonthl(zutemp,rftemp)
!**   write(output,9005)hux2r,hux2,hzx2
!*9005  format(' in ZUNTH1, hux2r=',e10.4,' hux2=',e10.4,' hzx2=',e10.4)
      hsx2 = sonthl(zutemp,rftemp)
      zunth1 = (hu*0.238*u + hzr*0.091*z + hs*0.056*s +
     +         ha1*0.109*a1 + ha2*0.055*a2 + ha3*0.027*a3 +
     +         ha4*0.007*a4 + ha5*0.112*a5 + hux2*0.270*ux2 +
     +         hsoil*0.060*afsoil + hzx2*0.123*zx2 + hsx2*0.088*sx2) /
     +         (0.238*u + 0.091*z + 0.056*s + 0.109*a1 + 0.055*a2 +
     +         0.027*a3 + 0.007*a4 + 0.112*a5 + 0.060*afsoil +
     +         0.270*ux2 + 0.123*zx2 + 0.088*sx2)
!
  901 format(2x,'input fraction sum .gt. 1. z, u, s, a1, a2, a3, a4, a5,
     + afsoil, ux2, zx2 = '/11e10.4)
  903 format(2x,'input fraction sum .lt. 0. z, u, s, a1, a2, a3, a4, a5,
     + afsoil, ux2, zx2 = '/11e10.4)
      return
      end
*endif
