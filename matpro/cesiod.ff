       subroutine cesiod (time  ,ftmax ,delbu ,dtime ,ftemp ,fraden,
     # cs    ,roid)
c
$if def,in32,1
       implicit real*8(a-h,o-z)
c
      dimension roid(8),cs(5)
c
c     cesiod calculates the amounts of cesium and iodine isotopes
c     available to the fuel rod gap.
c
c     roid(1) = output net specific release of iodine
c               (kg iodine /kg fuel)
c     roid(2) = output net specific release of iodine 127
c               (kg iodine 127/kg fuel) stable
c     roid(3) = output net specific release of iodine 129
c               (kg iodine 129/kg fuel) half life 1.72e07 years
c     roid(4) = output net specific release of iodine 131
c               (kg iodine 131/kg fuel) half life 8.05 days
c     roid(5) = output net specific release of iodine 132
c               (kg iodine 132/kg fuel) half life 2.3 hours
c     roid(6) = output net specific release of iodine 133
c               (kg iodine 133/kg fuel) half life 21 hours
c     roid(7) = output net specific release of iodine 134
c               (kg iodine 134/kg fuel) half life 52 minutes
c     roid(8) = output net specific release of iodine 135
c               (kg iodine 135/kg fuel) half life 6.7 hours
c     cs(1)   = output net specific release of cesium
c               (kg cesium/kg fuel)
c     cs(2)   = output net specific release of cesium 133
c               (kg cesium 133/kg fuel) stable
c     cs(3)   = output net specific release of cesium 135
c               (kg cesium 135/kg fuel) half life 2.9e06 years
c     cs(4)   = output net specific release of cesium 137
c               (kg cesium 137/kg fuel) half life 33 years
c     cs(5)   = output net specific release of cesium 138
c               (kg cesium 138/kg fuel) half life 32.2 minutes
c     ftmax   = output maximum temperature attained by the meshpoint
c               during operation to the end of the burnup step
c               considered (k)
c     time    = input time at operating temperature at end of step (s)
c     ftmax   = input maximum temperature attained by the meshpoint
c               during operation prior to burnup step considered (k)
c     delbu   = input burnup during the step considered (mw-s/kg metal)
c     dtime   = input duration of the burnup step considered (s)
c     ftemp   = input fuel meshpoint temperature (k)
c     fraden  = input fractional fuel density (ratio of actual
c               density to theoretical density)
c
c     the equations used in this subroutine are based on data from
c     (1) j.    belle   uranium dioxide. properties and nuclear
c                       applications (july 1961)
c     (2) s.    katcoff nucleonics 16 (april 1958) pp 78-85
c     (3) s.    katcoff nucleonics 18 (nov 1960) pp 201-208
c     (4) b. f. rider,  a survey and evaluation of thermal fission
c                       yields for u-235, pu-239, u-233, and pu-241
c                       geap-5356 (sept 1967)
c
c     this model is for lwr reactors only
c
c     cesiod was coded by d. l. hagrman january 1977
c     modified by d. l. hagrman to remove phypro common block
c          (cdr-mp-21) may 1982
c
      data yuid2 / 9.50e-12/, yuid3 / 5.94e-11/,  yuid4 / 3.10e-02 /
      data yuid5 / 4.30e-02/, yuid6 / 6.90e-02/,  yuid7 / 7.90e-02 /
      data yuid8 / 6.10e-02/
      data yucs2 / 5.04e-10/, yucs3 / 4.98e-10/,  yucs4 / 4.85e-10 /
      data yucs5 / 6.60e-02/
      data almdi4/ 9.97e-07/, almdi5/ 9.17e-06/,  almdi6/ 8.37e-05 /
      data almdi7/ 2.22e-04/, almdi8/ 2.87e-05/,  almdc5/ 3.59e-04 /
c
c     expressions to replace phypro common block
      bu = 0.0
      ftmelt = 3113.
c
c     units conversion
      b    = bu * 0.88
      fisr = delbu * 0.88/(1.732e10* dtime)
c
      if(ftemp .gt. ftmax) ftmax = ftemp
c
c     find diffusion radius and diffusion constants
      a = 3.0 * fraden * (10.0**(20.61 - fraden*(67.90-46.0*fraden)))
      dmax = 6.6e-06/ exp(3.6086e04/ftmax)
      dnow = 6.6e-06/ exp(3.6086e04/ftemp)
      if(ftmax .le. 1134.054) dmax = 1.0e-19
      if(ftemp .le. 1134.054) dnow = 1.0e-19
c     find escape rate coefficients
      anui4 = 3.0 *((dnow * almdi4)**0.5)/a
      anui5 = 3.0 *((dnow * almdi5)**0.5)/a
      anui6 = 3.0 *((dnow * almdi6)**0.5)/a
      anui7 = 3.0 *((dnow * almdi7)**0.5)/a
      anui8 = 3.0 *((dnow * almdi8)**0.5)/a
      anuc5 = 3.0 *((dnow * almdc5)**0.5)/a
c     find specific release for long lived isotopes
c     check for fuel melt
      if (ftmax .lt. ftmelt) go to 20
   21 roid(2) = yuid2 * b
      roid(3) = yuid3 * b
      cs(2)   = yucs2 * b
      cs(3)   = yucs3 * b
      cs(4)   = yucs4 * b
      go to 25
c     specific releases without melt follow
c     check to see if release fraction is greater than one
   20 f = 2.257 * ((dmax * time)**0.5) / a - 1.5 * dmax * time/(a**2)
      if (f .gt. 1.0) go to 21
      roid(2) = yuid2 * b * f
      roid(3) = yuid3 * b * f
      cs(2)   = yucs2 * b * f
      cs(3)   = yucs3 * b * f
      cs(4)   = yucs4 * b * f
c     find specific releases for short lived isotopes
   25 roid(4) = fisr * 131 * yuid4 * anui4 /((anui4 + almdi4)* almdi4)
      roid(5) = fisr * 132 * yuid5 * anui5 /((anui5 + almdi5)* almdi5)
      roid(6) = fisr * 133 * yuid6 * anui6 /((anui6 + almdi6)* almdi6)
      roid(7) = fisr * 134 * yuid7 * anui7 /((anui7 + almdi7)* almdi7)
      roid(8) = fisr * 135 * yuid8 * anui8 /((anui8 + almdi8)* almdi8)
      cs(5)   = fisr * 138 * yucs5 * anuc5 /((anuc5 + almdc5)* almdc5)
c     calculate sums
      roid(1) = roid(2) + roid(3) + roid(4) + roid(5) + roid(6)
     #          + roid(7) + roid(8)
      cs(1)   = cs(2) + cs(3) + cs(4) + cs(5)
      return
      end
