       program tsth2x
c  Program to test low pressure calls to sth2xt.
c  Uses astem routines -- ANCR-1026 and sth2x6 subroutine.
*in32 ia
*in32end
       implicit none
       common /fast/ a(20000)
       real a
       integer ia(1)
       equivalence (a(1),ia(1))
*call efiless
       integer sth2xt
c
       common /contrl/ stindx
       integer stindx
       common /sth2xc/ nt,np,ns,ns2
       integer nt,np,ns,ns2
c
       integer i,ip,j,lcontg,m,n
       real p0(2),s0(10),tol,tol2
       real ttrip,tcrit,ptrip,pcrit,s(26)
       logical ierr
       external ftbint,ftbrsv,ftbsft,lcontg
       integer is
c
       data sth2xt/10/
       data ttrip/273.16/,tcrit/647.3/,ptrip/611.2445/,pcrit/2.212e7/,
     * tol/0.00001/,tol2/0.1/
       data p0/100.0,50.0/
       data s0/2.5e6,2.45e6,2.4e6,2.375554e6,2.35e6,2.34e6,2.32e6,
     * 2.30e6,2.20e6,2.10e6/
*call efilesd
c
       is = 0
       open (unit=output,file='outdta',status='new',form='formatted',
     * iostat=is)
       if (is .ne. 0) then
         write (tty,3001) is
 3001  format ('Open error number',i8,' on file outdta, perhaps file alr
     *eady exists.')
         stop 'output'
       endif
       open (unit=sth2xt,file='sth2xt',status='old',form='unformatted')
       write (6,2000)
 2000  format ('1Program to test low pressure calls to sth2xt')
       call ftbint (2)
       i = lcontg(1)
       call ftbrsv (1.0,i,-1,stindx)
       j = i
       call sth2xj (a(stindx),sth2xt,j)
       if (j .le. 0) stop 'sth2xt'
       write (6,3050) j,nt,np
 3050  format ('0Length of water property table is ',i6,'.'/
     * ' Number of temperatures is ',i4,', number of pressures is',i4,
     * '.')
c
       do 241 n = 1,2
         do 240 m = 1,10
           do 201 i = 1,26
             s(i) = 0.0
  201      continue
           s(2) = p0(n)
           s(4) = s0(m)
           call sth2x6 (a(stindx),s,ip,ierr)
           write (6,202) ip,ierr,(s(i),i=1,14)
  202  format ('0',i2,l5,1p/(4e20.10))
  240    continue
  241  continue
       stop
       end
       subroutine ftbmem (lscm,llcm)
$if def,in32,1
       implicit real*8 (a-h,o-z)
       common /fast/ a(20000)
       if (lscm .eq. 0) lscm = 30000 + locf(a(1))
       return
       end
