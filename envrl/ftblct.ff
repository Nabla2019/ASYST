       subroutine ftblct (unit,siz,is)
c
c  This subroutine returns the address of a block of contiguous space
c  of size siz on the unit.
c
c  Cognizant engineer: rjw
c
*call ftbcom
c
       integer unit,siz,is
       logical sw,set
c
$if -def,in32,1
       parameter (msk=1073741823)
c
       sw = .true.
       is = siz
       if (is .eq. 0) then
         if (size(unit) .eq. 0) return
         kstr = minz(unit)
         kend = maxz(unit)
         mns = kend - kstr
         is = 1
         sw = .false.
         set = .true.
       endif
       if (.not.hilo) then
         iend = maxz(unit)
         istr = iend - is
       else
         istr = minz(unit)
         iend = istr + is
       endif
   12  j = nolink
       i = lasdes
       k = nofils
       if (k .eq. 0) go to 100
$if -def,in32,3
   20  if (unit .ne. iand(ia(i+2),msk)) go to 21
       jstr = ishft(ia(i+3),-30)
       jend = jstr + iand(ia(i+3),msk)
$if def,in32,3
   20  if (unit .ne. ia(2,i+2)) go to 21
       jstr = ia(1,i+3)
       jend = jstr + ia(2,i+3)
   22  if (sw) then
         if (jstr .eq. minz(unit)) minz(unit) = jend
         if (jend .eq. maxz(unit)) maxz(unit) = jstr
       endif
       if (jstr.lt.istr) go to 23
       if (jstr.lt.iend) go to 150
   23  if (jend.le.istr) go to 40
       if (jend.le.iend) go to 150
       go to 40
$if -def,in32,2
   21  if (unit.ne.1 .or. iand(ia(i+2),msk).eq.2) go to 41
       jstr = ishft(ia(i+2),-30)
$if def,in32,2
   21  if (unit.ne.1 .or. ia(2,i+2).eq.2) go to 41
       jstr = ia(1,i+2)
       if (jstr .eq. 0) go to 41
$if -def,in32,1
       jend = jstr + iand(ia(jstr+1),msk)
$if def,in32,1
       jend = jstr + ia(2,jstr+1)
       go to 22
   40  if (sw) go to 41
       nstr = iend - jend
       if (nstr.le.0) go to 41
       if (nstr.ge.mns) go to 41
       mns = nstr
       kstr = jstr
       kend = jend
       set = .false.
   41  k = k - 1
       if (k .eq. 0) go to 60
       i = i - 4
       go to 20
   60  j = j - 1
       if (j .eq. 0) go to 65
       k = 50
$if -def,in32,1
       i = ishft(ia(i+197),-30) + 4
$if def,in32,1
       i = ia(1,i+197) + 4
       go to 20
   65  if (sw) go to 25
       is = mns
       if (set) return
       jstr = kstr
       jend = kend
  154  mns = jstr - minz(unit)
       set = .true.
       go to 157
   25  size(unit) = size(unit) - is
       is = istr
       if (is .ne. minz(unit)) go to 26
       minz(unit) = iend
       go to 27
   26  if (iend .eq. maxz(unit)) maxz(unit) = is
   27  if (.not.dly) return
       dly = .false.
       do i = 1,5
         call ftbchk (i)
       enddo
       return
  100  i = nexdes
       go to 60
  150  if (.not.sw) go to 154
       if (hilo) go to 151
  157  iend = jstr
       istr = iend - is
       if (istr .ge. minz(unit)) go to 12
       go to 152
  151  istr = jend
       iend = istr + is
       if (iend .le. maxz(unit)) go to 12
  152  if (sw) call ftberr (47)
       return
       end
