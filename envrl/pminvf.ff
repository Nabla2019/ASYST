       subroutine pminvf (a,irn,ip,n,np,agro)
       use pminve
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
       integer n,np
       real(kr) a(:),agro
       integer irn(:),ip(:,:)
       include 'efiless.h'
c
       real(kr) :: amult,arnd=1.0e-12,g
       integer i,ia0,iag,is,j,j1,jnd,jst,jpiv,k,k1,kentry,kerr,knd,
     & kro,kseq,kst,l1
       include 'efilesd.h'
c  On entry, the arrays are as set up by ma18ad, except that a contains
c  the elements of a new matrix in unfactorised form. On exit, the
c  contents of a have been replaced by the l/u decomposition of this
c  new matrix, exactly as on exit from ma18ad.
c  The argument agro is set to the growth estimate as for ma18ad.
c
      ip(n+1,3)=0
      kerr=1
      agro=-1.0
      kentry=3
c  Test validity of entry.
      if(ip(n+1,2).eq.0)go to 2205
      if(ip(n+1,2).ne.n+1)go to 2207
  892 iag=0
c  Operate on columns in sequence.
      do 56 j=1,n
      jst=ip(ip(j,2),1)
      jnd=ip(ip(j+1,2),1) -1
c     find approx log of max element in column
      ia0=0
       do j1=jst,jnd
         ia0 = max(ia0,exponent(a(j1)) - 1 + ip(irn(j1),3))
       enddo
c  Scan through column, eliminating with elements of u and
c  branching when pivot found.
      assign 581 to jpiv
      do 58 j1=jst,jnd
      go to jpiv,(581,582)
  581 kseq=ip(irn(j1),5)
c     branch on pivot
      if(kseq.eq.j)     go to 59
c     element of u - get old pivotal column
      kst=ip(ip(kseq,2),1)
      knd=ip(ip(kseq+1,2),1)-1
      amult=a(j1)
      l1=j1+1
c  Scan down columns keeping in step.
      do 60 k1=kst,knd
      kro=irn(k1)
c     skip irrelevant elements
      if(ip(kro,5).le.kseq)go to 60
   62 if(kro.eq.irn(l1))go to 63
      l1=l1+1
      go to 62
c     elimination step
   63 a(l1)=a(l1)-amult*a(k1)
c     update log of growth estimate
       iag = max(iag,exponent(a(l1)) - 1 + ip(irn(l1),3) - ia0)
      l1=l1+1
   60 continue
      go to 58
c  Test for zero pivot.
   59 if(a(j1).eq.0.0)go to 1011
      amult=a(j1)
      assign 582 to jpiv
      go to 58
c     divide elements of l by pivot
$if def,cray,5
 582  if (a(j1) .ne. amult) go to 7700
      a(j1) = 1.0
      go to 7750
 7700 a(j1) = a(j1)/amult
 7750  continue
$if -def,cray,1
  582  a(j1) = a(j1)/amult
   58  continue
   56  continue
c  set growth estimate.
       agro = arnd*scale(real(radix(arnd),8),iag - 1)
       return
c  diagnostic printing.
 2205  write (output,2305) aname(kentry),aname(kerr)
 2305  format ('0******** Error return from ',a,' because previous entry
     & to ',a,' gave error return.')
       return
 2207  write (output,2307) aname(kentry),aname(1)
 2307  format ('0******** Error return from ',a,' because no previous en
     &try to ',a)
       return
 1011  write (output,2309) aname(3),irn(j1),ip(j,2)
 2309  format ('0$$$$$$$$ Error return from ',a,' because zero pivot (',
     & 2i4,')',' recovery being attempted.')
       ip(n+1,3) = 1
       return
 2208  write (output,2308) aname(3),aname(5),is
 2308  format ('0******** Error return from ',a,' because',a,' has given
     & error return with is =',i4,'.')
       return
       end
