       subroutine ftbtnc (id)
c
c  This subroutine truncates and closes the process file with file
c  identification id.
c
c  Cognizant engineer: rjw
c
*call ftbcom
$if -def,in32,2
       parameter (msk=1073741823,msk20=1048575)
       real id
$if def,in32,2
       parameter (msk=65535)
       real*8 id
       integer unit
c
       if (id .eq. 0.0) call ftberr (19)
       call idfind (id,i1)
       if (i1 .eq. 0) call ftberr (11)
$if -def,in32,1
       i = ishft(ia(i1+2),-30)
$if def,in32,1
       i = ia(1,i1+2)
       if (i .eq. 0) call ftberr (12)
$if -def,in32,2
       ia(i1+2) = iand(ia(i1+2),msk)
       ia10x = ishft(ia(i),-30)
$if def,in32,2
       ia(1,i1+2) = 0
       ia10x = ia(1,i)
       if (ia10x .ge. 3) call ftberr (5)
$if -def,in32,1
       unit = ia(i1+2)
$if def,in32,1
       unit = ia(2,i1+2)
       n = unit - 2
       if (n.gt.0 .and. n.le.4) dpn(n) = .false.
$if -def,in32,3
       ia20x = iand(ia(i),msk)
       ia23 = iand(ia(i1+3),msk)
       ia13 = ishft(ia(i1+3),-30)
$if def,in32,3
       ia20x = ia(2,i)
       ia23 = ia(2,i1+3)
       ia13 = ia(1,i1+3)
       if (ia10x .eq. 1) go to 10
       if (ia20x .eq. 0) call ftberr (13)
       if (n .gt. 0) go to 11
$if -def,in32,2
       ia11 = ishft(ia(i1+1),-30)
       j = (iand(ia(i1+1),msk)-ia20x)*ia11
$if def,in32,2
       ia11 = ia(1,i1+1)
       j = (ia(2,i1+1) - ia20x)*ia11
       ia22x = ia23 - j
$if -def,in32,1
       ia(i1+3) = ior(iand(ia(i1+3),not(msk)),ia22x)
$if def,in32,1
       ia(2,i1+3) = ia22x
       if (n .eq. 0) go to 18
   12  size(unit) = size(unit) + j
       if (unit.eq.1) dlt = .true.
       j = ia13 + ia23
       if (ia13 .lt. maxz(unit)) go to 13
       maxz(unit) = j
       go to 14
   13  j = ia13 + ia22x
       if (j .lt. minz(unit)) minz(unit) = j
$if -def,in32,1
   14  ia(i1+1) = ior(iand(ia(i1+1),not(msk)),ia20x)
$if def,in32,1
   14  ia(2,i1+1) = ia20x
       return
$if def,lcm,3
   18  k = iand(ia(i+1),msk)
       call writec (a(i+2),b(k),ia11)
       go to 15
$if -def,lcm,1
   18  call fabend
   11  k = i + 3
$if -def,in32,2
        ia12x = iand(ishft(ia(i+2),-20),msk20)
        ia22x = iand(ia(i+2),msk20)
$if def,in32,2
        ia12x = iand(ishft(ia(2,i+2),-16),msk)
        ia22x = iand(ia(2,i+2),msk)
        if (iand(ia22x,1) .eq. 0) k = k + ia12x
       a(k) = a(i1)
$if -def,in32,1
       ia(k+1) = iand(ia(i+2),msk)
$if def,in32,2
       ia(1,k+1) = 0
       ia(2,k+1) = ia(2,i+2)
        j = ia22x*ia12x + ia13 - 1
$if -def,in32,1
       ia(i1+3) = ior(iand(ia(i1+3),not(msk)),j)
$if def,in32,1
       ia(2,i1+3) = j
        ia11 = j + 1 - ia12x
       call ftbout (n, a(k), ia12x, ia11)
       dly = .true.
$if -def,in32,1
   15  k = iand(ia(i+1),msk)
$if def,in32,1
   15  k = ia(2,i+1)
       size(1) = size(1) + k
       dlt = .true.
       if (i .ge. minz(1)) go to 16
       minz(1) = i
       go to 17
   16  if (i .ge. maxz(1)) maxz(1) = i + k
   17  if (ia10x .eq. 1) return
       go to 12
   10  if (n .gt. 0) go to 15
       return
       end
