       program tsplnx
c  Program to test spline subroutines.
c
       implicit none
c
       integer i,ij,j,nx,ny
       real af0(21),af00(21,10),af01(21,10),af1(21),af10(21,10),
     * af11(21,10),ans(0:2),ans2(0:2,0:2),c(21),del,f0(21),
     * f00(21,10),f01(21,10),f1(21),f10(21,10),f11(21,10),
     * tans(0:2),tans2(0:2,0:2),x(21),xin,y(10),yin
       logical wrong
       parameter (ij=21,nx=21,ny=10)
       external spln11,spln12,spln21,spln22
c
       write (6,1000)
 1000  format ('1Test splnxx subroutines')
c  Generate data and spline using x array.
       del = 1.0
       x(1) = 0.0
       do 10 i = 2,nx
         x(i) = x(i-1) + del
         del = del + 1.0
   10  continue
       do 11 i = 1,nx
         af1(i) = x(i)*x(i)
         af0(i) = af1(i)*x(i)
         f0(i) = af0(i)
         af1(i) = 3.0*af1(i)
   11  continue
       f1(1) = af1(1)
       f1(nx) = af1(nx)
       call spln11 (nx,x,f0,f1,1,c)
       write (6,1001)
 1001  format ('0One dimensional spline results')
       write (6,1002) (i,x(i),af0(i),f0(i),af1(i),f1(i),i=1,nx)
 1002  format ('    i  x(i)',8x,'af0(i)',6x,'f0(i)',7x,'af1(i)',6x,
     * 'f1(i)'/(i5,1p,5e12.4))
c  Test spline.
       write (6,1003)
 1003  format ('0Test results'/7x,'xin',9x,'tans(0)',5x,'ans(0)',
     * 6x,'tans(1)',5x,'ans(1)',6x,'tans(2)',5x,'ans(2)')
       del = 1.0
       xin = 9.0
       do 12 i = 1,10
         call spln12 (nx,x,f0,f1,1,xin,ans)
         tans(2) = 6.0*xin
         tans(1) = xin*xin
         tans(0) = tans(1)*xin
         tans(1) = 3.0*tans(1)
         if (tans(0) .eq. 0.0) then
           wrong = abs(tans(0) - ans(0)) .gt. 0.001
         else
           wrong = abs((tans(0) - ans(0))/tans(0)) .gt. 0.001
         endif
         if (tans(1) .eq. 0.0) then
           wrong = wrong .or. abs(tans(1) - ans(1)) .gt. 0.001
         else
           wrong = wrong .or. abs((tans(1) - ans(1))/tans(1)) .gt.
     *     0.001
         endif
         if (tans(2) .eq. 0.0) then
           wrong = wrong .or. abs(tans(2) - ans(2)) .gt. 0.001
         else
           wrong = wrong .or. abs((tans(2) - ans(2))/tans(2)) .gt.
     *     0.001
         endif
         if (wrong) write (6,1010)
 1010  format (' ******** Conditions below are incorrect.')
         write (6,1004) xin,tans(0),ans(0),tans(1),ans(1),tans(2),
     *   tans(2)
         xin = xin + del
 1004  format (5x,1p,7e12.4)
   12  continue
c  Generate data and spline using y array.
       del = 5.0
       y(1) = 1.0
       do 20 i = 2,ny
         y(i) = y(i-1) + del
         del = del + 1.0
   20  continue
       do 21 i = 1,ny
         af1(i) = y(i)*y(i)
         af0(i) = af1(i)*y(i)
         f0(i) = af0(i)
         af1(i) = 3.0*af1(i)
   21  continue
       f1(1) = af1(1)
       f1(ny) = af1(ny)
       call spln11 (ny,y,f0,f1,1,c)
       write (6,1001)
       write (6,2002) (i,y(i),af0(i),f0(i),af1(i),f1(i),i=1,ny)
 2002  format ('    i  y(i)',8x,'af0(i)',6x,'f0(i)',7x,'af1(i)',6x,
     * 'f1(i)'/(i5,1p,5e12.4))
c  Test spline.
       write (6,1003)
       del = 1.0
       yin = 15.0
       do 22 i = 1,10
         call spln12 (ny,y,f0,f1,1,yin,ans)
         tans(2) = 6.0*yin
         tans(1) = yin*yin
         tans(0) = tans(1)*yin
         tans(1) = 3.0*tans(1)
         if (tans(0) .eq. 0.0) then
           wrong = abs(tans(0) - ans(0)) .gt. 0.001
         else
           wrong = abs((tans(0) - ans(0))/tans(0)) .gt. 0.001
         endif
         if (tans(1) .eq. 0.0) then
           wrong = wrong .or. abs(tans(1) - ans(1)) .gt. 0.001
         else
           wrong = wrong .or. abs((tans(1) - ans(1))/tans(1)) .gt.
     *     0.001
         endif
         if (tans(2) .eq. 0.0) then
           wrong = wrong .or. abs(tans(2) - ans(2)) .gt. 0.001
         else
           wrong = wrong .or. abs((tans(2) - ans(2))/tans(2)) .gt.
     *     0.001
         endif
         if (wrong) write (6,1010)
         write (6,1004) yin,tans(0),ans(0),tans(1),ans(1),tans(2),
     *   ans(2)
         yin = yin + del
   22  continue
c  Generate two dimensional data.
       do 30 i = 1,nx
         do 31 j = 1,ny
           af00(i,j) = x(i)**3*y(j)**3
           f00(i,j) = af00(i,j)
           af10(i,j) = 3.0*x(i)**2*y(j)**3
           af01(i,j) = 3.0*x(i)**3*y(j)**2
           af11(i,j) = 9.0*x(i)**2*y(j)**2
   31    continue
   30  continue
       do 32 j = 1,ny
         f10(1,j) = af10(1,j)
         f10(nx,j) = af10(nx,j)
   32  continue
       do 33 i = 1,nx
         f01(i,1) = af01(i,1)
         f01(i,ny) = af01(i,ny)
   33  continue
       f11(1,1) = af11(1,1)
       f11(nx,1) = af11(nx,1)
       f11(1,ny) = af11(1,ny)
       f11(nx,ny) = af11(nx,ny)
       call spln21 (nx,x,ny,y,f00,f10,f01,f11,ij,c)
       write (6,3001)
 3001  format ('0Two dimensional spline results'/'    i    j  x(i)',8x,
     * 'y(j)',8x,'af00(i,j)',3x,'f00(i,j)',4x,'af10(i,j)',3x,'f10(i,j)',
     * 4x,'af01(i,j)',3x,'f01(i,j)')
       write (6,3002) ((i,j,x(i),y(j),af00(i,j),f00(i,j),af10(i,j),
     * f10(i,j),af01(i,j),f01(i,j),j=1,ny),i=1,nx)
 3002  format (2i5,1p,8e12.4)
c  Test two dimensional spline.
       xin = 9.0
       del = 1.0
       do 35 i = 1,4
         yin = 15.0
         do 36 j = 1,3
           call spln22 (nx,x,ny,y,f00,f10,f01,f11,ij,xin,yin,ans2)
           tans2(0,0) = xin**3*yin**3
           tans2(1,0) = 3.0*xin**2*yin**3
           tans2(2,0) = 6.0*xin*yin**3
           tans2(0,1) = 3.0*xin**3*yin**2
           tans2(1,1) = 9.0*xin**2*yin**2
           tans2(2,1) = 18.0*xin*yin**2
           tans2(0,2) = 6.0*xin**3*yin
           tans2(1,2) = 18.0*xin**2*yin
           tans2(2,2) = 36*xin*yin
           if (tans2(0,0) .eq. 0.0) then
             wrong = abs(tans2(0,0) - ans2(0,0)) .gt. 0.001
           else
             wrong = abs((tans2(0,0) - ans2(0,0))/tans2(0,0)) .gt. 0.001
           endif
           if (tans2(1,0) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(1,0) - ans2(1,0)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(1,0) - ans2(1,0))/tans2(1,0))
     *       .gt. 0.001
           endif
           if (tans2(2,0) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(2,0) - ans2(2,0)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(2,0) - ans2(2,0))/tans2(2,0))
     *       .gt. 0.001
           endif
           if (tans2(0,1) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(0,1) - ans2(0,1)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(0,1) - ans2(0,1))/tans2(0,1))
     *       .gt. 0.001
           endif
           if (tans2(1,1) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(1,1) - ans2(1,1)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(1,1) - ans2(1,1))/tans2(1,1))
     *       .gt. 0.001
           endif
           if (tans2(2,1) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(2,1) - ans2(2,1)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(2,1) - ans2(2,1))/tans2(2,1))
     *       .gt. 0.001
           endif
           if (tans2(0,2) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(0,2) - ans2(0,2)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(0,2) - ans2(0,2))/tans2(0,2))
     *       .gt. 0.001
           endif
           if (tans2(1,2) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(1,2) - ans2(1,2)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(1,2) - ans2(1,2))/tans2(1,2))
     *       .gt. 0.001
           endif
           if (tans2(2,2) .eq. 0.0) then
             wrong = wrong .or. abs(tans2(2,2) - ans2(2,2)) .gt. 0.001
           else
             wrong = wrong .or. abs((tans2(2,2) - ans2(2,2))/tans2(2,2))
     *       .gt. 0.001
           endif
           if (wrong) write (6,1010)
           write (6,3010) xin,yin,tans2,ans2
 3010  format ('0',1p,2e12.4/3(5x,3e12.4/),3(/5x,3e12.4))
           yin = yin + del
   36    continue
         xin = xin + del
   35  continue
       stop
       end
