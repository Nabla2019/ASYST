       subroutine ftbget (id,set,locx)
c
c  Two entry points, ftbget and ftbput.
c
c  The ftbget subroutine obtains set numbered set from a
c  process file that has been opened in random mode.
c  The set is moved from the file to location locx.
c
c  The ftbput subroutine stores set numbered set into a
c  process file that has been opened in random mode.
c  The set is moved from location locx to the file.
c
c  Cognizant engineer: rjw
c
*call ftbcom
$if -def,in32,2
       parameter (msk=1073741823)
       real id
$if def,in32,1
       real*8 id
       integer set
       logical wh
c
       wh = .false.
   25  if (id .eq. 0.0) call ftberr (19)
       call idfind (id,i1)
       if (i1 .eq. 0) call ftberr (11)
$if -def,in32,5
       if (set.lt.1 .or. set.gt.iand(ia(i1+1),msk)) call ftberr (36)
       i = ishft(ia(i1+2),-30)
       if (ishft(ia(i),-30) .ne. 4) call ftberr (25)
       n = ishft(ia(i1+1),-30)
       if (iand(ia(i1+2),msk) .eq. 2) go to 30
$if def,in32,5
       if (set.lt.1 .or. set.gt.ia(2,i1+1)) call ftberr (36)
       i = ia(1,i1+2)
       if (ia(1,i) .ne. 4) call ftberr (25)
       n = ia(1,i1+1)
       if (ia(2,i1+2) .eq. 2) go to 30
       i = (set-1)*n + i + 2
       if (wh) go to 21
       call ftbmov (a(i),locx,n)
       return
   21  call ftbmov (locx,a(i),n)
       return
$if -def,in32,1
   30  i = (set-1)*n + ishft(ia(i1+3),-30)
$if def,in32,1
   30  i = (set-1)*n + ia(1,i1+3)
$if def,lcm,4
       if (wh) go to 31
       call readec (locx,b(i),n)
       return
   31  call writec (locx,b(i),n)
       return
       entry ftbput(id,set,locx)
c
       wh = .true.
       go to 25
       end
