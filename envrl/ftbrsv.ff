       subroutine ftbrsv (id,filsiz,iunit,i2)
c
c  Allocate a reserve file in memory or on disk
c  id = file identifier (input)
c  filsiz = file size to allocate (input)
c  iunit = unit number, 1 = SCM, 2 = LCM, 3-7 = disk (input)
c  i2 = index of file (output)
c
c  Cognizant engineer: rjw
c
*call ftbcom
c
$if -def,in32,1
       real id
$if def,in32,1
       real*8 id
       integer filsiz,iunit
       logical hilos
c
$if -def,in32,1
       parameter (msk=1073741823)
c
       k = abs(iunit)
c  Error checks
       if (k.le.0 .or. k.gt.ndsk2) call ftberr (42)
       l = filsiz
       if (l.gt.size(k) .or. l.le.0) call ftberr (16)
c  Pack links to preferred end
       if (k .eq. 1) call ftbslk
c  Allocate a process file with 1 set
       call ftbdsb (id,l,1,k)
       call idfind (id,i1)
c  Change the process file to a reserve file (No. sets => 0)
$if -def,in32,1
       ia(i1+1) = iand(ia(i1+1),not(msk))
$if def,in32,1
       ia(2,i1+1) = 0
       hilos = hilo
       if (iunit .lt. 0) hilo = .not.hilo
       if (k .le. 2) go to 10
       hilo = .true.
   10  call ftblct (k,l,i2)
       hilo = hilos
$if -def,in32,1
       ia(i1+3) = ior(ishft(i2,30),l)
$if def,in32,2
       ia(1,i1+3) = i2
       ia(2,i1+3) = l
$if def,nandbg,2
c  Fill the new allocation in scm with nans
       if (k .eq. 1) call nanvd(a,i2,l)
       return
       end
