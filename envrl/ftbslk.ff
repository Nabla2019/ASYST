       subroutine ftbslk
c
c  This subroutine shifts the bookkeeping links towards the preferred
c  end of SCM.
c
c  Cognizant engineer: rjw
c
*call ftbcom
c
       integer jt(2)
c
$if -def,in32,1
       parameter (msk=1073741823)
c
       if (.not.dlt) return
       dlt = .false.
       if (nolink .eq. 1) return
       jt(1) = 0
       mmax = maxz(1)
       mmin = minz(1)
       mlink = 1
       j = link1
  100  jt(2) = jt(1)
       l = j + 196
$if -def,in32,1
       j = ishft(ia(l+3),-30)
$if def,in32,1
       j = ia(1,l+3)
       if (hilo .and. j.lt.minz(1)  .or.  .not.hilo .and. j.ge.maxz(1))
     * go to 150
$if -def,in32,1
       ia(l+2) = 0
$if def,in32,2
       ia(1,l+2) = 0
       ia(2,l+2) = 0
       if (hilo) go to 105
       minz(1) = j
       go to 110
  105  maxz(1) = j + 200
  110  msize = size(1)
       call ftblct (1,200,i2)
       size(1) = msize
$if -def,in32,1
       ia(l+2) = 1
$if def,in32,2
       ia(1,l+2) = 0
       ia(2,l+2) = 1
       jt(1) = j - i2
       if (jt(1) .eq. 0) go to 150
$if -def,in32,1
       ia(l+3) = ior(ishft(i2,30),200)
$if def,in32,2
       ia(1,l+3) = i2
       ia(2,l+3) = 200
       j1 = j
       j2 = i2
       if (hilo) go to 130
       do 120 i = 1,200
       j1 = j1 - 1
       j2 = j2 - 1
  120  a(j2+200) = a(j1+200)
       go to 150
  130  do 140 i = 1,200
       a(j2) = a(j1)
       j2 = j2 + 1
  140  j1 = j1 + 1
  150  mlink = mlink + 1
       if (mlink .eq. nolink) go to 200
       if (jt(1).eq.0) go to 100
$if -def,in32,2
       k = ishft(ia(i2+199),-30) + 196
       ia(k+1) = ior(ishft(i2+192,30),iand(ia(k+1),msk))
$if def,in32,2
       k = ia(1,i2+199) + 196
       ia(1,k+1) = i2 + 192
       j = i2
       go to 100
  200  if (mmax.gt.maxz(1)) maxz(1) = mmax
       if (mmin.lt.minz(1)) minz(1) = mmin
       if (nofils .eq. 0) go to 210
       jt(2) = jt(1)
  210  lasdes = lasdes - jt(2)
       nexdes = nexdes - jt(1)
       return
       end
