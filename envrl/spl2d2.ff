       subroutine spl2d2 (nx,x,ny,y,f00,f20,f02,f22,idim,xin,yin,ans)
c
c  Subroutine returns interpolated values to the second mixed derivitive
c  in ans.
c
c  nx    Number of values at which independent variable x is tabulated.
c  x     Table of independent variable x, nx long.
c  ny    Number of values at which independent variable y is tabulated.
c  y     Table of independent variable y, ny long.
c  f00   Value of function for x,y grid.
c  f20   Second derivative with respect to x of function.
c  f02   Second derivative with respect to y of function.
c  f22   Second derivative with respect to x and second derivative with
c        respect to y of function.
c  idim  Maximum first dimension of f00, f20, f02, and f22.
c  xin   Value of independent variable x at which interpolation desired.
c  yin   Value of independent variable y at which interpolation desired.
c  ans   Interpolated values, ans(0,0) is function, ans(1,0) is first
c        derivative with respect to x, ans(0,1) is first derivative
c        with respect to y, ans(1,1) is the mixed first derivative with
c        respect to x and the first derivative with respect to y, and
c        similarly with ans(2,0), ans(1,2), ans(2,0), ans(2,1),
c        ans(2,2).
c        The f00, f20, f02, and f22 arrays are normally computed by
c        spl2d1.
c
       implicit none
c
       integer idim,nx,ny
       real ans(0:2,0:2),f00(idim,nx),f20(idim,nx),f02(idim,nx),
     * f22(idim,ny),x(2),xin,y(2),yin
c
       integer i,j,miss
       real dd,el,px(0:3,2),py(0:3,2),r6,r6el,rel,temp2,yf00(2),
     * yf01(2),yf02(2),yf20(2),yf21(2),yf22(2)
c      integer k,l
c      real tans(0:2,0:2),yt00(2),yt01(2),yt02(2),yt20(2),yt21(2),
c    * yt22(2)
       parameter (r6=1.0/6.0)
c
       external search
c
c  Locate the i,j rectangle.
       if (xin .le. x(1)) then
         j = 1
       elseif (xin .ge. x(nx)) then
         j = nx - 1
       else
         call search (xin,x,nx,j,miss)
       endif
       if (yin .le. y(1)) then
         i = 1
       elseif (yin .ge. y(ny)) then
         i = ny - 1
       else
         call search (yin,y,ny,i,miss)
       endif
c
       el = x(i+1) - x(i)
       rel = 1.0/el
       r6el = r6*el
       dd = xin - x(i)
       temp2 = dd*dd*rel
       px(0,1) = (temp2 - el)*dd*r6
       px(1,1) = temp2*0.5 - r6el
       px(2,1) = dd*rel
       px(3,1) = rel
       dd = x(i+1) - xin
       temp2 = dd*dd*rel
       px(0,2) = (temp2 - el)*dd*r6
       px(1,2) = r6el - temp2*0.5
       px(2,2) = dd*rel
       px(3,2) = -rel
       el = y(j+1) - y(j)
       rel = 1.0/el
       r6el = r6*el
       dd = yin - y(j)
       temp2 = dd*dd*rel
       py(0,1) = (temp2 - el)*dd*r6
       py(1,1) = temp2*0.5 - r6el
       py(2,1) = dd*rel
       py(3,1) = rel
       dd = y(j+1) - yin
       temp2 = dd*dd*rel
       py(0,2) = (temp2 - el)*dd*r6
       py(1,2) = r6el - temp2*0.5
       py(2,2) = dd*rel
       py(3,2) = -rel
c
       yf00(1) = py(0,1)*f02(i,j+1) + py(0,2)*f02(i,j) +
     * py(2,1)*f00(i,j+1) + py(2,2)*f00(i,j)
c      yt00(1) = x(i)**3*yin**3
c
       yf01(1) = py(1,1)*f02(i,j+1) + py(1,2)*f02(i,j) +
     * py(3,1)*f00(i,j+1) + py(3,2)*f00(i,j)
c      yt01(1) = 3.0*x(i)**3*yin**2
c
       yf02(1) = py(2,1)*f02(i,j+1) + py(2,2)*f02(i,j)
c      yt02(1) = 6.0*x(i)**3*yin
c
       yf20(1) = py(0,1)*f22(i,j+1) + py(0,2)*f22(i,j) +
     * py(2,1)*f20(i,j+1) + py(2,2)*f20(i,j)
c      yt20(1) = 6.0*x(i)*yin**3
c
       yf21(1) = py(1,1)*f22(i,j+1) + py(1,2)*f22(i,j) +
     * py(3,1)*f20(i,j+1) + py(3,2)*f20(i,j)
c      yt21(1) = 18.0*x(i)*yin**2
c
       yf22(1) = py(2,1)*f22(i,j+1) + py(2,2)*f22(i,j)
c      yt22(1) = 36.0*x(i)*yin
c
       yf00(2) = py(0,1)*f02(i+1,j+1) + py(0,2)*f02(i+1,j) +
     * py(2,1)*f00(i+1,j+1) + py(2,2)*f00(i+1,j)
c      yt00(2) = x(i+1)**3*yin**3
c
       yf01(2) = py(1,1)*f02(i+1,j+1) + py(1,2)*f02(i+1,j) +
     * py(3,1)*f00(i+1,j+1) + py(3,2)*f00(i+1,j)
c      yt01(2) = 3.0*x(i+1)**3*yin**2
c
       yf02(2) = py(2,1)*f02(i+1,j+1) + py(2,2)*f02(i+1,j)
c      yt02(2) = 6.0*x(i+1)**3*yin
c
       yf20(2) = py(0,1)*f22(i+1,j+1) + py(0,2)*f22(i+1,j) +
     * py(2,1)*f20(i+1,j+1) + py(2,2)*f20(i+1,j)
c      yt20(2) = 6.0*x(i+1)*yin**3
c
       yf21(2) = py(1,1)*f22(i+1,j+1) + py(1,2)*f22(i+1,j) +
     * py(3,1)*f20(i+1,j+1) + py(3,2)*f20(i+1,j)
c      yt21(2) = 18.0*x(i+1)*yin**2
c
       yf22(2) = py(2,1)*f22(i+1,j+1) + py(2,2)*f22(i+1,j)
c      yt22(2) = 36.0*x(i+1)*yin
c
       ans(0,0) = px(0,1)*yf20(2) + px(0,2)*yf20(1) + px(2,1)*yf00(2) +
     * px(2,2)*yf00(1)
c      tans(0,0) = xin**3*yin**3
c
       ans(1,0) = px(1,1)*yf20(2) + px(1,2)*yf20(1) + px(3,1)*yf00(2) +
     * px(3,2)*yf00(1)
c      tans(1,0) = 3.0*xin**2*yin**3
c
       ans(2,0) = px(2,1)*yf20(2) + px(2,2)*yf20(1)
c      tans(2,0) = 6.0*xin*yin**3
c
       ans(0,1) = px(0,1)*yf21(2) + px(0,2)*yf21(1) + px(2,1)*yf01(2) +
     * px(2,2)*yf01(1)
c      tans(0,1) = 3.0*xin**3*yin**2
c
       ans(1,1) = px(1,1)*yf21(2) + px(1,2)*yf21(1) + px(3,1)*yf01(2) +
     * px(3,2)*yf01(1)
c      tans(1,1) = 9.0*xin**2*yin**2
c
       ans(2,1) = px(2,1)*yf21(2) + px(2,2)*yf21(1)
c      tans(2,1) = 18.0*xin*yin**2
c
       ans(0,2) = px(0,1)*yf22(2) + px(0,2)*yf22(1) + px(2,1)*yf02(2) +
     * px(2,2)*yf02(1)
c      tans(0,2) = 6.0*xin**3*yin
c
       ans(1,2) = px(1,1)*yf22(2) + px(1,2)*yf22(1) + px(3,1)*yf02(2) +
     * px(3,2)*yf02(1)
c      tans(1,2) = 18.0*xin**2*yin
c
       ans(2,2) = px(2,1)*yf22(2) + px(2,2)*yf22(1)
c      tans(2,2) = 36.0*xin*yin
c
c      write (6,3006) xin,yin,(yt00(l),yt01(l),yt02(l),yt20(l),yt21(l),
c    * yt22(l),l=1,2),((tans(k,l),k=0,2),l=0,2)
c3006  format ('0Analytical   xin ='1p,e12.4,'   yin='e12.4/
c    * ' Left  ',6e12.4/' Right '6e12.4/' Final ',3e12.4/2(7x,3e12.4/))
c      write (6,3008) x(i),y(i),((px(k,l),k=0,3),l=1,2),
c    * ((py(k,l),k=0,3),l=1,2)
c3008  format ('0p functions'/
c    * ' x(i) =',1p,e12.4,'   y(i) =',e12.4/(4e12.4))
c      write (6,3007) xin,yin,(yf00(l),yf01(l),yf02(l),yf20(l),yf21(l),
c    * yf22(l),l=1,2),((ans(k,l),k=0,2),l=0,2)
c3007  format ('0Spline       xin ='1p,e12.4,'   yin='e12.4/
c    * ' Left  ',6e12.4/' Right '6e12.4/' Final ',3e12.4/2(7x,3e12.4/))
       return
       end
