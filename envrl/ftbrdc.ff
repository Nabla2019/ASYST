       subroutine ftbrdc
c
c  This subroutine releases excess scm and lcm space held by ftb.
c  All files except links must be positioned at low end of space.
c
c  Cognizant engineer: rjw
c
*call ftbcom
c  local variables
       logical hilos
c
$if -def,in32,1
       parameter (msk=1073741823)
c
c  save high-low option, move links to low positions.
       hilos = hilo
       hilo = .true.
       dlt = .true.
       call ftbslk
c  check size
       if (size(1) .ne. maxz(1)-minz(1)) call ftberr (61)
$if def,lcm,1
       if (size(2) .ne. maxz(2)-minz(2)) call ftberr (62)
c  move first link, change lasdes, nexdes, and linking if link at
c  top of space.
       if (hilos) go to 10
       if (size(1) .eq. 0) go to 12
       if (link1 .ne. maxz(1)) call ftberr (63)
       link1 = minz(1)
       call ftbmov (a(maxz(1)),a(link1),200)
$if -def,in32,1
       ia(link1+3) = ior(ishft(link1,30),200)
$if def,in32,2
       ia(1,link1+3) = link1
       ia(2,link1+3) = 200
       if (nolink .gt. 1) go to 11
       lasdes = lasdes - size(1)
       nexdes = nexdes - size(1)
       go to 10
$if -def,in32,2
  11   k = ishft(ia(link1+199),-30) + 196
       ia(k+1) = ior(ishft(link1+192,30),iand(ia(k+1),msk))
$if def,in32,2
   11  k = ia(1,link1+199) + 196
       ia(1,k+1) = link1 + 192
       if (nolink .gt. 2) go to 10
       if (nofils .eq. 0) lasdes = lasdes - size(1)
   10  szz(8) = locf(a(minz(1)+200)) + 1
   12  hilo = hilos
$if def,lcm,2
       if (szz(2) .ne. 0) szz(2) = (.not.mask(1) .and.
     * locf(b(1))) + minz(2)
       hilo = hilos
       j1 = szz(8)
       j2 = szz(2)
       call ftbmem (j1,j2)
       szz(1) = szz(8) - locf(a(1))
       maxz(1) = minz(1)
       size(1) = 0
$if def,lcm,2
       maxz(2) = szz(2) - (.not.mask(1) .and. locf(b(1)))
       size(2) = maxz(2) - minz(2)
       return
       end
