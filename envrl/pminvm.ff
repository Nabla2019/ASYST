       subroutine pminvm(a,irn,ip,n,np,aws,avect,mtype)
c
c  This entry operates on the vector avect with the following matrices
c  according to the value of mtype.
c
c        mtype = 1      a**(-1)
c        mtype = 2      a**(-t)
c        mtype = 3      a
c        mtype = 4      a**t
c
       use pminve
       implicit none
       real a(1),aws(1),avect(1)
       integer n,np,irn(1),ip(np,5),mtype
c
c  Local variables.
      logical log
      integer j,j1,jcol,jro,jseq,ju,kentry,kerr,mt
      real au
      equivalence (au,ju)
*call efiless
*call efilesd
c
      kerr=1
      mt=mtype
      mtype=0
      kentry=2
c  Test for invalid entry.
      if(ip(n+1,2).eq.0)go to 2205
      if(ip(n+1,2).ne.n+1)go to 2207
      kerr=3
      if(ip(n+1,3).ne.0)go to 2205
      log=.false.
      mtype=mt
c  Jump according to required operation.
      if(mtype.le.0.or.mtype.gt.4) go to 2204
      go to (101,102,103,104),mtype
      call fabend
c     set up for mtype=1,4, permuting avect to aws
  104 log=.true.
  101 do 110 j=1,n
  110 aws(ip(j,5))=avect(j)
      au=0.0
c     first divide by l or multiply by l**t
      do 140 j=1,n
      j1=ip(ip(j+1,2),1)
  141 j1=j1-1
      jseq=ip(irn(j1),5)
      if(jseq.eq.j)go to 111
      if(log)go to 1412
      aws(jseq)=aws(jseq)-aws(j)*a(j1)
      go to 141
 1412 aws(j)=aws(j)+aws(jseq)*a(j1)
      go to 141
  111 if(.not.log)ju=j1
c     save pivot position for mtype=1
c     set zero for mtype=j
  140 avect(ip(j,2))=au
c     now divide by u or multiply by u**t
      j=n
  143 jcol=ip(j,2)
      j1=ip(jcol,1)
      if(log)go to 144
c     recover pivot position in ju
      au=avect(jcol)
$if def,cray,3
      if (aws(j) .ne. a(ju)) go to 7700
      avect(jcol) = 1.0
      go to 144
 7700 avect(jcol)=aws(j)/a(ju)
  144 jseq=ip(irn(j1),5)
      if(log)go to 1442
      if(jseq.eq.j)go to 119
      aws(jseq)=aws(jseq)-avect(jcol)*a(j1)
      go to 1443
 1442 avect(jcol)=avect(jcol)+aws(jseq)*a(j1)
      if(jseq.eq.j)go to 119
 1443 j1=j1+1
      go to 144
  119 j=j-1
      if(j.gt.0) go to 143
       return
c  entry for mtype=2,3.
  103 log=.true.
c  first divide by u**t or multiply by u.
  102 do 120 j=1,n
      jcol=ip(j,2)
      j1=ip(jcol,1)
  121 jseq=ip(irn(j1),5)
      if(jseq.eq.j)go to 122
      if(log)go to 1212
      avect(jcol)=avect(jcol)-aws(jseq)*a(j1)
      go to 1213
 1212 aws(jseq)=aws(jseq)+a(j1)*avect(jcol)
 1213 j1=j1+1
      go to 121
  122 if(log)go to 132
$if def,cray,3
      if (avect(jcol) .ne. a(j1)) go to 8800
      aws(jseq) = 1.0
      go to 120
 8800 aws(jseq)=avect(jcol)/a(j1)
      go to 120
  132 aws(jseq)=avect(jcol)*a(j1)
  120 continue
c     now divide by l**t or multiply by l
      j=n
  123 j1=ip(ip(j+1,2),1)
  124 j1=j1-1
      jro=irn(j1)
      if(ip(jro,5).eq.j)go to 125
      if(log)go to 1242
      aws(j)=aws(j)-avect(jro)*a(j1)
      go to 124
 1242 avect(jro)=avect(jro)+aws(j)*a(j1)
      go to 124
  125 avect(jro)=aws(j)
      j=j-1
      if(j.gt.0)go to 123
       return
c  diagnostic printing.
 2204  write (output,2304) aname(2),mtype
 2304  format ('0******** Error return from ',a,' because mtype =',i5,'
     *which is out of range.')
       return
 2205  write (output,2305) aname(kentry),aname(kerr)
 2305  format ('0******** Error return from ',a,' because previous entry
     * to ',a,' gave error return.')
       return
 2207  write (output,2307) aname(kentry),aname(1)
 2307  format ('0******** Error return from ',a,' because no previous en
     *try to ',a,'.')
       return
       end
