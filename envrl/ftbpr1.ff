       subroutine ftbpr1 (id,indx)
c
c  This subroutine is used to process the next process file that has
c  been opened in read, write, or read-write access mode.
c
c  Cognizant engineer: rjw
c
*call ftbcom
c
       real id
       logical sw
c
$if -def,in32,1
       parameter (msk=1073741823,msk20=1048575)
$if def,in32,1
       parameter (msk=65535)
c
       if (id .eq. 0.0) call ftberr (19)
       call idfind (id,i1)
       if (i1 .eq. 0) call ftberr (11)
$if -def,in32,1
       i = ishft(ia(i1+2),-30)
$if def,in32,1
       i = ia(1,i1+2)
       if (i .eq. 0) call ftberr (12)
$if -def,in32,1
       ia10x = ishft(ia(i),-30)
$if def,in32,1
       ia10x = ia(1,i)
       if (ia10x .eq. 4) call ftberr (23)
$if -def,in32,2
       iaold = iand(ia(i),msk)
       ia(i) = ia(i) + 1
$if def,in32,2
       iaold = ia(2,i)
       ia(2,i) = ia(2,i) + 1
       ia20x = iaold + 1
$if -def,in32,4
       if (ia20x .gt. iand(ia(i1+1),msk)) call ftberr (41)
       ia11 = ishft(ia(i1+1),-30)
       ia11x = ishft(ia(i+1),-30)
       n = iand(ia(i1+2),msk) - 2
$if def,in32,4
       if (ia20x .gt. ia(2,i1+1)) call ftberr (41)
       ia11 = ia(1,i1+1)
       ia11x = ia(1,i+1)
       n = ia(2,i1+2) - 2
       if (n .gt. 0) go to 110
   41  indx = ia11x + ia11
$if -def,in32,1
       ia(i+1) = ior(ishft(indx,30),iand(ia(i+1),msk))
$if def,in32,1
       ia(1,i+1) = indx
       if (n .eq. 0) go to 200
       return
c
$if def,lcm,7
  200  i = i + 2
       if (ia10x .eq. 1) go to 201
       if (iaold .ne. 0) call writec (a(i),b(ia11x),ia11)
       if (ia10x .eq. 2) go to 202
  201  call readec (a(i),b(indx),ia11)
  202  indx = i
       return
$if -def,lcm,1
  200  call fabend
c
$if -def,in32,3
  110  ia22x = iand(ia(i+2),msk20)
       if (iaold .lt. ia22x*ishft(ia(i+2),-40)) go to 41
       ia12x = iand(ishft(ia(i+2),-20),msk20)
$if def,in32,3
  110  ia22x = iand(ia(2,i+2),msk)
       if (iaold .lt. ia22x*ia(1,i+2)) go to 41
       ia12x = iand(ishft(ia(2,i+2),-16),msk)
       if (iand(ia22x,1) .eq. 0) go to 44
       li = i + 3
       indx = li + ia12x + 2
       go to 61
   44  li = i + ia12x + 3
       indx = i + 5
$if -def,in32,2
  61   ia(i+1) = ior(ishft(indx,30),iand(ia(i+1),msk))
        ia13 = ishft(ia(i1+3),-30)
$if def,in32,2
   61  ia(1,i+1) = indx
       ia13 = ia(1,i1+3)
       j = ia13 + ia22x*ia12x
       if (ia10x-2) 46,9,47
c      read mode
   46  ia22x = ia22x + 1
   45  j = j + ia12x
$if -def,in32,1
       if (j .gt. iand(ia(i1+3),msk)) go to 11
$if def,in32,1
       if (j .gt. ia(2,i1+3)) go to 11
       call ftbin (n,a(li),ia12x,j)
       go to 12
   11  call ftbchk(n)
   12  if (a(indx-2) .ne. a(i1)) call ftberr (6)
$if -def,in32,2
       if (ia(indx-1) .ne. ia22x) call ftberr (7)
  100  ia(i+2) = ior(iand(ia(i+2),not(msk20)),ia22x)
$if def,in32,2
       if (ia(2,indx-1) .ne. ia22x) call ftberr (7)
  100  ia(2,i+2) = ior(iand(ia(2,i+2),not(msk)),ia22x)
       return
c      write mode
    9  sw = .true.
       j = j - ia12x
       if (ia22x .eq. 0) go to 84
       a(li) = a(i1)
$if -def,in32,1
       ia(li+1) = ia22x
$if def,in32,2
       ia(1,li+1) = 0
       ia(2,li+1) = ia22x
       call ftbout (n, a(li), ia12x, j)
   84  ia22x = ia22x + 1
       if (sw) go to 100
       j = j + ia12x
       go to 45
c      read-write mode
   47  sw = .false.
       go to 9
       end
