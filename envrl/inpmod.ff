       subroutine inpmod (loc1,loc3,j,mnum,n,nc)
c
c  This subroutine checks the mode of mnum numbers starting
c  at loc1(j) by using the format array starting at loc3(7).
c  The number of items already processed (nc) determines the
c  starting point in loc3(7).
c
c  Cognizant engineer: rjw
c
c  Parameters in the call list
c  loc1    list table array
c  loc3    control word array and format array from inplnk call
c  j       index in loc1 where data starts
c  mnum    number of data items to check
c  n       cyclic repetition factor and output error flag
c          On exit, n contains information about the checking
c          n < 0 item n should be real but it not
c          n = 0 mode is correct,
c          0 < n < 10000 item n whould be integer but is not
c          n > 10000 item (n-10000) should be alphanumeric but is not
c  nc      number of items on previous card checked with current format
c
$if -def,in32,1
       integer loc1(1)
$if def,in32,1
       integer loc1(2,*)
       parameter (modes=31)
       integer loc3(1),mud(modes)
c
       if (j.le.0 .or. mnum.le.0 .or. nc.lt.0) call fabend
       im = 40
       ilm =j + mnum
       nfun = 1
       num=nc-1
       ma=7
  130  if (abs(loc3(ma)) .ge. 2) go to 110
c  Following section not in a repeat.
       if (num .lt. 0) go to 121
       num = num - 1
       ma =ma + 1
       go to 130
c  Keep going through until past no. already processed
  121  md = ma
       ngo = 1
       go to 120
c  Test for type of repeat.
  110  if (loc3(ma) .lt. 0) go to 235
c  A repeat that is reset for each card.
       ngo = 2
  145  md = ma
       mb = loc3(md)
  155  md = md + 1
       if (mb .ne. 0) go to 120
       go to 145
c  Do not reset repeat for each card.
  235  ngo = 3
  135  md = ma
       mb = -loc3(md)
  165  md=md+1
       if (mb .eq. 0) go to 135
       if (num .lt. 0) go to 120
       mb = mb - 1
       num =num - 1
       go to 165
  120  if (im .gt. modes) then
         im = min(mnum,modes)
         call inpupk (loc1(1,ilm),im,mud)
         im = 1
         ilm = ilm + 1
       endif
       if (mud(im).eq.0 .and. loc3(md).ne.(-1)) go to 440
       nback = mud(im) - 1
       if (nback .eq. 2) nback=-1
       if (loc3(md) .eq. nback) go to 440
c  Desired mode does not match input conversion mode.
       if (loc3(md)) 410,420,430
c  Should be hollerith.
  410  n = 10000 + nfun
       return
c  Should be integer.
  420  n = nfun
       return
c  Should be real.
  430  n = -nfun
       return
  440  im = im + 1
       if (nfun .ge. mnum) go to 311
       nfun = nfun + 1
       if (ngo .ne. 1) go to 320
       ma = ma + 1
       go to 130
  320  mb = mb - 1
       if (ngo .eq. 2) go to 155
       go to 165
  311  n = 0
       return
       end
