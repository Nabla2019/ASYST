       subroutine spl1d2 (nx,x,f0,f2,ij,xin,ans)
c
c  Evaluates one dimensional spline function.
c
c  nx   Number of points in the interpolation.
c  x    Origin of table of the independent variable.
c  f0   Origin of table of the dependent variable.
c  f2   Origin of table of second derivatives as calculated by spl1d1.
c  ij   Spacing in the tables f0 and f2.
c  xin  Point at which interpolation is desired.
c  ans  Array of which contains the function value, first derivative,
c       and second derivative at xin.
c
       implicit none
c
       integer ij,nx
       real ans(0:2),f0(3),f2(3),x(3)
c
       integer i,k1,mi,mflag
       real dx1,dx2,flk,rflk,r6,xin
       parameter (r6=1.0/6.0)
       external search
c
c  Locate xin in the x table.
       if (xin .le. x(1)) then
         i = 1
       else
         if (xin .ge. x(nx)) then
           i = nx - 1
         else
           call search (xin,x,nx,i,mflag)
         endif
       endif
       mi = (i - 1)*ij + 1
       k1 = mi + ij
       dx1 = xin - x(i)
       dx2 = x(i+1) - xin
       flk = x(i+1) - x(i)
       rflk = 1.0/flk
c  Calculate f0(xin).
       ans(0) = (f2(mi)*dx2**3 + f2(k1)*dx1**3)*r6*rflk +
     * (f0(k1)*rflk - f2(k1)*flk*r6)*dx1 +
     * (f0(mi)*rflk - flk*f2(mi)*r6)*dx2
c  Calculate the first derivative at xin.
       ans(1) = (f2(k1)*dx1**2 - f2(mi)*dx2**2)*0.5*rflk +
     * (f0(k1) - f0(mi))*rflk + flk*(f2(mi) - f2(k1))*r6
c  Calculate the second derivative at xin.
       ans(2) = (f2(mi)*dx2 + f2(k1)*dx1)*rflk
       return
       end
