*deck smooth
      subroutine smooth(j1,n2,iop,t,x,y,w,f,a)
c
c     where j1=number of data points
c           n2=twice the number of knots
c           iop=array of dimension 2 containing combinations of the
c               integers 1 thru 5 for specifying the boundary conditions
c           t=table of abscissas of data points
c           x=table of knots
c           y=table of ordinates of data points
c           w=table of weights
c           f=array of dimension n2 containing second derivatives and
c             function values upon return
c           a=array of dimension .ge. n2**2 used for temporary storage
c
      dimension iop(2),t(2),x(2),y(2),w(2),f(2),a(n2,n2),d(900)
c
c     initialization
c
      n=n2/2
      kk=n-1
      f1=f(1)
      fn=f(n)
      do 100 i=1,n
  100 f(i)=0.
      m1=2*n
      m2=m1-1
      m3=n+1
      m4=kk-1
c
c     fill in rows 2 thru n-1 of matrix a
c
      do 20 i=2,kk
      fl1=x(i+1)-x(i)
      fl2=x(i)-x(i-1)
      do 20 j=1,n
      m=n+j
      if (j-(i-1))70,40,30
   30 if (j-i)50,60,50
   50 if (j-(i+1))70,80,70
   70 a(i,j)=0.
      a(i,m)=0.
      go to 20
   40 a(i,j)=fl2/6.
      a(i,m)=-1./fl2
      go to 20
   60 a(i,j)=(x(i+1)-x(i-1))/3.
      a(i,m)=(fl1+fl2)/(fl1*fl2)
      go to 20
   80 a(i,j)=fl1/6.
      a(i,m)=-1./fl1
   20 continue
      if (n-3)111,112,111
c
c     perform algorithm to produce identity matrix in rows 2 thru n-1,
c     columns 2 thru n-1
c
  111 do 110 i=3,kk
      a(i,i)=a(i,i)-a(i,i-1)*a(i-1,i)/a(i-1,i-1)
      a(i,1)=-a(i,i-1)*a(i-1,1)/a(i-1,i-1)
      do 110 j=m3,m2
  110 a(i,j)=a(i,j)-a(i,i-1)*a(i-1,j)/a(i-1,i-1)
  112 a(n-1,1)=a(n-1,1)/a(n-1,n-1)
      do 130 i=n,m1
  130 a(n-1,i)=a(n-1,i)/a(n-1,n-1)
      if (n-3)113,114,113
  113 do 140 i=2,m4
      j=n-i
      a(j,1)=(a(j,1)-a(j,j+1)*a(j+1,1))/a(j,j)
      do 140 k=n,m1
  140 a(j,k)=(a(j,k)-a(j,j+1)*a(j+1,k))/a(j,j)
  114 do 141 i=2,kk
      do 141 j=2,kk
      if (i-j)142,143,142
  143 a(i,j)=1.
      go to 141
  142 a(i,j)=0.
  141 continue
c
c     store zeros in lower n rows of matrix a and vector f
c
      do 150 i=m3,m1
      f(i)=0.
      do 150 j=1,m1
  150 a(i,j)=0.
      if (iop(1)-5)151,152,151
c
c     if iop(1)=5, store zeros in first row of matrix a and in f(1)
c
  152 do 153 i=1,m1
  153 a(1,i)=0.
      go to 200
c
c     if iop(1) not equal 5, create 1,0,0,...,0 in a(1,1) thru a(1,n-1)
c     and in a(1,1) thru a(n-1,1)
c
  151 do 149 i=n,m1
  149 a(1,i)=0.
      do 154 i=1,kk
  160 mk=iop(1)
      go to (220,230,240,250),mk
      call fabend
c
c     if i=1 initialize a(1,1),f(1), and a(1,n) thru a(1,2n) according
c     to option
c     if i not equal 1 compute proper number to create zero in a(1,i)
c
  220 if (i-1)221,222,221
  222 a(1,1)=1.
      f(1)=f1
      go to 155
  221 bob=0.
      go to 155
  230 if (i-1)231,232,231
  232 a(1,1)=1.
      go to 155
  231 if (i-2)233,233,234
  233 bob=-f1
      go to 155
  234 bob=0.
      go to 155
  240 if (i-1)241,242,241
  242 a(1,1)=(x(2)-x(1))/3.
      a(1,n+1)=1./(x(2)-x(1))
      a(1,n+2)=-a(1,n+1)
      f(1)=-f1
      go to 155
  241 if (i-2)243,243,244
  243 bob=(x(2)-x(1))/6.
      go to 155
  244 bob=0.
      go to 155
  250 if (i-1)251,252,251
  252 a(1,1)=1.
      a(1,n)=-1.
      go to 155
  251 bob=0.
      go to 155
  155 if (i-1)156,154,156
  156 a(1,1)=a(1,1)-bob*a(i,1)
      do 157 j=n,m1
  157 a(1,j)=a(1,j)-bob*a(i,j)
  154 continue
      do 158 i=n,m1
  158 a(1,i)=a(1,i)/a(1,1)
      f(1)=f(1)/a(1,1)
      do 159 i=2,kk
      f(i)=f(i)-a(i,1)*f(1)
      do 159 j=n,m1
  159 a(i,j)=a(i,j)-a(i,1)*a(1,j)
      a(1,1)=1.
      do 161 i=2,kk
      a(1,i)=0.
  161 a(i,1)=0.
  200 if (iop(2)-5)201,202,201
c
c     if iop(2)=5, store zeros in n th row and in f(n)
c
  202 do 203 i=1,m1
  203 a(n,i)=0.
      go to 300
c
c     if iop(2) not equal 5, create 0,0,...,1 in a(n,2) thru a(n,n) and
c     in a(1,n) thru a(n,n)
c
  201 do 204 i=n,m1
  204 a(n,i)=0.
      a(n,1)=0.
      do 205 i=1,kk
  260 mk=iop(2)
      go to (310,320,330,340),mk
      call fabend
c
c     if i=1 initialize f(n) and a(n,n) thru a(n,2n) according to option
c     if i not equal to 1 compute proper number to create zero in a(n,i)
c
  310 if (i-1)311,312,311
  312 a(n,n)=1.
      f(n)=fn
      go to 206
  311 bob=0.
      go to 206
  320 if (i-1)321,322,321
  322 a(n,n)=1.
      go to 206
  321 if (i-(n-1))323,324,323
  324 bob=-fn
      go to 206
  323 bob=0.
      go to 206
  330 if (i-1)331,332,331
  332 a(n,n)=(x(n)-x(n-1))/3.
      a(n,m2)=-1./(x(n)-x(n-1))
      a(n,m1)=-a(n,m2)
      f(n)=fn
      go to 206
  331 if (i-(n-1))333,334,333
  334 bob=(x(n)-x(n-1))/6.
      go to 206
  333 bob=0.
      go to 206
  340 if (i-1)341,342,341
  342 a(n,n)=(x(2)-x(1)+x(n)-x(n-1))/3.
      a(n,n+1)=1./(x(2)-x(1))
      a(n,n+2)=-a(n,n+1)
      a(n,m2)=-1./(x(n)-x(n-1))
      a(n,m1)=-a(n,m2)
      go to 206
  341 if (i-2)343,344,343
  343 if (i-(n-1))345,346,345
  344 bob=(x(2)-x(1))/6.
      go to 206
  346 bob=(x(n)-x(n-1))/6.
      go to 206
  345 bob=0.
      go to 206
  206 if (i-1)207,205,207
  207 f(n)=f(n)-bob*f(i)
      a(n,1)=a(n,1)-bob*a(i,1)
      do 208 j=n,m1
  208 a(n,j)=a(n,j)-bob*a(i,j)
  205 continue
      do 210 i=m3,m1
  210 a(n,i)=a(n,i)/a(n,n)
      f(n)=f(n)/a(n,n)
      a(n,1)=a(n,1)/a(n,n)
      do 211 i=1,kk
      f(i)=f(i)-a(i,n)*f(n)
      a(i,1)=a(i,1)-a(i,n)*a(n,1)
      do 211 j=m3,m1
  211 a(i,j)=a(i,j)-a(i,n)*a(n,j)
      a(n,n)=1.
      do 239 i=2,kk
      a(n,i)=0.
  239 a(i,n)=0.
      a(1,n)=0.
  300 go to 400
  400 a1n=a(1,n)
      an1=a(n,1)
c
c     start pass thru data
c     if data point outside knot interval, contribution goes to first or
c     last spline
c     if data point in interval i, contribution goes to i th and (i+1)
c     th spline
c
      do 1000 j=1,j1
      if(t(j)-x(1))77,77,66
   66 if(t(j)-x(n))68,69,69
   69 i=n-1
      go to 212
   68 call search(t(j),x,n,m,mflag)
      if (m-1)76,77,76
   77 i=1
      go to 212
   76 if (mflag)78,79,78
   79 i=m-1
      go to 212
   78 i=m
  212 a1=x(i+1)-t(j)
      fli=x(i+1)-x(i)
      mb=n+i
      a2=t(j)-x(i)
      aij=-((a1**3)/(6.*fli)-fli*a1/6.)
      bij=-((a2**3)/(6.*fli)-fli*a2/6.)
      cij=a1/fli
      dij=a2/fli
      if (iop(1)-5)401,402,401
c
c     if iop(1)=5 fill in first row
c
  402 if (i-1)403,404,403
  403 if (i-(n-1))405,406,405
  404 eij=-aij+a(2,1)*bij
      go to 410
  406 eij=a(n-1,1)*aij+an1*bij
      go to 410
  405 eij=a(i,1)*aij+a(i+1,1)*bij
  410 a(1,i)=a(1,i)-w(j)*eij*aij
      a(1,i+1)=a(1,i+1)-w(j)*eij*bij
      a(1,mb)=a(1,mb)+w(j)*eij*cij
      a(1,mb+1)=a(1,mb+1)+w(j)*eij*dij
      f(1)=f(1)+w(j)*eij*y(j)
  401 if (iop(2)-5)411,412,411
c
c     if iop(2)=5 fill in n th row
c
  412 if (i-1)413,414,413
  413 if (i-(n-1))415,416,415
  414 gij=a1n*aij+a(2,n)*bij
      go to 420
  416 gij=a(n-1,n)*aij-bij
      go to 420
  415 gij=a(i,n)*aij+a(i+1,n)*bij
  420 a(n,i)=a(n,i)-w(j)*gij*aij
      a(n,i+1)=a(n,i+1)-w(j)*gij*bij
      a(n,mb)=a(n,mb)+w(j)*gij*cij
      a(n,mb+1)=a(n,mb+1)+w(j)*gij*dij
      f(n)=f(n)+w(j)*gij*y(j)
c
c     fill in lower n rows of matrix a
c
  411 do 1000 k=1,n
      k1=n+k
      if (i-1)430,431,430
  430 if (i-(n-1))432,433,432
  431 if (iop(1)-5)432,435,432
  435 pkji=a(2,k1)*bij
      go to 450
  433 if (iop(2)-5)432,436,432
  436 pkji=a(n-1,k1)*aij
      go to 450
  432 pkji=a(i,k1)*aij+a(i+1,k1)*bij
  450 if (k-i)451,452,453
  453 if (k-(i+1))451,454,451
  452 pkji=pkji+a1/fli
      go to 451
  454 pkji=pkji+a2/fli
  451 a(k1,i)=a(k1,i)-w(j)*pkji*aij
      a(k1,i+1)=a(k1,i+1)-w(j)*pkji*bij
      a(k1,mb)=a(k1,mb)+w(j)*pkji*cij
      a(k1,mb+1)=a(k1,mb+1)+w(j)*pkji*dij
 1000 f(k1)=f(k1)+w(j)*pkji*y(j)
c
c     if iop(1)=4 set up periodic case
c
      if (iop(1)-4)601,602,601
  602 do 604 i=1,m1
  604 a(n+1,i)=0.
      a(n+1,n+1)=1.
      a(n+1,m1)=-1.
      f(n+1)=0.
c
c     solve system ax=f
c
  601 call lss(n2,1,n2,a,f,d,det)
      return
      end
