*mlist
*if def,selap
       subroutine qdl0 (vg,vf,vvg,vvf,qlcon,qtcon,s,nex,idbug,qdo,ql,qt)
c
c  qdl0, for a given s, calculates Lipinski 0-d debris bed dryout heat
c  flux for flows in transition between laminar and turbulent flow.
c
c  Cognizant engineer: ewc (gaj).
c
c       ref: kuan, pui, "tmi-2 upper-core particle bed thermal
c            behavior", egg-tmi-7757, august, 1987,
c            equations 2-26, 2-27, and 2-30.
c
c       programmer:   g. a. jayne            feb., 1988
c
c       input -
c         vg     = specific volume of sat. steam, m**3/kg
c         vf     = specific volume of sat. liquid, m**3/kg
c         vvg    = viscg / rhog
c         vvf    = viscf / rhof
c         qlcon  = c0 * hfg  / alp,
c         qtcon  = c0 * hfg**2 / bet,
c                  c0 = g * (rhof - rhog)
c                  alp = 150.0 * ((1-e)/d)**2 / e**3
c                  bet = 1.75  * ((1-e)/d)    / e**3
c                        e = porosity of debris bed
c                        d = diameter of debris bed particles, m
c         s      = effective saturation, 0 < s < 1
c         nex    = exponent for s and 1-s terms
c         idbug  = extra printout control
c
c       output -
c         qdo    = dryout heat flux, w/m*2 (equation 2-30)
c         ql     = laminar flow component of qdo (equation 2-26)
c         qt     = turbulent flow component of qdo (equation 2-27)
c
       implicit none
c
       integer nex,idbug
       real vg,vf,vvg,vvf,qlcon,qtcon,s,qdo,ql,qt
*call ufiles
c
c  Local variables.
       integer nerr,nerrpr
       real a,aeps,b,qt2,r
c
      data nerr, nerrpr, aeps /  1, 20, 1.0e-25 /
c
      ql  = qlcon / (vvg / (1.0 - s)**3   + vvf / s**3   )
      qt2 = qtcon / (vg  / (1.0 - s)**nex + vf  / s**nex)
      qt = sqrt (qt2)
c
      a = 1.0 / qt2
      b = 1.0 / ql
c     c = - 1
      r = b*b + 4.0*a
      if (r .ge. 0.0 .and. a .gt. aeps) then
        qdo = (-b + sqrt(r)) / (2.0*a)
        if (idbug .gt. 2) then
          write (output,70) s, ql, qt, a, b, r, qdo
   70     format (' qdl0 -  s, ql, qt, a, b, r, qdo =', 7e11.3)
        end if
      else
        qdo = 0.0
        if (nerr .le. nerrpr) then
          write (output,180)
  180     format (' ***** qdl0 error - no real sol.')
          write (output,70) s, ql, qt, a, b, r, qdo
          nerr = nerr + 1
          if (nerr .gt. nerrpr) then
            write (output,220)
  220       format ('0**** further printout of qdl0 errors suppressed')
          end if
        end if
      end if
c
      if (idbug .gt. 1) then
        write (output,350) s, qdo
  350   format ('         qdl0 -   s, qdo =', 2e15.7)
      end if
      return
      end
*endif
