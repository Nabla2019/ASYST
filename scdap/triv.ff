*mlist
*if def,selap
       subroutine triv (i,j,k,rrr,zzz,volump,areat)
c
c
c  Descriptive sentence for triv goes here.
c
c  Cognizant engineer: ewc.
c
       implicit none
*call iparm
c
       integer i,j,k
       real rrr,zzz,areat,volump
      dimension rrr(5),zzz(5),volump(4)
c
c  Local variables.
       real a3,a4,a8,area
c
      area=(rrr(j)*zzz(k)-rrr(j)*zzz(i)+rrr(i)*zzz(j)-rrr(i)*zzz(k)
     1 +rrr(k)*zzz(i)-rrr(k)*zzz(j))/2.
      if(mnpo.ne.0) area=-area
      if(abs(area).le.1.e-10) area=0.0
      if(k.eq.5) go to 200
      areat=area
      a3=area/3.
      if(npp.ne.1) go to 201
      volump(i)=a3
      volump(j)=a3
      volump(k)=a3
      return
  201 volump(i)=a3*(.666*rrr(i)+.167*rrr(j)+.167*rrr(k))
      volump(j)=a3*(.167*rrr(i)+.666*rrr(j)+.167*rrr(k))
      volump(k)=a3*(.167*rrr(i)+.167*rrr(j)+.666*rrr(k))
      volump(i)=abs(volump(i))
      volump(j)=abs(volump(j))
      volump(k)=abs(volump(k))
      return
  200 continue
      areat=areat+area
      if(npp.ne.1) go to 202
      a4=area/4.
      volump(1)=volump(1)+a4
      volump(2)=volump(2)+a4
      volump(3)=volump(3)+a4
      volump(4)=volump(4)+a4
      return
  202 a8=area/8.
      volump(1)=volump(1)+abs(a8*(rrr(5)+rrr(1)))
      volump(2)=volump(2)+abs(a8*(rrr(5)+rrr(2)))
      volump(3)=volump(3)+abs(a8*(rrr(5)+rrr(3)))
      volump(4)=volump(4)+abs(a8*(rrr(5)+rrr(4)))
      return
      end
*endif
