*mlist
*if def,selap
       subroutine racalc(afz, afu, afs, afa1, afa2, afux2, afzx2,
     # afalup, aflith, afcadm, afsoil, tpool, pwave, depth, ra, cnpool,
     # tlqpol, rass)
c
c  racalc calculates the rayliegh number of the molten pool.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
c
c      this subroutine calculates the rayliegh number of molten pool.
c
c      arguments:
c      afz=atomic fraction of zr in element n.
c      afu=metalic u.
c      afs=stainless steel.
c      afa1=silver-indium-cadmium.
c      afa2=boron carbide.
c      afux2=uo2
c      afzx2=zro2.
c      afalup=aluminum.
c      aflith=lithium.
c      afcadm=cadmium.
c      afsoil=soil
cj     tpool=average temperature of pool (k).
c      pwave=volumetric heat generation of pool (w/m**3)
c      depth=characteristic dimension of pool (m).
c      ra=modified rayliegh number [output].
c        = (Rayleigh number)/(Nusselt number)
c      rass = internal Rayleigh number used to calculate steady state
c             natural convection in molten pool.
c      cnpool=thermal conductivity of pool (w/m.k) [output].
c      tlqpol = liquidus temperature of molten pool (K) [input]
c
       implicit none
c
       real afz,afu,afs,afa1,afa2,afux2,afzx2,afalup,aflith,afcadm,
     * afsoil,tpool,pwave,depth,ra,cnpool,xvisc
       real rass
*call contrl
*call ufiles
c
c  Local variables.
       real alpha,beta,cp,grav,rho,visc,tlqpol
       real tmp1,viscmn
       real zucp1,zuden1,zutco1,zuvisc
       external zucp1,zuden1,zutco1
       external zubet1,zuvis1,zuvisc
c     calculate average viscosity
       call zuvis1(afz, afu, afs, afa1, afa2, afux2, afzx2,
     # afalup, aflith, afcadm, afsoil, tpool, visc)
c      obtain estimate for minimum value of viscosity.
c      tmp1 = 3200.0 = temperature above MATPRO temperature for melting
c                      of pure UO2 in MATPRO subroutine phyprp.
c   apply viscmn as upper bound on mixture viscosity until zuvis1
c   more rigorously models viscosity of mixtures with eutectic reaction.
       tmp1=3200.0
       call zuvis1(afz, afu, afs, afa1, afa2, afux2, afzx2,
     # afalup, aflith, afcadm, afsoil, tmp1,  viscmn)
       if(visc.gt.viscmn)visc=viscmn
c      obtain coefficient of thermal expansion.
       tmp1=tpool
       if(tmp1.lt.3120.0)tmp1=3120.0
       call zubet1(afz, afu, afs, afa1, afa2, afux2, afzx2,
     # afalup, aflith, afcadm, afsoil, tmp1, beta)
c
c      calculate thermal conductivity
       cnpool=zutco1(afz, afu, afs, afa1, afa2, afux2, afzx2, afalup,
     # aflith, afcadm, afsoil, tmp1)
c
c      calculate density
       rho=zuden1(afz, afu, afs, afa1, afa2, afux2, afzx2, afalup,
     # aflith, afcadm, afsoil, tmp1)
cj
c sb kinematic viscosity
       xvisc = visc/rho
c sb
c      calculate heat capacity
       cp=zucp1(afz, afu, afs, afa1, afa2, afux2, afzx2, afalup,
     # aflith, afcadm, afsoil, tmp1)
cj
c      calculate thermal diffusivity
       alpha=cnpool/(rho*cp)
cj
c      define acceleration of gravity
       grav=9.8
cj
c      write(output,8000)beta,pwave,depth,cnpool,alpha,visc,rho,cp
c8000  format(' beta=',e10.5,' pwave=',e10.5,' depth=',e10.5,' cnpool='
c    * ,e10.5,' alpha=',e10.5,' visc=',e10.5,' rho=',e10.5,' cp=',e10.5)
c
cj     calculate internal Rayleigh number
c sb
c***   replace calculation of steady state Rayleigh number with that
c      of modified Rayleigh number.
       rass=grav*beta*pwave*(depth**5)/(cnpool*alpha*xvisc)
       if(rass.lt.1.0)rass=1.0
       ra=grav*beta*(depth**3)*(tpool-tlqpol)/(alpha*xvisc)
       if(ra.lt.0.0)ra=0.0
       return
       end
*endif
