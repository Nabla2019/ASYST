*mlist
*if def,selap
       subroutine rfuele
c
c  rfuele processes input data for an atr component.
c
c  Cognizant engineer: ewc.
c
*in32 idat
*in32end
c
c
csshi
      use scdmod
      implicit none
*call scddat
*call scdcom
*call scdout
*call cons
*call fast
*call comctl
*call contrl
*call tblsp
*call ufiles
*call ndxara
*call trnot1
*call radata
*call fgrcom
*call debcom
csshi ATR
c
      integer idat(80),nptim, npptim
      real timp(50),ptim(50),pptim(50),timpp(50), rdat(80)
      equivalence(idat(1),rdat(1))
c
csshi ATR l4b(2),l4c(2)
      integer l1(8),l4(3*ndax+6),l4a(8),l5(6+ndrd)
     #   ,l8(6+ndmatr),l9(7+ndmatr),l20(18)
      integer l31,l32,knt,knt1,inode,nhydv(ndax),nstart,ndata,inext,
     & iscr,istart,next,nfield
      integer,parameter :: ndaxl4=3*ndax+6
      real meshdat(ndrd)
      logical errck1
c
      data l1/0,0,2,2,0,1,0,1/
      data l4a/0,0,2,2,0,1,0,0/
cljs  sshi  change in line below
cljs  sshi  Warning: line below needs value of 3*ndax+6 for l4
      data l4/ ndaxl4*0/
*      data l4b/ndax,0/
*      data l4c/ndax,0/
      data l5/0,0,1,ndrd,0,1,ndrd*1/
      data l8/0,0,1,ndmatr,0,1,ndmatr*0/
      data l9/0,0,1,0,0,1,1,ndmatr*1/
csshi ATR
      data l20/0,0,0,12,0,1,12*1/
csshi ATR end
c
c 4ccc0100
c Number of rods
      l1(1)= icomp*10000 + 40000100
      l1(6)=1
      call inp2(fa(filndx(1)),rdat,l1)
      if(l1(6).eq.0)then
        write(output,2001) l1(1)
        fail=.true.
      else
        nsigl(icomp)=idat(1)
        slbwd(icomp)=rdat(2)
        if(slbwd(icomp).lt.0.0)then
         write(output,2010)'negative fuel element perimeter',l1(1)
         fail=.true.
        endif
      endif
c  4ccc0400 upper and lower volumes.
       l4a(1)=scd1(icomp)%cmpno*10000+40000400
       l4a(6)=1
       call inp2(fa(filndx(1)),rdat,l4a) 
       if (l4a(6) .eq. 0) then
         fail=.true.
       else
         voluh(icomp) = idat(1)
         vollh(icomp) = idat(2)
         write(output,'(1x)')
         write(output,2030)'above',voluh(icomp)
         write(output,2030)'below',vollh(icomp)
 2030  format(' Hydrodynamic volume ',a,' component=',i9)
       endif
c
csshi ATR
c 4ccc0401-99 Hydraulic volumes
      l4(2)=0
      l4(3)=4
      l4(4)=4
      l4(5)=0
      istart=1
      knt=1
  395 l4(1)= scd1(icomp)%cmpno*10000 + 40000400 + knt
      call inplnk(l4(1),next,nstart,nfield,fa(filndx(1)) )
      if(nfield.le.0)then
        if(nfield.eq.0)then
          if (next.gt.0.and.next.le.scd1(icomp)%cmpno*10000 + 40000499)
     &    then
            knt=next - (scd1(icomp)%cmpno*10000 + 40000400)
            goto 395
          endif
          write(output,2030)'Incomplete',40000401,40000499
          fail = .true.
          goto 401
        endif
      endif
      l4(6)=1
      call inp2(fa(filndx(1)),idat,l4)
      if (l4(6) .le. 0) then
        fail=.true.
      else
        if(idat(2).eq.0)then
          islbot(icomp)=1
        else
          islbot(icomp)=0
        endif
        do 400 inode=istart,idat(4)
          if(inode.eq.istart)then
            nvhyd(icomp,inode)=idat(1)
            nvhyd(ndcomp+nsout(icomp),inode)=idat(2)
          else
            nvhyd(icomp,inode)=nvhyd(icomp,inode-1)+idat(3)
            if(islbot(icomp).eq.0)then
              nvhyd(ndcomp+nsout(icomp),inode)=
     #             nvhyd(ndcomp+nsout(icomp),inode-1)+idat(3)
            else
              nvhyd(ndcomp+nsout(icomp),inode)=0
            endif
          endif
          write(output,3020)inode,nvhyd(icomp,inode),
     #          nvhyd(ndcomp+nsout(icomp),inode)
 3020 format (t5,'Axial node',i3,' inner boundary - ',i9,
     #         ' outer boundary - ',i9)
  400   continue
        istart=idat(4)+1
        knt=knt+1
        if(istart.le.naz) goto 395
      endif
  401 continue
csshi ATR end
cc 4ccc0401-50 Inner Hydraulic volumes
c      l31=icomp*10000 + 40000401
c      l32=-l31-48
c      knt=1
c      call inp5(l31, l32, 1,1,0,naz,1,1,1,knt,
c     + fa(filndx(1)), nhydv, l4b, iscr, 792)
c      if (knt .le. 0) then
c        fail=.true.
c        write (output, 2000) l31
c      else
c      do 110 knt=1,naz
c  110 nvhyd(icomp,knt) = nhydv(knt)
c      endif
cc
cc 4ccc0451-99 outer Hydraulic volumes
c      l31=icomp*10000 + 40000451
c      l32=-l31-48
c      knt=1
c      call inp5(l31, l32, 1,1,0,naz,1,1,1,knt,
c     + fa(filndx(1)), nhydv, l4c, iscr, 792)
c      if (knt .le. 0) then
c        fail=.true.
c        write (output, 2000) l31
c      else
c      do 120 knt=1,naz
c  120 nvhyd(ndcomp+icomp,knt) = nhydv(knt)
c      endif
c
c 4ccc0501-99
c Radial Mesh Spacing
      do 550 inode=1,naz
      l5(1)=icomp*10000+40000501
      l5(6)=1
      call inp2(fa(filndx(1)),meshdat,l5)
      if((l5(6) .eq. 0) .and. (inode .gt. 1)) then
c axial node input skipped, assign values from previous node
        do 520 knt=1,nrods2(inode-1,icomp)
  520   xcond3(knt,inode,icomp)=xcond3(knt,inode-1,icomp)
        nrods2(inode,icomp)=nrods2(inode-1,icomp)
      elseif (((l5(6) .eq. 0) .and.(inode .eq. 1)) .or.
     #     (l5(6) .lt. 0)) then
c problem, return error message
        fail = .true.
        write (output,2001) l5(1)
      else
c read values in to variables
        do 530 knt=1,l5(6)
  530   xcond3(knt,inode,icomp)=meshdat(knt)
        nrods2(inode,icomp)=l5(6)
      endif
  550 continue
c error checking
      do 560 inode=1,naz
       if(xcond3(1,inode,icomp).ne.0.0)then
        write(output,2010)'first radial node not equal to zero',l5(1)
        write(output,*)'look for bad input value',xcond3(1,inode,icomp)
        fail=.true.
       endif
       do 570 knt=2,nrods2(inode,icomp)
        if(xcond3(knt,inode,icomp).le.xcond3((knt-1),inode,icomp))then
         write(output,2010)'mesh out of sequence',l5(1)
         write(output,*)'look for input value ',xcond3(knt,inode,icomp)
        endif
  570  continue
  560 continue
c 4ccc0601-99 Initial Temperature
      call rtemp(2033.)
c 4ccc0801-0899 Indicies of materials contained in each axial node
      do 436 inode=1,naz
      l8(1)= icomp*10000 + 40000800 + inode
      l8(6)=1
      call inp2(fa(filndx(1)),rdat,l8)
      if ((l8(6) .eq. 0) .and. (inode .gt. 1)) then
c axial node input skipped, assign values from previous node.
        do 430 knt=1,nmater2(inode-1,icomp)
          imatr3(knt,inode,icomp)=imatr3(knt,inode-1,icomp)
  430   continue
      nmater2(inode,icomp)=nmater2(inode-1,icomp)
      else if((l8(6) .eq. 0) .and. (inode .eq. 1)) then
        write (output,2001) l8(1)
        fail=.true.
      else
        nmater2(inode,icomp)=l8(6)
        do 435 knt=1,nmater2(inode,icomp)
  435   imatr3(knt,inode,icomp)=idat(knt)
      endif
  436 continue
c error checking
      do 438 inode=1,naz
       if(imatr3(1,inode,icomp).ne.15 .and. imatr3(1,inode,icomp)
     +    .ne.16)then
        write(output,2010)'material index',l8(1)
        write(output,*)'look for input value of',imatr3(1,inode,icomp)
        fail=.true.
       endif
!sshi ATR fuel 
       if(imatr3(nmater2(inode,icomp),inode,icomp).ne.13 .and.
     +    imatr3(nmater2(inode,icomp),inode,icomp).ne.17)then
        write(output,2010)'material index',l8(1)
        write(output,*)'look for input value of',
     +        imatr3(nmater2(inode,icomp),inode,icomp)
        fail=.true.
       endif
  438 continue
c end error checking
c
c 4ccc0901-99
c Material layer spacing
      do 446 inode=1,naz
      l9(1)= icomp*10000 + 40000900 + inode
      l9(4)=ndmatr+1
      l9(6)=1
      call inp2(fa(filndx(1)),rdat,l9)
      if ((l9(6) .eq. 0) .and. (inode .gt. 1)) then
c axial node input skipped, assign values from previous node.
        do 440 knt=1,nmater2(inode-1,icomp)+1
          radmt3(knt,inode,icomp)=radmt3(knt,inode-1,icomp)
  440   continue
      else if((l9(6) .eq. 0) .and. (inode .eq. 1)) then
        write (output,2001) l9(1)
        fail=.true.
      else
c error check
       if(l9(6).ne.nmater2(inode,icomp))then
        write(output,2020)'number of material layers and',
     #       'material indexes do not match',l9(6)
        fail=.true.
       endif
c end check
        do 445 knt=1,l9(6)
        radmt3(knt,inode,icomp)=rdat(knt)
  445   continue
      endif
  446 continue
c error checking for materials layer
c interface with radial nodes
      do 510 inode=1,naz
       do 505 knt=1,nmater2(inode,icomp)
        errck1=.true.
        do 500 knt1=1,nrods2(inode,icomp)
         if(radmt3(knt,inode,icomp).eq.xcond3(knt1,inode,icomp))then
          errck1=.false.
         endif
  500   continue
      if(errck1)then
      write(output,2010)'material layer and radial nodes do not match',
     #      l9(1)
      fail=.true.
      endif
  505  continue
  510  continue
c end error check
csshi
c 4ccc1000 - Power input
      call rpower(nptim,npptim,ptim,pptim,timp,timpp)
      call ipower(nptim,npptim,ptim,pptim,timp,timpp)
c      do knt=1, naz
c        burnup2(knt,icomp)=paxpz2(1,knt,1,icomp)*burnaa
c      enddo 
csshi ATR
c 4ccc2101-99
c ATR component Fission Product masses
      l20(1) = 40002101 + icomp*10000
      l20(2) = 40002199 + icomp*10000
csshi ATR end
      call inplnk(l31,inext,nstart,ndata,fa(filndx(1)))
      if ((ndata .gt. 0) .or. (inext .le. l20(2))) then
        l20(6)=1
        call inp2(fa(filndx(1)),rdat,l20)
        if(l20(6).le.0)then
          fail=.true.
          write (output,2000) l20(1)
        else
          do 40 knt=1,l20(6)
   40     fpmasi(knt,icomp)=rdat(knt)
        endif
      endif
c
      return
 2000 format  ('0********',i8,' Card is missing.')
 2001 format  ('0******** Problem around card ',i8)
 2010 format('0******** Range error ',a,' start with card ',i9)
 2020 format('0******** Range error ',a,a,' card ',i9)
 2050 format('0$$$$$$$$ Warning ',a,' start with card ',i9)
      end
*endif
