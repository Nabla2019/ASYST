*mlist
*if def,selap
      subroutine cfdata
c
c  Move previous time step information into input arrays for the
c  component models.
c
c  Cognizant engineer:
c
c  calling subroutines:  fuelan
c
       implicit none
       include 'scddat.h'
       include 'tblsp.h'
       include 'intcom.h'
       include 'iocom.h'
       include 'cmptim.h'
       include 'cons.h'
       include 'debout.h'
       include 'fgrcom.h'
       include 'ndxara.h'
       include 'nhtara.h'
       include 'ptscom.h'
       include 'scdcom.h'
       include 'scdout.h'
       include 'trnot2.h'
c
c  Local variables.
       integer i,k,j,mz
       real avfunc
       external avfunc,dsrpsw
c
       mz = ndax * ( icomp - 1 )
       do i = 1,naz
         alfai0( i ) = alfai(mz+i)
         alfao0( i ) = alfao(mz+ i )
         flstm0(mz+i)=flstm(mz+i)
         flwh20( mz+i ) = flwh2 ( mz+i )
         h2oxd0( i ) = h2oxd2( i,icomp )
         oxdei0( i ) = oxdei( mz+i )
         oxdeo0( i ) = oxdeo2( i,icomp )
         oxdwc0( i ) = oxdwc2( i,icomp )
         oxdwf0( i ) = oxdwf( mz+i )
         qclad0( i ) = qclad2( i,icomp )
         rnalf0( i ) = rnalf( mz+i )
         rnoxd0( i ) = rnoxd( mz+i )
         tcolc0( i ) = tcolc( mz+i )
         ioxer0( i ) = ioxerr( mz+i )
         ltrns0( i ) = ltrans( mz+i )
         nfrsl0( i ) = nfrslg( mz+i )
         noxid0( i ) = noxide2( i,icomp )
         rpel0 ( i ) = rpel2( i,icomp )
         nfi0( i )   = nfi( mz+i )
         rcrmx0( i ) = rocrmx( mz+i )
         volcr0( i ) = volcrs( mz+i )
         wfruo0( i ) = wfrouo( mz+i )
         wfrzr0( i ) = wfrozr( mz+i )
         wrmuo0( i ) = wremuo( mz+i )
         wrmzr0( i ) = wremzr( mz+i )
         dzfrc0( i ) = dzfrac( mz+i )
         iphas0( i ) = iphase( mz+i )
         rcoi0(  i ) = rcoi2( i,icomp )
         wuorm0( i ) = wuorem( mz+i )
         wrmzo0( i ) = wremzo( mz+i )
         wumlt0( i ) = wuomlt( mz+i )
         rumlt0( i ) = ruomlt( mz+i )
c set cladding surface temperatures
         do k = 1,nrods2(i,icomp)
           tcnd03(k,i,icomp) = tcond3(k,i,icomp)
         enddo
         effcp0( i ) = effcpf(mz+ i )
         effgn0( i ) = effqf ( mz+i )
         ncrum0( i ) = ncrum( mz+i )
         rci0(i) = rci2 ( i,icomp )
         rco0(i) = rco2 ( i,icomp )
         vfuel0( i ) = vfuel2( i,icomp )
         vfvod0( i ) = vfvod2( i,icomp )
         ruliq0( i ) = ruliq( mz+i )
         rcrst0( i ) = rcrst2( i,icomp )
         qout0(i) = qout2(i,icomp,1)
         paxpz0( 1,i,1 ) = paxpz2( 1,i,1,icomp )
         paxpz0( 2,i,1 ) = paxpz2( 2,i,1,icomp )
         paxpz0(1,i,2) = paxpz2(1,i,nshapz(icomp)+1,icomp)
         paxpz0(2,i,2) = paxpz2(2,i,nshapz(icomp)+1,icomp)
         fgrj0 ( i ) = fgrj( i,icomp )
         fpvrt0( i ) = fpivrt3( 1,i,icomp )
       enddo
       do j = 1,16
         fpivy0( i,j ) = fpivy3( i,j,icomp )
         ggrel0( j ) = ggrel( j,icomp )
         ggivy0(j) = ggivy(j,icomp)
         fpary0( j ) = fpary(j,icomp)
         fpryc0( j ) = fparyc( j,icomp )
       enddo
       ggrel0( 17 ) = ggrel( 17,icomp )
       ggrel0( 18 ) = ggrel( 18,icomp )
       ggivy0(17) = ggivy(17,icomp)
       noxer0 = noxerr(icomp)
       icldf0 = icladf(icomp)
       wbtuo0 = wbotuo(icomp)
       wbtzr0 = wbotzr(icomp)
       wbtox0 = wbotox(icomp)
       ncrst0 = ncrust(icomp)
       return
       end
*endif
