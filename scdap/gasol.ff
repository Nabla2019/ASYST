*mlist
*if def,selap
      subroutine gasol(jbc)
c
c  gasol is part of the advanced b4c/h2/h2o chemistry package.
c  see the driver (b4cadv) for more info on this chem.package.
c
c  Cognizant engineer: ljs (fpg).
c
c
c******************************************************************
c
c     gasol               1-jan-92
c
c     the BWR canister/control blade modules were developed at ORNL
c     by L.J.Ott under the auspices of the NRC sponsored Boiling
c     Water Reactor Severe Accident Technologies programs.
c
c     for information or assistance, call
c                 L.J.Ott (fts)-624-0324 or (615)-574-0324
c                 F.P.Griffin (fts)-626-4684 or (615)-576-4684
c
c******************************************************************
c
c
      implicit none
c
      real            akvot , ay    , b0(10), bmax  , difm  , dmin  ,
     *                elmax , f(99) , opi(10)       , pia   ,
     *                r(20,21)      , radbyt, rkvot , slam  ,
     *                yftot(20)     , ysum  , yx(99)
c
      integer         i     , is    , isum  , it    , ivar  , ivarj ,
     *                j     , jbc   , k     , l1    , ls    ,
     *                ls1   , ls2   , lx(99), mz    , mrow  , msum  ,
     *                mx    , n     , nr
      data opi/10*0.0/
c
*call noval
c
c
      mx = 0
      bmax = 0.
      do 183 j = 1, l
      if(abs(b(j,np)) .gt. bmax .and. kh(j) .lt. 4) bmax=abs(b(j,np))
  183 b0(j) = b(j,np)
      bmax = bmax/float(ms)
  171 is = -1
      ng = 0
   55 isum = 0
      msa = 0
      if (ms .lt. ml1) go to 47
      do 52 i = ml1, ms
      if (y(i) .eq. 0.) go to 52
      msa = msa + 1
      isol(msa) = i
      isum = isum + 2**(i + mp - ml1)
   52 continue
   47 mpa = 0
      ng = ng + 1
      if (ng .eq. 100) ng = 1
      nsum(ng) = isum
      ysum = 0.
      do 152 mz = 1, mp
      if (ytot(mz) .eq. 0.) go to 152
      mpa = mpa + 1
      ifas(mpa) = mz
      nsum(ng) = nsum(ng) + 2**(mz - 1)
      ysum = ysum + ytot(mz)
  152 continue
      if (nsum(ng) .lt. is .or. mpa + msa .gt. l) go to 59
      go to 69
   86 ng = ng - 1
   59 is = is + 2
      do 154 n = 1,mpa
      mz = ifas(n)
  154 ytot(mz) = 0.
      isum = 0
      mpa = 1
      ytot(1) = 1.
      if (msa .eq. 0) go to 73
      do 68 n = 1, msa
      i = isol(n)
   68 y(i) = 0.
      msa = 0
   73 if (is .eq. 1) go to 74
      it = is
   61 mz = 0
   71 mz = mz + 1
      if (2**mz .le. it) go to 71
      if (mz .gt. mp) go to 57
      mpa = mpa + 1
      ifas(mpa) = mz
      ytot(mz) = 1.
      ma = mf(mz)
      mb = ml(mz)
      do 150 i = ma, mb
      if (n0(i) .eq. 1) y(i) = ysum
  150 continue
      goto 136
   57 i = mz + ml(mp) - mp
      m0 = mz
      if (i .gt. ms) return
      if (n0(i) .eq. 0) go to 59
      msa = msa + 1
      isol(msa) = i
      isum = isum + 2**(mz - 1)
      y(i) = ysum
  136 it = it - 2**(mz - 1)
      if (it .gt. 1) go to 61
      if (mpa + msa .gt. l) go to 59
      if (ng .eq. 1) goto 74
      do 597 k = 2,ng
      if(is .eq. -nsum(k-1) .and. mpa + msa .eq.(l-1)) goto 86
 597  continue
   74 ifas(1) = 1
      if (is .le. iabs(nsum(ng))) ng = ng + 1
      if (ng .eq. 100) ng = 1
      nsum(ng) = is
      if (ng .gt. 1) nsum(ng-1) = iabs(nsum(ng-1))
   69 if (ng .eq. 1) go to 129
      do 148 k = 2, ng
      if (nsum(ng) .eq. nsum(k-1)) go to 86
 148   continue
      if (ng .eq. 2) go to 129
      msum = -nsum(ng-2)
      if (msum.lt.0.or.nsum(ng).eq.msum.and.nsum(ng-1).lt.0) go to 129
      nsum(ng-2) = msum
      if (nsum(ng) .eq. msum) go to 86
  129 do 142 mz = 1, mp
      ma = mf(mz)
      mb = ml(mz)
      if (ytot(mz) .gt. 0.) go to 130
      do 126 i = ma, mb
      akt(i) = 0.
      aktf(i) = 1.
      y(i) = 0.
  126 yf(i) = 0.
      go to 142
  130 do 45 i = ma, mb
      if (y(i) .gt. bmax) y(i) = bmax
      if (n0(i) .eq. 1 .and. y(i) .lt. 1.e-8) y(i) = 1.e-8
      aktf(i) = 1.
   45 lx(i) = 0
      m0 = mz
      call aber
      if(ytot(mz).eq.0.)goto47
 142  continue
      ls1 = l + mpa + msa
      ls = ls1 - 1
      ls2 = ls + 2
  134 dmin = 1.e-6
      ivar = 0
      ivarj = ml(1) - ms
   16 do 6 j = 1, ls1
      do 6 k = j, ls2
    6 r(j,k) = 0.
      do 9 n = 1, mpa
      l1 = l + n
      mz = ifas(n)
      ma = mf(mz)
      mb = ml(mz)
      do 5 i = ma, mb
      if ( y(i) .eq. 0.) goto 5
      f(i) = g(i) + log(akt(i))
      r(l1,ls2) = r(l1,ls2) + f(i)*y(i)
      do 77 j = 1, l
      if (aa(i,j) .eq. 0.) go to 77
      ay = aa(i,j)*y(i)
      r(j,l1) = r(j,l1) + ay
      r(j,ls2) = r(j,ls2) + ay*f(i)
      do 80 k = j, l
   80 r(j,k) = r(j,k) + ay*aa(i,k)
   77 continue
    5 continue
      do 9 j = 1, l
    9 r(j,ls2) = r(j,ls2) - r(j,l1)
      if (msa .eq. 0) go to 63
      do 67 n = 1, msa
      i = isol(n)
      k = l + mpa + n
      r(k,ls2) = g(i)
      do 67 j = 1, l
   67 r(j,k) = aa(i,j)
   63 do 31 j = 2, ls1
      n = j - 1
      do 31 k = 1, n
   31 r(j,k) = r(k,j)
      if (mx .eq. 0) go to 156
      do 131 j = 1, l
  131 b0(j) = b(j,np)
      do 172 n = 1, mpa
      mz = ifas(n)
      if (mf(mz) .ne. ml(mz)) go to 172
      ma = mf(mz)
      do 89 j = 1, l
      if (aa(ma,j) .eq. a0(ma,j)) go to 89
      akvot = (1. - aa(ma,j)/a0(ma,j))*y(ma)
      do 91 k = 1, l
      if (aa(ma,k) .eq. a0(ma,k)) b0(k) = b0(k) + akvot*aa(ma,k)
   91 continue
      go to 172
   89 continue
  172 continue
  156 do 44 k = 1, l
      if (kh(k) .lt. 4) go to 44
      do 83 j = 1, ls1
   83 r(j,ls2) = r(j,ls2) - pi1(k)*r(j,k)
   44 r(k,ls2) = r(k,ls2) + b0(k)
      do 10 k = 1, ls
      if (kh(k) .gt. 3) go to 10
      elmax = 0.
      do 11 j = k, ls1
      if (abs(r(j,k)) .le. elmax .or. kh(j) .gt. 3) go to 11
      mrow = j
      elmax = abs(r(j,k))
   11 continue
      if (elmax .gt. 0.) go to 36
      if (k .gt. l) go to 10
      if (b0(k)) 59,10,59
   36 if (mrow .eq. k) go to 13
      do 15 n = k, ls2
      radbyt = r(mrow,n)
      r(mrow,n) = r(k,n)
   15 r(k,n) = radbyt
   13 ka = k + 1
      do 46 j = ka, ls1
      rkvot = r(j,k)/r(k,k)
      do 46 n = ka, ls2
   46 r(j,n) = r(j,n) - rkvot*r(k,n)
   10 continue
      do 20 n = 1, ls1
      k = ls2 - n
      if (kh(k) .gt. 3) go to 20
      if (r(k,k) .ne. 0. .and. r(k,ls2) .ne. 0.) go to 62
      pi1(k) = 0.
      k = k - l - mpa
      if (k .le. 0) go to 20
      i = isol(k)
      y(i) = 0.
      go to 55
   62 pi1(k) = r(k,ls2)/r(k,k)
      ka = k - 1
      if (ka .eq. 0) go to 20
      do 58 j = 1, ka
   58 r(j,ls2) = r(j,ls2) - pi1(k)*r(j,k)
   20 continue
      if (ivar .eq. 0) go to 66
      if (ivarj .ge. 0 .or. slam .lt. 0.1) go to 66
      do 70 j = 1, l
      if (abs(pi1(j)) .lt. 1.e-8) go to 70
      if (abs(opi(j)/pi1(j) - 1.) .gt. dmin) go to 65
   70 continue
      nr = 0
      if (ng .eq. 1) go to 155
      do 157 k = 2, ng
      if (nsum(ng) .eq. -nsum(k-1)) nr = nr + 1
  157 continue
  155 do 143 mz = 1,mp
      if (ytot(mz) .gt. 0.) go to 143
      m0 = mz
      call xber
      yftot(mz) = 0.
      do 144 i = ma, mb
      yftot(mz) = yftot(mz) + yf(i)
      yx(i) = yf(i)
      akt(i) = 0.
  144 yf(i) = 0.
      if (mz .eq. 1) yftot(mz) = yftot(mz)/ptot
      if(yftot(mz) .le. 0.) go to 143
      plue(mz) = -8.31433*t*log(yftot(mz))
  143 continue
  145 difm = 1.
      do 158 mz = 1, mp
      if (ytot(mz) .gt. 0. .or. yftot(mz) .le. difm) go to 158
      ka = mz
      difm = yftot(mz)
  158 continue
      if (difm .eq. 1.) go to 138
      if(nr.eq.0)goto159
      nr = nr - 1
      yftot(ka) = 1.
      go to 145
  159 nsum(ng) = -nsum(ng)
      ytot(ka) = 1.
      ma = mf(ka)
      mb = ml(ka)
      do 153 i = ma, mb
  153 y(i) = ysum*yx(i)/yftot(ka)
      go to 47
  138 if (ms .lt. ml1) go to 51
      difm = 0.
      do 54 i = ml1, ms
      if (n0(i) .eq. 0 .or. y(i) .gt. 0.) go to 54
      pia = -g(i)
      do 56 j = 1, l
   56 pia = pia + aa(i,j)*pi1(j)
      slue(i) = -pia*8.31433*t
      if (pia .lt. difm) go to 54
      ka = i
      difm = pia
   54 continue
      if (difm .eq. 0.) go to 51
      y(ka) = ysum
      go to 55
   51 if (mx .eq. 1) go to 93
      do 168 n = 1, mpa
      mz = ifas(n)
      if (mf(mz) .ne. ml(mz)) go to 168
      ma = mf(mz)
      do 173 j = 1, l
      if (aa(ma,j) .eq. a0(ma,j)) go to 173
      mx = 1
      go to 171
  173 continue
  168 continue
   93 ivarj = 0
      go to 66
   65 do 60 j = 1, l
   60 opi(j) = pi1(j)
   66 slam = 1.
      do 12 n = 1, mpa
      l1 = l + n
      mz = ifas(n)
      ma = mf(mz)
      mb = ml(mz)
      do 12 i = ma, mb
      if (y(i) .eq. 0.) go to 12
      pia = f(i) - pi1(l1)
      do 19 j = 1, l
   19 pia = pia - aa(i,j)*pi1(j)
      yx(i) = pia*y(i)
      if (pia .gt. slam) slam = pia
   12 continue
      if (slam .gt. 1.) slam = 0.999*(slam - 0.5)/slam/slam
      if (msa .eq. 0) go to 72
      do 53 n = 1, msa
      i = isol(n)
      k = l + mpa + n
      if (pi1(k) .lt. 0.) l1 = -i
      if(ysum.eq.0.0)then
         jbc=1
         return
      end if
      if (ivar.gt.0.and.pi1(k).lt.-y(i).and.-pi1(k)/ysum.gt.1.e8)goto 99
   53 y(i) = abs(pi1(k))
   72 ysum = 0.
      do 128 n = 1, mpa
      mz = ifas(n)
      ma = mf(mz)
      mb = ml(mz)
      do 29 i = ma, mb
      if (y(i) .eq. 0.) go to 29
      y(i) = y(i) - slam*yx(i)
      if (y(i) .lt. 1.e-20) y(i) = 0.
   29 continue
      m0 = mz
      call aber
      if (ytot(mz) .gt. 0.) go to 128
      nsum(ng) = -nsum(ng)
      go to 47
  128 ysum = ysum + ytot(mz)
      ivar = ivar + 1
      if (ivar .eq. 25 .or. ivar .eq. 50) dmin = 100.*dmin
      if (ivar .eq. 75) go to 59
      if (ivarj .lt. 0 .or. slam .lt. 1.) go to 16
      if (l1 .gt. 0) go to 25
   99 y(-l1) = 0.
      go to 55
   25 ivarj = ivarj + 1
      if (ivarj .eq. 10) go to 88
      do 3 n = 1, mpa
      mz = ifas(n)
      ma = mf(mz)
      mb = ml(mz)
      do 3 i = ma, mb
      if (y(i) .eq. 0.) go to 3
      if (abs(yx(i))/y(i) .gt. 1.e-6) go to 16
    3 continue
   88 do 149 n = 1, mpa
      mz = ifas(n)
      m0 = mz
      call xber
      if (ma .ne. mb) go to 133
      do 92 j = 1, l
      if (aa(ma,j) .ne. a0(ma,j)) y(ma) = aa(ma,j)/a0(ma,j)*y(ma)
   92 continue
  133 do 149 i = ma, mb
      if (n0(i) .eq. 0 .or. y(i) .gt. 0.) go to 149
      y(i) = ytot(mz)*yf(i)
      if (y(i) .lt. 1.e-10 .or. lx(i) .eq. 1) go to 149
      if (mz .eq. 1 .and. yf(i) .gt. ptot) y(i) = ytot(1)*ptot
      if (mz .gt. 1 .and. yf(i) .gt. 1.) y(i) = ytot(mz)
      lx(i) = 1
      go to 134
  149 continue
      if (ivarj .eq. 10) m0 = 0
      return
      end
*endif
