*mlist
*deck sgrcon
*if def,selap
      subroutine  sgrcon (tin, phit, grcon, tk)
c
c
c  sgrcon computes the integral of the reciprocal of thermal
c  conductivity for graphite.
c
c  Cognizant engineer: ewc.
c
      implicit none
c
*call ufiles
*call contrl
c
c          subroutine  grcon computes the integral of the reciprocal
c          of thermal conductivity for graphite.  The thermal
c          conductivity function is for the component perpendicular
c          to the graphite extrusion, and is a function of
c          temperature and fast neutron fluence.  The expression
c          coded is for graphite H-451.  The thermal conductivity
c          at temperature tin is also calculated and available in
c          the argument list as tk.               krk, may 1990
c
c          Reference:
c              Thermal Conductivity -
c              Review of thermal conductivity of nuclear grade
c              graphite under HTGR conditions, R.J.Price,
c              Gulf-GA-A12615, Sept 7,1973
c
c          Input : temperature                   tin      (k)
c                  fluence                       phit     (n/cm*2)
c          Output: integral ((1/k)*dT)           grcon    (m-s-k**2/j)
c                  conductivity                  tk       (j/m-s-k)
c
c          Called from userp, smrcon
c
c          Cauculations internal to the subroutine are in the
c          following units
c                      tkgr (cal/m-sec-C)
c          units of k and (1/k_*dt are converted to the following
c          units before returing to calling subroutine
c                  tk (j/m-s-k)    grcon (m-s-k**2/j)
c
c          note:  irradiation temperature in correlation must be
c                 greater than 500 c to prevent numerical trouble
c
      real  tin, phit, grcon,  tg, ku, kbola, kcs, convtk,
     #      tc, phit1, rtk, rkut, rkbla, rkcs, p1, p2, d451, tk, tirr,
     #      temp, dtemp, rtkint, rftemp, pol8, dx, ddx, delt, tval
       integer i,indx,n,nt,m
      external pol8
c
      dimension  tg(21), ku(21), kbola(21), kcs(21), temp(15),
     #           dtemp(14)
c
       data indx/10/
      data tg   / -173.0, -123.0,  -73.0,  -23.0,   27.0,   77.0,
     #             127.0,  227.0,  327.0,  427.0,  527.0,  627.0,
     #             727.0,  827.0,  927.0, 1027.0, 1127.0, 1227.0,
     #            1327.0, 1427.0, 1527.0/
      data ku   /  93.500, 48.800, 12.800,  6.380,  4.790,  3.560,
     #              2.900,  2.220,  1.910,  1.640,  1.480,  1.340,
     #              1.230,  1.100,  1.010,  0.940,  0.880,  0.840,
     #              0.800,  0.765,  0.740/
      data kbola/  2.88e04,  5.95e04,  9.60e04, 13.25e04, 16.65e04,
     #            19.58e04, 22.50e04, 27.00e04, 30.30e04, 32.70e04,
     #            34.70e04, 35.50e04, 36.00e04, 36.00e04, 36.00e04,
     #            36.00e04, 36.00e04, 36.00e04, 36.00e04, 36.00e04,
     #            36.00e04/
      data kcs  /  4.46e-03, 3.84e-03, 3.21e-03, 3.12e-03, 3.02e-03,
     #             3.13e-03, 3.24e-03, 3.51e-03, 3.66e-03, 3.78e-03,
     #             3.88e-03, 3.91e-03, 3.94e-03, 3.94e-03, 3.94e-03,
     #             3.94e-03, 3.94e-03, 3.94e-03, 3.94e-03, 3.94e-03,
     #             3.94e-03/
      data temp /    0.0,  100.0,  200.0,  300.0,  400.0,  500.0,
     #             600.0,  700.0,  800.0, 1000.0, 1500.0, 2000.0,
     #            3000.0, 4000.0, 5000.0/
      data dtemp/  100.0,  100.0,  100.0,  100.0,  100.0,  100.0,
     #             100.0,  100.0,  200.0,  500.0,  500.0, 1000.0,
     #            1000.0, 1000.0/
c
      data convtk / 418.6736 /, rftemp / 0.0/, nt / 15 /
c
c     set temperature to (C) for tk calculation, convert fluence
      tc    = tin - 273.15
      phit1 = phit * 1.0e-21
c     check limit for irradiation temperature
      if (tc .lt. 500.0) then
         tirr = 500.0
      else
         tirr = tc
      endif
c
c     calculation for graphite h-451
c
c     integrate the 1/k value up to temperature tin
c
      rtkint  = 0.0
      n = 1
c
c     check location of reference temp (0. c)
c
   10 if (temp(n) .ge. rftemp) then
         if (tc .le. temp(n)) then
            dx = tc - rftemp
            rkut   = 1.0/pol8 (ku,tg,rftemp,21,indx)
            rkbla  = 1.0/pol8 (kbola,tg,rftemp,21,indx)
            rkcs   = 1.0/pol8 (kcs,tg,rftemp,21,indx)
            p1     = -phit1/(0.001589*tirr - 0.641)
            p2     = 0.00120*tirr - 3.31
            d451   = 0.294*exp(p1) + exp(p2)*(1.0-exp(p1))
            d451   = 1.0/d451 - 3.40
            rtk    = 6.02*(rkut + 5.540e+04*rkbla + 5.017e-04*rkcs*d451)
            rtkint = rtkint + rtk*dx
            go to 50
         else
            dx = temp(n) - rftemp
            rkut   = 1.0/pol8 (ku,tg,rftemp,21,indx)
            rkbla  = 1.0/pol8 (kbola,tg,rftemp,21,indx)
            rkcs   = 1.0/pol8 (kcs,tg,rftemp,21,indx)
            p1     = -phit1/(0.001589*tirr - 0.641)
            p2     = 0.00120*tirr - 3.31
            d451   = 0.294*exp(p1) + exp(p2)*(1.0-exp(p1))
            d451   = 1.0/d451 - 3.40
            rtk    = 6.02*(rkut + 5.540e+04*rkbla + 5.017e-04*rkcs*d451)
            rtkint = rtkint + rtk*dx
         endif
      else
         n = n + 1
         go to 10
      endif
c
c     integrate to data entry below tin (tc)
c
      i = n
   30 delt = dtemp(i)
      m = n + 1
      if (temp(m) .ge. tc) go to 40
      tval   = 0.5*(temp(n) + temp(m))
      rkut   = 1.0/pol8 (ku,tg,tval,21,indx)
      rkbla  = 1.0/pol8 (kbola,tg,tval,21,indx)
      rkcs   = 1.0/pol8 (kcs,tg,tval,21,indx)
      p1     = -phit1/(0.001589*tirr - 0.641)
      p2     = 0.00120*tirr - 3.31
      d451   = 0.294*exp(p1) + exp(p2)*(1.0-exp(p1))
      d451   = 1.0/d451 - 3.40
      rtk    = 6.02*(rkut + 5.540e+04*rkbla + 5.017e-04*rkcs*d451)
      rtkint  = rtkint + rtk*delt
      n = n + 1
      i = i + 1
      if (n .gt. nt) then
         write (output,600) tc, temp(nt)
  600 format ('  0subroutine sgrcon, temp. of ',1p,g13.5,
     # ' exceeds last table',' value of ',g13.5,' degree C')
      fail = .true.
         return
      endif
      go to 30
c
   40 continue
      ddx    = tc - temp(n)
      rkut   = 1.0/pol8 (ku,tg,tc,21,indx)
      rkbla  = 1.0/pol8 (kbola,tg,tc,21,indx)
      rkcs   = 1.0/pol8 (kcs,tg,tc,21,indx)
      p1     = -phit1/(0.001589*tirr - 0.641)
      p2     = 0.00120*tirr - 3.31
      d451   = 0.294*exp(p1) + exp(p2)*(1.0-exp(p1))
      d451   = 1.0/d451 - 3.40
      rtk    = 6.02*(rkut + 5.540e+04*rkbla + 5.017e-04*rkcs*d451)
      rtkint = rtkint + rtk*ddx
c
   50 continue
c     conversion to j/(m-sec-k)
      tk     = (1.0/rtk)*convtk
      rtkint = rtkint/convtk
      grcon  = rtkint
      return
      end
*endif
