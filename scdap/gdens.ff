*mlist
*if def,selap
      function gdens(gtemp,gpres,xgmix)
c
c  gdens calculates gas mixture density as a function of
c  temperature, pressure and component fractions.
c
c  Cognizant engineer: rjw.
c
c This is a COUPLE ROUTINE
       implicit none
c
c
c     gdens    = output density of gas phase (kg/m**3)
c
c     gtemp    = input gas temperature (k)
c     gpres    = input gas pressure (pa)
c     xgmix(i)    = input mole fractions of the gas components
c              (unitless)
c                 i =  1 is helium
c                 i =  2 is argon
c                 i =  3 is krypton
c                 i =  4 is xenon
c                 i =  5 is hydrogen
c                 i =  6 is nitrogen
c                 i =  7 is oxygen
c                 i =  8 is carbon monoxide
c                 i =  9 is carbon dioxide
c                 i = 10 is water vapor
c
c  Local variables.
       integer i
       real a,b,gm,gpres,gtemp,sum1,sum2,sum3,xgmix
      dimension xgmix(10),gm(10),a(10),b(10)
       real gdens
c
      data gm /4.003e+00,3.9948e+01,8.38e+01,1.313e+02,
     # 2.016e+00,2.8013e+01,3.1999e+01,2.8011e+01,4.401e+01,
     # 1.8015e+01/
      data a /0.0e+00,0.0e+00,0.0e+00,0.0e+00,0.0e+00,
     # 0.0e+00,0.0e+00,0.0e+00,0.0e+00,5.536e+05/
      data b /3.17e-02,2.85e-02,3.22e-02,4.29e-02,2.84e-02,
     # 3.46e-02,0.0e+00,0.0e+00,0.0e+00,3.05e-02/
c
      sum1 = 0.0e+00
      sum2 = 0.0e+00
      sum3 = 0.0e+00
      do 10 i = 1,10
       sum1 = sum1 + xgmix(i) * gm(i)
       sum2 = sum2 + xgmix(i) * b(i)
       sum3 = sum3 + xgmix(i) * xgmix(i) * a(i)
   10 continue
      gdens = sum1/(8.314e+03 * gtemp / gpres + sum2
     # - sum3/(8.314e+03 * gtemp))
c
      return
      end
*endif
