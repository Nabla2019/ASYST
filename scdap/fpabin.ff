*mlist
*if def,selap
      subroutine fpabin (pdmin, pdmax, nbin, debug)
c
c  fpabin defines the aerosol particle bin distribution.
c
c  Cognizant engineer: rjw (esm).
c
      implicit none
      real pdmin, pdmax
      integer nbin
      logical debug
c
c
c     Earl S. Marwil
c     Scientific Computing Unit
c     EG&G Idaho, Inc.
c     PO Box 1625
c     Idaho Falls, ID 83415-2408
c
*call cons
*call fplim
*call fpbin
*call ufiles
      real temp, f, dw, vw
      integer ibin, jbin, kbin, iloc
      external isppin
c
      if (nbin .gt. 1) then
      dw = (pdmax/pdmin)**(1.0/real(nbin-1))
      vw = dw**3
c
c     Calculate bar midpoints
      pdiam(1) = pdmin * sqrt (dw)
      pvol(1) = pi * pdiam(1) ** 3 / 6.0
      pdelv(1) = pvol(1)
      do 10 jbin = 2, nbin
         pdiam(jbin) = dw * pdiam(jbin-1)
         pvol(jbin) = vw * pvol(jbin-1)
         pdelv(jbin) = pvol(jbin) - pvol(jbin-1)
   10    continue
c     Define low/high agglomeration rule
c     Locate the first bin less than or equal to a volume sum
c     of particles agglomerating from any two bins.
c     Compute the fraction to be distributed to the low bin and
c     the high bin.  This is calculated by solving two equations
c     in two unknowns to conserve mass and particle number.
c     A single particle whose volume does not match exactly
c     the volume of one of the existing bins is split into two
c     pieces which are distributed to the low bin and high bin.
      do 40 ibin = 1, nbin
         do 30 jbin = ibin, nbin
            temp = pvol(ibin) + pvol(jbin)
            call isppin (nbin, pvol, temp, kbin, iloc)
            if (iloc .eq. 0) then
c              Calculate volume fraction and then mass fraction
               f = (pvol(kbin+1) - temp) / pdelv(kbin+1)
               f = f * pvol(kbin) / temp
            else
               f = 1.0
            end if
            low(ibin,jbin) = kbin
            fmass(ibin,jbin) = f
   30       continue
   40    continue
      end if
      if (debug) then
         write (output,9050) nbin, pdmin,pdmax
 9050    format (/
     &   5x,'Particle Bin Distribution',/ 1p,
     &   5x,'   Number of Bins ........ ',i4,/
     &   5x,'   Minimum Diameter....... ',g11.3, ' m',/
     &   5x,'   Maximum Diameter ...... ',g11.3, ' m')
         write (output,'(/8x,3x,a,7x,a)') 'Diameter', 'Volume'
         do 50 ibin = 1, nbin
            write (output,'(1x,a,i2,1p,2(1x,g14.6))')
     &        'bin ', ibin, pdiam(ibin), pvol(ibin)
   50       continue
      end if
      return
      end
*endif
