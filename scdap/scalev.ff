*mlist
*if def,selap
       subroutine scalev (time,numel,numvt,ix,vrd,vzd,iv,vel,ivel,nadt,
     & ft,ifel,indexv)
c
c  Descriptive sentence for scalev goes here.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
*in32 ix
*in32 iv
*in32 ivel
*in32 nadt
*in32 ifel
*in32 indexv
*in32end
c
       implicit none
c
       integer numel,numvt
       real time
       integer ix(5,*),iv(*),ivel(*),nadt(3,*),ifel(*),indexv(2,*)
       real vrd(*),vzd(*),vel(*),ft(2,*)
c
c  Local variables.
       integer i,index,j,k,kfun,m,n
       real sv,valv,vie,vn,vnv
       external inpol
c
c  Data statements.
       data index/0/
c
c  Fill in indexv array -do on 1st pass only.
      if(index.eq.1) go to 12
      index=1
      do 9  m=1,numel
      indexv(1,m)=0
      indexv(2,m)=0
      if(ifel(m).eq.0) go to 9
      do 8  n=1,numvt
      i=iv(n)
      do 10 j=1,4
      k=ix(j,m)
      if(i.ne.k) go to 10
      if(indexv(1,m).eq.0) go to 11
      indexv(2,m)=n
      go to 10
   11 indexv(1,m)=n
   10 continue
    8 continue
    9 continue
   12 continue
c     determine scale factor
      m=0
      sv=0.
      do 20 k=1,numel
      vnv=0.
      i=0
      do 21 j=1,2
      n=indexv(j,k)
      if(n.eq.0) go to 21
      vn=vel(n)
      if(ivel(n).le.0) go to 7
      kfun=ivel(n)
      call inpol(nadt,ft,kfun,time,valv)
      vn=vn*valv
    7 continue
      vn=abs(vn)
      vnv=vnv+vn
      i=i+1
   21 continue
      if(i.eq.0) go to 20
      vn=vnv/float(i)
      vie=sqrt(vrd(k)**2+vzd(k)**2)
      sv=sv+vn/vie
      m=m+1
   20 continue
      sv=sv/float(m)
c     scale velocities
      do 6 i=1,numel
      vrd(i)=vrd(i)*sv
      vzd(i)=vzd(i)*sv
    6 continue
      return
      end
*endif
