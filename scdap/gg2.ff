*mlist
*if def,selap
       subroutine gg2 (bg,xm2,ng2,ngnm,volume,evol,vole,bv,r,z,ix,
     & genz, powsc, nctcn)
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
*in32 ng2
*in32 ngnm
*in32 ix
*in32end
c
       implicit none
c
c  Local variables.
       integer i,i1,i11,i12,i2,ig,ii,itr,j,j1,j11,j2,j22,jj,k,l,linea,
     * mtl,n,n402,ng
       integer node
       external node
      external hdwr, volnod
       real x204
       integer ng2(*),ngnm(*),ix(5,*), nctcn
       real xm2(*),bg(*),volume(*),evol(*),vole(4,*),bv(*),r(*),z(*),
     * genz(4,*), powsc
*call iparm
*call ufiles
c
*call contrl
       real volump(4)
c
      line = 10
      do 25 i = 1,numnp
      xm2(i) = 0.0
      bg(i)  = 0.0
      ng2(i) = 0
      bv(i) =0.0
      volume(i) = 0.0
   25 continue
      do 26 i = 1,numel
      evol(i) = 0.0
      do 27 jj = 1,4
      vole(jj,i) = 0.0
      genz(jj,i) = 0.0
   27 continue
   26 continue
c
      if (nslph .eq.-1) then
c
c        Put Scdap value for power density, or multiplier for
c        Relap5 general table of power density, into corner nodes of
c        elements with material 1.
c
        do 35 n=1,numel
        if (ix(5,n) .eq. 1) then
          do 33 ii=1,4
          xm2(ix(ii,n)) = powsc
          ng2(ix(ii,n)) = nctcn
   33     continue
        end if
   35   continue
        if (nctcn .eq. 0) then
          npdtbi = 0
        else
          npdtbi = 1
        end if
      end if
c
   40 read (eoin,1003) i1,j1,i2,j2,x204,n402
      if(i1.eq.0) go to 900
c
      npdtbi = 2
      if (nslph .ne.-1) then
        write (output,44)
   44   format ('0******** Couple GENERATION power density input ',
     1          'is not allowed, since nslphs is not = -1.')
        fail = .true.
        go to 40
      end if
c
      if(j.eq.-1) then
      ig = i1
      xm2(i1) = x204
      ng2(i1) = n402
      else
      ig = node(i1,j1)
      xm2(ig) = x204
      ng2(ig) = n402
      end if
      if(i2.eq.0) go to 40
      i11=min(i1,i2)
      i12=max(i1,i2)
      j11=min(j1,j2)
      j22=max(j1,j2)
      if(j1.eq.-1) i11=1
      if(j1.eq.-1) i12=(i2-i1)/j2
      if(j1.eq.-1) j11=1
      if(j1.eq.-1) j22=1
      itr=i1
      do 686 i=i11,i12
      do 686 j=j11,j22
      itr=itr+j2
      if(j1.ne.-1) itr=node(i,j)
      if(itr.eq.ig) go to 686
      xm2(node(i,j)) = x204
      ng2(node(i,j)) = n402
  686 continue
      go to 40
  900 continue
      write (output,1000)
      line = 4
      do 904 jj = 1,numnp,3
      j = jj+2
      if(j.gt.numnp) j=numnp
      write (output,1001)(n,xm2(n),ng2(n),n=jj,j)
      line = line + 1
      linea = line
      if(line .ge. 55) call hdwr(line)
      if(linea .ge. 55) write (output,1000)
  904 continue
      if (ngenm .gt. 0) then
        read (eoin,1007)    (ngnm(i),i=1,ngenm)
        write (output,2039) (ngnm(i),i=1,ngenm)
      end if
      write (output,4053)
      do 31 jj = 1,numel
      call volnod(jj,i,j,k,l,mtl,ix,r,z,volume,volump)
      do 28 ii = 1,4
      evol(jj) = evol(jj) + volump(ii)
      vole(ii,jj) = volump(ii)
   28 continue
      if (ngenm .gt. 0) then
        do 520 ng = 1,ngenm
        if (mtl .eq. ngnm(ng)) go to 521
  520   continue
      end if
      bv(i) = bv(i) + volump(1)
      bv(j) = bv(j) + volump(2)
      bv(k) = bv(k) + volump(3)
      if (k .ne. l) then
        bv(l) = bv(l) + volump(4)
      end if
  521 continue
      write (output,4054) jj,i,volump(1),j,volump(2),k,volump(3),l,
     * volump(4),evol(jj)
   31 continue
      line = 4
      write (output,5000)
      do 905 jj = 1,numnp,4
      j = jj+3
      if(j.gt.numnp) j = numnp
      write (output,5001)(n,volume(n),bv(n),n=jj,j)
      line = line + 1
      linea = line
      if(line.ge.55) call hdwr(line)
      if(linea.ge.55) write (output,5000)
  905 continue
      write (output,1020)
 1020 format ('0 Note - above volumes are for 1 radian, not 2 pi.'/
     1        '         bv = power producing volume assoc. with node.')
 1007 format(16i5)
 2039 format(39h0  no internal generation for materials,15i5)
 1003 format(4i5,e10.0,i5)
 1000  format (2(' node    volumetric heat',4x,'table for',15x)/
     * 2(' number   generation rate',4x,'generation',14x)/
     * 2(10x,'or multiplier',31x))
 1001 format (1p,2(i7,e20.7,i14,10x))
 4053 format('    el     node   volume      node   volume      node   vo
     +lume      node   volume       evolum ')
 4054 format(1x,i5,4(2x,i5,2x,1p,e10.3),5x,e10.3)
 5000 format('  node    volume        bv         node    volume        b
     +v         node    volume        bv         node    volume       bv
     + ')
 5001 format(4(i5,3x,1p,e10.3,2x,e10.3,3x))
      return
      end
*endif
