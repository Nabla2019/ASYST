*mlist
*if def,selap
       subroutine baxcon(i,k,j)
!  baxcon determines the axial heat conduction in the canister and
!  control blade (from/to the node above and from/to the node below).
!
!  Cognizant engineer: ewc (ljo fpg).
!
!******************************************************************
!     baxcon              1-jan-92
!
!     the BWR canister/control blade modules were developed at ORNL
!     by L.J.Ott under the auspices of the NRC sponsored Boiling
!     Water Reactor Severe Accident Technologies programs.
!
!     for information or assistance, call
!                 L.J.Ott (fts)-624-0324 or (615)-574-0324
!                 F.P.Griffin (fts)-626-4684 or (615)-576-4684
!
!******************************************************************
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
       real(kr) cond1,dum1,condi,condi1,hdzm,hdzp,athcon,sthcon
       integer i,j,k
       include 'contrl.h'
       include 'scddat.h'
       include 'axtrns.h'
       include 'blinit.h'
       include 'cboilx.h'
!
      if(i.eq.ndz(j))go to 10
      hdzp=0.5*hdz(i+1,j)
      hdzm=0.5*hdz(i,j)
!-**-compute axial conduction from core node (i+1,j) to core node (i,j)
!----canister
      if(scn(i+1,k,j).ne.0.0.and.scn(i,k,j).ne.0.0)then
!  use conversions of k = (f + 459.67)/1.8
!  and btu/h/ft/f = w/m/k / 1.730735
         if (chngno(70)) then
           call cthconr((tboxo(i+1,k,j)+459.67)/1.8,cond1,dum1)
         else
           call cthcon((tboxo(i+1,k,j)+459.67)/1.8,cond1,dum1)
         endif
         condi1=cond1/1.730735
         if (chngno(70)) then
           call cthconr((tboxo(i,k,j)+459.67)/1.8,cond1,dum1)
         else
           call cthcon((tboxo(i,k,j)+459.67)/1.8,cond1,dum1)
         endif
         condi =cond1/1.730735
         qbxaxp(k)=(tboxo(i+1,k,j)-tboxo(i,k,j))/
     *             (hdzp/csabox(k,j)/condi1+
     *              hdzm/csabox(k,j)/condi)
         qbxaxp(k)=qbxaxp(k)/hdz(i,j)
      else
         qbxaxp(k)=0.0
      end if
!----control blade
      if(k.eq.2)go to 20
      if(scb(i+1,j).ne.0.0.and.scb(i,j).ne.0.0)then
         if(icb(i+1,3,j).eq.1.and.icb(i,3,j).eq.1)then
!  use conversions of k = (f + 459.67)/1.8
!  and btu/h/ft/f = w/m/k / 1.730735
            condi1=sthcon((tcb3o(i+1,j)+459.67)/1.8)/1.730735
            condi =sthcon((tcb3o(i,j)+459.67)/1.8)/1.730735
            qcbaxp(3)=(tcb3o(i+1,j)-tcb3o(i,j))/
     *                (hdzp/csasso(j)/condi1+
     *                 hdzm/csasso(j)/condi)
            qcbaxp(3)=qcbaxp(3)/hdz(i,j)
         else
            qcbaxp(3)=0.0
         end if
         if(icb(i+1,2,j).ge.1.and.icb(i,2,j).ge.1)then
!  use conversions of k = (f + 459.67)/1.8
!  and btu/h/ft/f = w/m/k / 1.730735
            condi1=sthcon((tcb2o(i+1,j)+459.67)/1.8)/1.730735
            condi =sthcon((tcb2o(i,j)+459.67)/1.8)/1.730735
            qcbaxp(2)=(tcb2o(i+1,j)-tcb2o(i,j))/
     *                (hdzp/csassi(j)/condi1+
     *                 hdzm/csassi(j)/condi)
            qcbaxp(2)=qcbaxp(2)/hdz(i,j)
         else
            qcbaxp(2)=0.0
         end if
         if(icb(i+1,1,j).eq.1.and.icb(i,1,j).eq.1)then
!  use conversions of k = (f + 459.67)/1.8
!  and btu/h/ft/f = w/m/k / 1.730735
            condi1=athcon(2,(tcb1o(i+1,j)+459.67)/1.8)/1.730735
            condi =athcon(2,(tcb1o(i,j)+459.67)/1.8)/1.730735
            qcbaxp(1)=(tcb1o(i+1,j)-tcb1o(i,j))/
     *                (hdzp/csab4c(j)/condi1+
     *                 hdzm/csab4c(j)/condi)
            qcbaxp(1)=qcbaxp(1)/hdz(i,j)
         else
            qcbaxp(1)=0.0
         end if
      else
         qcbaxp(3)=0.0
         qcbaxp(2)=0.0
         qcbaxp(1)=0.0
      end if
      go to 20
   10 qbxaxp(k)=0.0
      qcbaxp(3)=0.0
      qcbaxp(2)=0.0
      qcbaxp(1)=0.0
!-**-compute axial conduction from core node (i-1,j) to core node (i,j)
   20 if(i.eq.1)go to 30
!----canister:
      qbxaxm(k)=-qbsav(k)/hdz(i,j)
!----control cblade:
      if(k.ne.2)then
         qcbaxm(3)=-qcbsav(3)/hdz(i,j)
         qcbaxm(2)=-qcbsav(2)/hdz(i,j)
         qcbaxm(1)=-qcbsav(1)/hdz(i,j)
      end if
      go to 40
   30 qbxaxm(k)=0.0
      qcbaxm(3)=0.0
      qcbaxm(2)=0.0
      qcbaxm(1)=0.0
!-**-save the q--axp terms, since they will be the q--axm terms
!    for the next nodal calculation.
   40 qbsav(k)=qbxaxp(k)*hdz(i,j)
      if(k.ne.2)then
         qcbsav(3)=qcbaxp(3)*hdz(i,j)
         qcbsav(2)=qcbaxp(2)*hdz(i,j)
         qcbsav(1)=qcbaxp(1)*hdz(i,j)
      end if
      return
      end
*endif
