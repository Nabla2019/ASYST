*mlist
c
c
c  zsf1df performs deflation of the function perturbing known roots
c  as necessary to allow convergence to multiple zeros.
c
c  Cognizant engineer: ewc.
c
c  ...1...  arguments / parameters / constants  .......
c  ...2...  notes / remarks  .......
*if def,selap
       subroutine zsf1df (fcn, x, f, fsave, z, k, eps, nfev)
c
       implicit none
      external fcn
      integer nfev
       integer k
      real fcn, x, f, fsave, z(k), eps
c
c  ...1...  function / purpose  .......
c
c       performs deflation of the function, perturbing known roots
c       as necessary to allow convergence to multiple zeros
c  ...2...  arguments / parameters / constants  .......
c     ..a..  input arguments  .....
c          fcn  e  - user supplied function subprogram which evaluates
c              f(z) for any z; must be declared external in the
c              calling program
c          x  r:1  - current approximation to a root
c          f  r:1  - current value of the function
c          z  r:k  - vector of roots already known
c          k  i:1  - number of roots already known
c          eps  r:1  - absolute tolerance for checking distance from x
c              to z(i)
c          nfev  i:1  - number of function evaluations
c     ..b..  output arguments  .....
c          x - (possibly) perturbed approximation to a root
c          f - deflated value of the function
c          fsave  r:1  - function value at x
c          nfev - number of function evaluations
c     ..c..  internal / local variables  .....
      integer i
      real dif, p01
c     ..d..  external / subprogram references  .....
c          intrinsic function - abs
       external zsf1sl
c     ..e..  constants  .....
      data p01 /0.01e0/
c  ...3...  notes / remarks  .......
c     ..a..  usage  .....
c     ..b..  algorithm  .....
c          (1) if x is the current approximation to a root
c          and z is a vector of roots already known, the
c          deflated function value is
c                f = (...((f/(x-z(1)))/(x-z(2)))/...)
c          (2) if a current approximation to a root is 'too close'
c          to a root already known, x is perturbed away from
c          the known root by 0.01. this device avoids division
c          by (essentially) zero in the deflation process, but it
c          does not prevent convergence to multiple zeros.
c     ..c..  portability  .....
c     ..d..  references  .....
c          (1) d.e. muller, a method of solving algebraic equations
c          using an automatic computer, math tables aids comp 10(1956),
c          pp208-215.
c          (2) i. barrodale and k.b. wilson, a fortran program for
c          solving a nonlinear equation by muller's method,
c          j. comput. appl. math. 4(1978), pp159-166.
c     ..e..  history  .....
c          origin - roots - (2)
c          modified - header, structure - e.s. marwil, 12/1/81
c
   10 continue
         do 20 i = 1, k
            dif = x - z(i)
            if (abs(dif) .le. eps) go to 30
            f = f / dif
   20       continue
         go to 40
   30 continue
         x = x + p01
         f = fcn (x)
         fsave = f
         nfev = nfev + 1
         go to 10
   40 continue
      return
      end
*endif
