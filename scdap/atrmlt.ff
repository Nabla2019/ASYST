*mlist
*if def,selap
      subroutine atrmlt (idflg,mflag,huss,visc,
     +  delt,slbwd,dzcond,dtms,hcm,rat1,rat2,c,told,cm,tm,
     +  tnew,cfmo,cfmo1,cfmo2,cfmlt,cfmlt1,cfmlt2,
     +  rhom,ifmelt,timem )
c
c
c  this routine calculates melting and relocation for atr cladding and
c  fuel material
c
c Cognizant engineer: ewc.
c
c  idflg -  for cladding, idflg=1; for fuel, idflg=2
c  mflag -  for top of relocating node, mflag=0 (i/o)
c  rat1, rat2  - mass fractions within a melt (i/o)
c  dtms - mass relocated in/out from current node (i/o)
c  hcm - specific internal energy of relocaed material (i/o)
c  c, cm - specific heat at old temp. (i/o)
c  cfmo,cfmo1cfmo2-mass of total and each components (i/o
c  cfmlt,cfmlt1,cfmlt2,-mass of molten material (i/o)
c
       implicit none
*call scddat
*call scdcom
c
c  Local variables.
       integer idflg,ifmelt,mflag
      integer icmat,ifmat,ifomat,icomat
       real a1,a2,a3,a4,c,cfmo,cfmo1,cfmo2,cfmlt,cfmlt1,
     * cfmlt2,cm,delt,dtms,dzcond,engy,hcm,huss,r1,
     * rat1,rat2,rhom,slbwd,thick,
     * timem,tm,tnew,told,veldt,visc
      real fnro
      external fnro
c
      if (mflag.eq.0) then
        dtms = 0.0
        tnew = told
      else
        engy = cfmo * c * told + dtms * hcm
        cfmo = cfmo + dtms
        cfmo1 = cfmo1 + dtms*rat1
        cfmo2 = cfmo2 + dtms*rat2
        tnew = engy / (cfmo*c)
      endif
c
      rat1 = cfmo1/cfmo
      if (idflg.eq.1) then
        rat2 = max( 0.0,1.0-rat1 )
      else
        rat2 = cfmo2/cfmo
      endif
c
      mflag = 0
c  icmat = material number for clad
c  icomat = material number for clad oxide
c  ifmat = material number for fuel
      icmat=imater(1,icomp)
      ifmat=imater(2,icomp)
      ifomat=ifmat
      if (icmat .eq. 15) then
        icomat=16
      else
        icomat=icmat
      endif
      if (idflg.eq.1) then
        rhom = (fnro(icmat,tnew)*fnro(icomat,tnew))/
     +        (rat1*fnro(icomat,tnew)+rat2*fnro(icmat,tnew))
      else
        r1 = fnro(icmat,tnew)*fnro(icomat,tnew)*fnro(ifmat,tnew)
     +       *fnro(ifomat,tnew)
        a1 = rat1*fnro(icomat,tnew)*fnro(ifmat,tnew)*fnro(ifomat,tnew)
        a2 = rat2*fnro(icmat,tnew)*fnro(ifmat,tnew)*fnro(ifomat,tnew)
        a3 = 0.0
        a4 = 0.0
        rhom = r1/(a1+a2+a3+a4)
      endif
      if (tnew.le.tm) then
        timem = 0.0
        dtms = 0.0
        hcm = c*tnew
        cfmlt = 0.0
        cfmlt1 = 0.0
        cfmlt2 = 0.0
      else
        if (ifmelt.eq.1) then
          timem = timem + delt
          cfmlt = cfmo
          thick = cfmlt/(rhom*slbwd*dzcond)
          veldt = max(4.9*timem**2,rhom*thick**2/visc*3.26667*timem)
          veldt = min(dzcond,veldt)
          dtms = min(cfmlt,rhom*veldt*slbwd*thick)
          hcm = c*tnew + huss
          cfmo = max(0.0,cfmo - dtms)
          cfmo1 = max(0.0,cfmo1 - dtms*rat1)
          cfmo2 = max(0.0,cfmo2 - dtms*rat2)
          mflag = 1
        endif
        cfmlt = cfmo
        cfmlt1 = cfmo1
        cfmlt2 = cfmo2
      endif
      return
      end
*endif
