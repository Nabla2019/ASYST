*mlist
*if def,selap
       subroutine cdfint
c
c  cdfint initializes the input/output data for the cladding
c  deformation model.
c
c  Cognizant engineer: ewc (ghb).
c
c  clddfm.
c calling suboruitnes:  dainit
c
       implicit none
*call scddat
*call cons
*call cdfinc
*call balfar
*call ndxara
*call scdcom
*call scdout
*call ufiles
c
c  Local variables.
       integer i,j,m
       real rmax,rmin1,t1
c
      do  100  j = 1 , ncomp
       if(idcomp(j).eq.0.or.idcomp(j).eq.6)then
              do  80  i = 1,naz
                  cfnckc( i,j ) = 0.0
                  cfncnc( i,j ) = 0.0
                  ccwnfc( i,j ) = 0.04
                  caadc ( i,j ) = 0.5
                  cacdc ( i,j ) = 0.5
                  cardc ( i,j ) = 0.5
                  cfapc ( i,j ) = 0.06
                  cfcpc ( i,j ) = 0.28
                  cfrpc ( i,j ) = 0.66
                  eplasc( i,j ) = 0.0001
                  edotc ( i,j ) = 0.0
                  etruc ( i,j ) = 0.0
                  dxcfrc( i,j ) = 0.0
                  cepc  ( i,j ) = 0.0
                   blkeyc(i,j) = 0.0
                   rfarc(i,j) = rco2(1,j)
                  do  50  m = 1,3
                      ceppc ( i,m,j ) = 0.0
                      cepsc ( i,m,j ) = 0.0
                      deppc ( i,m,j ) = 0.0
   50            continue
   80        continue
          ii(j)       = 0
          icladf( j ) = 0
          ical0c( j ) = 0
          nbnclc( j ) = 0
          cldt0c( j ) = 300.0
       cinwdc(j) = rcos(j) - rcii(j)
       careac(j) = pi*(rcos(j)**2 - rcii(j)**2)
       raraic(j) = pi*rcos(j)**2
          faraic( j ) = pitch( j ) ** 2 - raraic( j )
          rminc(j)    = (rco2(1,j) + rci2(1,j)) * .5
      rmax=pitch(j) * sqrt(0.93/pi)
          t1          = rmax - ( rmax ** 2 - careac( j ) / pi) ** 0.5
          rmin1       = rmax - t1 * 0.5
          hopmxc( j ) = log( 1.0 + ( rmin1 - rminc( j )) / rminc( j ))
          t1          = (rpel2(1,j)**2 + careac(j)/pi)**.5 - rpel2(1,j)
          rmin1       = rpel2(1,j) + t1 * .5
          hopmnc( j ) = log( 1.0 + ( rmin1 - rminc( j )) / rminc( j ))
          cfluxc( j ) = 0.0
          endif
  100 continue
      return
      end
*endif
