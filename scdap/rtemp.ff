*mlist
*in32 idat
*in32end
       subroutine rtemp(uplimt)
c
c  Process initial temperature data
c
c  Cognizant engineer: ewc.
c
       use scdmod
       implicit none
       include 'fast.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'ufiles.h'
       include 'scddat.h'
       include 'ndxara.h'
       include 'scdcom.h'
       include 'scdout.h'
      integer l3(ndrd+7),knt,inode,iknt,irad
      real uplimt
      real rdat((ndrd+1)*ndax)
      integer idat((ndrd+1)*ndax)
      equivalence (rdat(1),idat(1))
      external inp2,prntt2
      l3(1)=scd1(icomp)%cmpno*10000 + 40000601
      l3(2)=-l3(1)-98
      l3(3)=nrods2(1,icomp)+1
      l3(4)=naz*l3(3)
      l3(5)=0
      l3(6)=1
      l3(7)=l3(3)
      do knt=1,nrods2(1,icomp)
        l3(7+knt)=1
      enddo
      l3(8+nrods2(1,icomp))=0
      call inp2(fa(filndx(1)),rdat,l3)
      if(mod(l3(6),nrods2(1,icomp)+1).ne.0)then
        write(output,3000)l3(1),-l3(2),l3(6),nrods2(1,icomp)+1
 3000 format(/,'0******** Error - number of words read on cards ',
     #  i9,' to ',i9/'           was ',i2,' but should have been',
     #  ' a multiple of ',i2)
        write(output,2000)
 2000 format(/,'Setting to default values for continued processing.')
        do inode=1,naz
          do knt=1,nrods2(1,icomp)
            tcond3(knt,inode,icomp)=500.
          enddo
        enddo
        fail=.true.
      else
        knt=1
        iknt=1
  676   if(knt*(nrods2(1,icomp)+1).le.l3(6))then
          do inode=iknt,idat(knt*(nrods2(1,icomp)+1))
            do irad=1,nrods2(1,icomp)
              tcond3(irad,inode,icomp)=
     #           rdat((knt-1)*(nrods2(1,icomp)+1)+irad)
              if(.not.uniti)tcond3(irad,inode,icomp)=
     #             (tcond3(irad,inode,icomp)+459.67)/1.8
              tcnd03(irad,inode,icomp)=tcond3(irad,inode,icomp)
            enddo
          enddo
          iknt=idat(knt*(nrods2(1,icomp)+1))+1
          knt=knt+1
          goto 676
        endif
      endif
      call prntt2
c error checking
      do inode=1,naz
        do knt=1,nrods2(inode,icomp)
          if(tcond3(knt,inode,icomp).lt.300.0 .or.
     #       tcond3(knt,inode,icomp).gt.uplimt)then
            write(output,2080)inode,knt,uplimt
 2080 format(/,'$$$$$$$$ Warning - axial node',i3,
     #   ' radial node',i3,' outside limits of 300 K and ',f5.0,' K.')
          endif
        enddo
      enddo
      return
      end
