*mlist
*if def,selap
       subroutine upsout
c
c  this subroutine produces the printed output for the upper plenum
c  structures
c
c  Cognizant engineer: ljs (fpg).
c
       implicit none
*call scddat
*call upccon
*call upcvar
*call ufiles
*call contrl
c
c  local variables (must be defined every call)
c
c  is      index that represents current upper plenum structure number
c  iax     index that represents current upper plenum axial level number
c  icn     index that represents current upper plenum conduction node
c          number
       real ytmp(nmupcn)
       real cmft,   ckf1, ckf2,   ckglb,     cwbtus
       data cmft,   ckf1, ckf2,   ckglb,     cwbtus
     &     /0.3048, 1.8,  459.67, 0.4535924, 1055.056/
       integer is, iax, icn
c
       if(ntups.ge.1) then
         do 10 is=1,ntups
c  print header
           write(output,2000) is,timehy
 2000      format('1Upper plenum structure number',i3,' at time',f9.1,
     &     ' sec'/)
c  print temperatures
           if(unito) then
             write(output,2005) '(K)'
           else
             write(output,2005) '(F)'
           endif
 2005      format(' Axial  Nodal temperatures ',a/
     &            ' level             __crust__  _intact_(1_or_more)_',
     &            '  __crust__')
           do 1010 iax=ntupax(is),1,-1
             do 1020 icn=1,ntupcn(iax,is)
               if(unito) then
                 ytmp(icn)=tups(icn,iax,is)
               else
                 ytmp(icn)=tups(icn,iax,is)*ckf1-ckf2
               endif
               if(icn.lt.iupls(iax,is)) ytmp(icn)=0.0
               if(icn.gt.iuprs(iax,is)) ytmp(icn)=0.0
 1020        continue
             write(output,2010) iax,(ytmp(icn),icn=1,ntupcn(iax,is))
 2010        format(' ',i4,12x,8f11.2)
 1010      continue
c  print masses
           if(unito) then
             write(output,2020) '(kg)'
           else
             write(output,2020) '(lbm)'
           endif
 2020      format(/' Axial  Nodal masses ',a,' of metal and oxides'/
     &             ' level  __oxides_  __crust__  _intact_(1_or_more)_',
     &                   '  __crust__  __oxides_')
           do 1030 iax=ntupax(is),1,-1
             if(unito) then
               write(output,2030) iax,mxupls(1,iax,is),
     &         (mmups(icn,iax,is),icn=1,ntupcn(iax,is)),
     &         mxuprs(1,iax,is)
             else
               write(output,2030) iax,mxupls(1,iax,is)/ckglb,
     &         (mmups(icn,iax,is)/ckglb,icn=1,ntupcn(iax,is)),
     &         mxuprs(1,iax,is)/ckglb
             endif
 2030        format(' ',i4,1x,1p,10e11.3)
 1030      continue
c  print lengths
           if(unito) then
             write(output,2040) '(m)'
           else
             write(output,2040) '(ft)'
           endif
 2040      format(/' Axial  Nodal lengths ',a,' of metal and oxides'/
     &             ' level  __oxides_  __crust__  _intact_(1_or_more)_',
     &                   '  __crust__  __oxides_')
           do 1040 iax=ntupax(is),1,-1
             do 1050 icn=1,ntupcn(iax,is)
               ytmp(icn)=lups(icn,iax,is)
 1050        continue
             if(iupls(iax,is).gt.0) ytmp(iupls(iax,is))=
     &       ytmp(iupls(iax,is))-lxupls(iax,is)
             if(iuprs(iax,is).gt.0) ytmp(iuprs(iax,is))=
     &       ytmp(iuprs(iax,is))-lxuprs(iax,is)
             if(unito) then
               write(output,2030) iax,lxupls(iax,is),
     &         (ytmp(icn),icn=1,ntupcn(iax,is)),
     &         lxuprs(iax,is)
             else
               write(output,2030) iax,lxupls(iax,is)/cmft,
     &         (ytmp(icn)/cmft,icn=1,ntupcn(iax,is)),
     &         lxuprs(iax,is)/cmft
             endif
 1040      continue
c  print relocation of liquid metal and oxides
           if(unito) then
             write(output,2050) '(kg)'
           else
             write(output,2050) '(lbm)'
           endif
 2050      format(/' Axial  Masses ',a,' of relocating liquids',
     &             ' on surfaces'/
     &             ' level  ________left________  _________top________',
     &                   '  ________right_______'/
     &             '        __metal__  __oxides_  __metal__  __oxides_',
     &                   '  __metal__  __oxides_')
           do 1060 iax=ntupax(is),1,-1
             if(isoups(iax,is).eq.0)then
               if(unito) then
                 write(output,2030) iax,
     &           mlupl(iax,is),mxlupl(1,iax,is),
     &           0.0,0.0,mlupr(iax,is),mxlupr(1,iax,is)
               else
                 write(output,2030) iax,
     &           mlupl(iax,is)/ckglb,mxlupl(1,iax,is)/ckglb,
     &           0.0,0.0,mlupr(iax,is)/ckglb,mxlupr(1,iax,is)/ckglb
               endif
             else
               if(unito) then
                 write(output,2030) iax,
     &           mlupl(iax,is),mxlupl(1,iax,is),
     &           mlupr(iax,is),mxlupr(1,iax,is),0.0,0.0
               else
                 write(output,2030) iax,
     &           mlupl(iax,is)/ckglb,mxlupl(1,iax,is)/ckglb,
     &           mlupr(iax,is)/ckglb,mxlupr(1,iax,is)/ckglb,0.0,0.0
               endif
             endif
 1060      continue
           if(unito) then
             write(output,2060) mlupl(0,is),mxlupl(1,0,is),
     &       mluph(is),  mxluph(1,is),
     &       mlupr(0,is),mxlupr(1,0,is)
           else
             write(output,2060) mlupl(0,is)/ckglb,mxlupl(1,0,is)/ckglb,
     &       mluph(is)/ckglb,  mxluph(1,is)/ckglb,
     &       mlupr(0,is)/ckglb,mxlupr(1,0,is)/ckglb
           endif
 2060      format(' below',1p,6e11.3)
c  print heat transfer rates
           if(unito) then
             write(output,2070) '(W)'
           else
             write(output,2070) '(Btu/s)'
           endif
 2070      format(/' Axial  Heat transfer rates ',a,' to surfaces'/
     &             ' level  ______________left or bottom______________',
     &                   '  _______________right or top_______________'/
     &             '        _convect_  _radiate_  _oxidize_  _solidify',
     &                   '  _convect_  _radiate_  _oxidize_  _solidify')
           do 1070 iax=ntupax(is),1,-1
             if(unito) then
               write(output,2030) iax,
     &         -qupl(iax,is), qrupls(iax,is),
     &         qoupls(iax,is),qsupls(iax,is),
     &         -qupr(iax,is), qruprs(iax,is),
     &         qouprs(iax,is),qsuprs(iax,is)
             else
               write(output,2030) iax,
     &         -qupl(iax,is)/cwbtus, qrupls(iax,is)/cwbtus,
     &         qoupls(iax,is)/cwbtus,qsupls(iax,is)/cwbtus,
     &         -qupr(iax,is)/cwbtus, qruprs(iax,is)/cwbtus,
     &         qouprs(iax,is)/cwbtus,qsuprs(iax,is)/cwbtus
             endif
 1070      continue
c  print blank line
           write(output,2080)
 2080      format(' ')
   10    continue
       endif
       return
       end
*endif
