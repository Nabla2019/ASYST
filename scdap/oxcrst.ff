*mlist
*if def,selap
       subroutine oxcrst(ngeom,wfrozr,deltc,rocrst,rco,tsur,oxrat0,
     + oxlim0,height,oxdwf0,noxzr,oxdwf,oxdhf)
c
c
c  oxcrst computes the oxidation of a frozen u-zr-o crust.
c
c  Cognizant engineer: cma.
c
c     calling subroutines:  oxidiz
c     subroutines called:   snfunc,vfunc
c     engineer/programmer:  c allison
c
c     input variables                  description
c        deltc          component time step (s)
c        height         height which is oxidized (m)
c        ngeom          geometry index for oxidation, 1=slab
c                         2=cylinder, 3=sphere
c        oxdwf0         oxide weight gain in frozen film from previous
c                         time step (kg)
c        oxlim0         oxidation steam starvation rate limit for
c                         previous time step (kg/s)
c        oxrat0         oxidation rate limit ratio for previous time
c                         step
c        rco            radius to outside cladding surface  (m)
c        rocrst         average outer radius of frozen zry-uo2 on
c                         outside of cladding in axial zone  (k)
c        tsur           current temperature of fuel rod surface  (k)
c        wfrozr         mass of zr which has dripped into axial zone and
c                         frozen there  (kg)
c        zrheat         heat of reaction used in heat generation
c                         calculation (j/kg)
c
c     i/o variables                    description
c        oxdwf          oxide weight gain in frozen film (kg)
c
c     output variables                 description
c        noxzr          oxidation flag, if nozero oxidation is
c                       complete
c        oxdhf          frozen film oxidation heat generation (w/m3)
c
c     local variables                  description
c        area           surface area (m2)
c        volum          volume (m3)
c        wtlimf         weight gain limit in frozen film (kg)
c
c ---------------------------- oxcrst outline -------------------
c
c :compute d(weight gain)/dt
c :compute weight gain
c :apply oxidation rate limits
c :compute weight gain limit
c :if: weight gain is .gt. weight gain limit
c     :then:
c        :set weight gain to weight gain limit
c :endif:
c :compute heat generation rate
c :return:
c
       implicit none
c
       integer ngeom,noxzr
       real wfrozr,deltc,rocrst,rco,tsur,oxrat0,oxlim0,height,oxdwf0,
     * oxdwf,oxdhf
*call cmatp
*call ufiles
*call contrl
c
c  Local variables.
       real area,volum,wtlimf,ydot
       real snfunc,vfunc
       external snfunc,vfunc
c
      area = snfunc(ngeom,rocrst,height,1.0)
      volum = vfunc(ngeom,rocrst,rco,height,1.0)
      if(tsur .le. 273. .or. tsur .gt. 4000.) then
        write (output,'(a,e15.3)') '0tsur (out of range in oxcrst) = ',
     * tsur
        write (output,'(a)') '0please reduce time step and resubmit'
          fail = .true.
          return
      endif
       ydot=0.0
      oxdwf = sqrt( ydot * deltc * area ** 2  + oxdwf0 ** 2 )
      oxdwf = oxrat0 * (oxdwf - oxdwf0) + oxdwf0
      if(( oxdwf - oxdwf0) .gt. oxlim0 * deltc)
     + oxdwf = oxlim0 * deltc + oxdwf0
      wtlimf = (32.0 / 91.22) * wfrozr
      if(oxdwf .gt. wtlimf) then
        oxdwf = wtlimf
        noxzr = 1
      endif
      oxdhf = (91.22 / 32.0) * zrheat * (oxdwf - oxdwf0) /
     +        deltc
      oxdhf = oxdhf / volum
      return
      end
*endif
