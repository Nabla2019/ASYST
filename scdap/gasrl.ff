*mlist
*if def,selap
      subroutine gasrl(atemp,dtime,afp,bfp,tfp,xfp,sizes,sizel,
     *      topa,v,vconv,p,nu,an,afs,nspdeb,idsdeb)
c
c  gasrl calculates release incremednts of krypton, xenon, iodine,
c  cesium cadmium, zinc, and zinc iodide from a volume of ualx fuel
c  or debris with a liquid phase and ualx.
c
c  Cognizant engineer: dlh.
c
c This is a COUPLE ROUTINE
*in32 idsdeb
*in32end
c
      implicit none
c
      integer nspdeb
      real atemp, dtime, p, sizel, sizes, topa, v, vconv
c
c
c     atemp   = input average temperature during the time
c                   increment considered (k)
c
c     dtime   = input time increment for which releases
c              are to be calculated (s)
c     afp(n)   = output mass of n th species vapor
c              or noncondensable gas released
c              during the time increment (kg).
c              species identification is dynamic and
c              described with the variables nspdeb and
c              idsdeb.
c
c     bfp(n,l)   = input/output mass of n th species
c              vapor or noncondensable gas
c              in bubble size l at start/end of
c              time increment (kg).
c              species identification is dynamic and
c              described with the variables nspdeb and
c              idsdeb.
c
c     tfp(n)   = input/output total mass of n th species
c              vapor or noncondensable gas at
c              start/end of time increment (kg).
c              species identification is dynamic and
c              described with the variables nspdeb and
c              idsdeb.
c
c     xfp(n,l)   = output mass of n th species
c                   vapor or noncondensable gas
c                   released from the volume element
c                   during the time increment (kg).
c                   species identification is dynamic and
c                   described with the variables nspdeb and
c                   idsdeb.
c
c     sizes   = input solid fuel dimension (m)
c
c     sizel   = input liquid phase dimension (diameter) (m)
c
c     topa   = input component of liquid surface area normal
c              to acceleration of gravity with access to
c              effluent (m**2)
c
c     v    = input volume fuel or debris considered (m**3)
c
c     vconv   = input liquid pool convection velocity (m/s)
c
c     p    = input pressure (pa)
c
c     nu   = input top nusselt number for mass transport
c              (unitless)
c
c     an(l)   = input/output number concentration of
c              bubble size l (m**(-3))
c                   this array must be initialized to
c                   0.0 before the first call to gasrl
c
c     afs         = faction of soil in element
c
c
c     nspdeb   = input number of species to be tracked in
c              debris bed.
c
c     idsdeb(n)  = input array of indicies that specify which
c              species are to be tracked in the debris bed.
c              n varies between 1 and nspdeb and the values
c              of idsdeb(n) denote the following species in
c              any order.
c
c               idsdeb =  1 for iodine
c               idsdeb =  2 for cesium iodide
c               idsdeb =  3 for cesium hydroxide
c               idsdeb =  4 for tellurium
c               idsdeb =  5 for hydrogen iodide
c               idsdeb =  6 for hydrogen telluride
c               idsdeb =  7 for cadmium
c               idsdeb =  8 for silver
c               idsdeb =  9 for uranium dioxide
c               idsdeb = 10 tin
c               idsdeb = 11 iron (not currently modeled)
c               idsdeb = 12 ruthenium (not currently modeled)
c               idsdeb = 13 barium (not currently modeled)
c               idsdeb = 14 antimony (not currently modeled)
c               idsdeb = 15 cse elemental cesium
c               idsdeb = 16 ie ?????? (not currently modeled)
c               idsdeb = 17 zinc
c               idsdeb = 18 xenon
c               idsdeb = 19 krypton
c               idsdeb = 20 zinc iodide (not currently
c                an input option but gasrl is ready to
c                release this species)
c
c     gasrl was coded by d. l. hagrman october 4, 1989
c     last modified on june 25, 1990.  rev 15
*call bsize
c
       integer idsdeb(22)
       real afp(22), bfp(22,15), tfp(22)
      real nu
c
       real anonc(10),acon(20),an(15),bnonc(10,15),bcon(20,15),
     # tnonc(10),tcon(20),afs
c
       real xnonc(10,15), xcon(20,15), xfp(nspdeb,15)
c
      external rl, shfin, shfout
      save
c
c     convert afp(n) to anonc(i) and acon(k),
c              bfp(n,l) to bnonc(i,l) and bcon(k,l), and
c              tfp(n) to tnonc(i) and tcon(k)
      call shfin(anonc,acon,bnonc,bcon,tnonc,tcon,afp,bfp,tfp,
     # xnonc, xcon, nspdeb, idsdeb)
c
c     call the static dimensioned model
      call rl(anonc,acon,xnonc,xcon,dtime,atemp,sizes,sizel,
     #   topa,v,vconv,p,nu,an,bnonc,bcon,tnonc,tcon,afs)
c
c     convert  anonc(i) and acon(k) to afp(n),
c              bnonc(i,l) and bcon(k,l) to bfp(n,l),
c              tnonc(i) and tcon(k) to tfp(n), and
c              xnonc(i,l) and xcon(k,l) to xfp(n,l)
      call shfout(afp,bfp,tfp,xfp,anonc,acon,bnonc,bcon,
     #                  tnonc,tcon,xnonc,xcon,nspdeb,idsdeb)
c
      return
      end
*endif
