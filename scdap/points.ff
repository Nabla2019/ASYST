*mlist
*if def,selap
       subroutine points (imin,imax,ar,az,r,z)
c
c  Points prints nodal point data.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
*in32 imin
*in32 imax
*in32end
c
$if def,gui,2
       use hynmod, only: cplmaxi,cplmaxj,cplmaxnp,cplimin,cplimax,
     & cplnod,cplmins,cplmaxs,cplr,cplz,cpler,cplez,cplww,cpleww
       implicit none
*call iparm
*call ufiles
c
       integer imin(*),imax(*)
       real ar(*),az(*),r(*),z(*)
c
c  Local variables.
       real xyr(3),xyz(3)
       integer i,ii,j,k,l,linea,nii(3),njj(3),nod(3),node,np,nstart,
     & nstop,nstopp
c
       call titl
       write (output,"('0 Mesh output data')")
c
c  Establish nodal point information.
$if def,gui,1
       cplmaxnp = 0
       do j = 1,maxj
         nstart = imin(j)
         nstop = imax(j)
         do i = nstart,nstop
           np = node(i,j)
$if def,gui,1
           cplmaxnp = max(cplmaxnp,np)
           l = i + (j - 1)*maxi
           r(np) = ar(l)
           z(np) = az(l)
         enddo
       enddo
$if def,gui
       cplmaxi = maxi
       cplmaxj = maxj
       allocate (cplr(cplmaxnp),cplz(cplmaxnp),
     & cpler(cplmaxi-1,cplmaxj-1),cplez(cplmaxi-1,cplmaxj-1),
     & cplww(2,cplmaxnp),cpleww(2,cplmaxi-1,cplmaxj-1),
     & cplimin(cplmaxj),cplimax(cplmaxj),cplnod(cplmaxi,cplmaxj))
       cplr = r(1:cplmaxnp)
       cplz = z(1:cplmaxnp)
       cplmins = min(minval(cplr),minval(cplz))
       cplmaxs = max(maxval(cplr),maxval(cplz))
       cplimin = imin(1:cplmaxj)
       cplimax = imax(1:cplmaxj)
       cplnod = 0
       do j = 1,cplmaxj
         do i = cplimin(j),cplimax(j)
           cplnod(i,j) = node(i,j)
         enddo
       enddo
       do j = 1,cplmaxj-1
         do i = 1,cplmaxi-1
           cpler(i,j) = (cplr(cplnod(i,j)) + cplr(cplnod(i+1,j)) +
     &     cplr(cplnod(i+1,j+1)) + cplr(cplnod(i,j+1)))*0.25
           cplez(i,j) = (cplz(cplnod(i,j)) + cplz(cplnod(i+1,j)) +
     &     cplz(cplnod(i+1,j+1)) + cplz(cplnod(i,j+1)))*0.25
         enddo
       enddo
$endif
c
c  Print nodal point data.
       write (output,"('0 n o d e  d a t a')")
       write (output,
     & "('0 node numbers, i-j, r-z coordinate information')")
       write (output,
     & "('0  i   j  node     r         z        i   j  node     r       
     &  z        i   j  node     r         z')")
       line = 12
       do j = 1,maxj
         nstart = imin(j)
         nstop = imax(j)
         nstopp = nstart + 2
         if (nstopp .gt. nstop) nstopp = nstop
         do
           l = 0
           do ii = nstart,nstopp
             l = l + 1
             njj(l) =  j
             nii(l) =  ii
             nod(l) =  node(ii,j)
             xyr(l) = r(nod(l))
             xyz(l) = z(nod(l))
           enddo
           write (output,"(3(i4,i4,i5,2x,es10.3,es10.3))")
     &     (nii(k),njj(k),nod(k),xyr(k),xyz(k),k=1,l)
           line = line + 1
           linea = line
           if (line .ge. 55) call hdwr(line)
           if (linea .ge. 55) write (output,
     & "('0  i   j  node     r         z        i   j  node     r       
     &  z        i   j  node     r         z')")
           nstart = nstart + 3
           if (nstart .gt. nstop) exit
           nstopp = nstart + 2
           if (nstopp .gt. nstop) nstopp = nstop
         enddo
       enddo
       return
       end
*endif
