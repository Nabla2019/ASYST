*mlist
*if def,selap
       subroutine cg2(ih, hcoef1, ncf2, te2, ntf2, areac, tc, r, z,
     & ir5vol,icvnod,imetsw,ihsave,arsave,htcmet,htctot)
c
c  cg2 processes couple power input.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
*in32 ih
*in32 ncf2
*in32 ntf2
*in32 ir5vol
*in32 icvnod
*in32 imetsw
*in32 ihsave
*in32end
c      imetsw(n)=indicator of corium convection for convective
c                node n; 0=no, 1=yes.
c      ihsave(n)=input set values for array ih.
c      arsave(n)=input set values for array areac.
c      htcmet(n)=input gap h.t.c.
c      htctot(i)=convective htc, calculated in userh.
c                nodes with convective htc are identified in
c                subroutine dhcoef.
c
      implicit none
*call iparm
*call parm
*call ufiles
      integer ih(*),ncf2(*),ntf2(*),ir5vol(*),icvnod(*),imetsw(*),
     +ihsave(*)
      real hcoef1(*),te2(*),areac(*),tc(*),r(*),z(*),htcmet(*), arsave
     +(*),htctot(*)
c  Local variables.
      integer i,i1,i2,i11,i12,ir5v1,itl,itr,j,j1,j2,j11,j22,jj,k,kt,
     +linea,m1j,n442,n443
      integer node
      external node
      real d,dsq,dsqm,pd,rs,sint,x,x250,x251,y
      external hdwr
c
c     variable rtemp in common block parm is used to store maximum
c     value of gap heat transfer coefficient.  This value is used for
c     setting minimum htc after debris melting at structure interface.
      rtemp=0.0
      do 10 i = 1,ncev
        ih(i) = 0
        hcoef1(i) = 0.0
        htctot(i)=0.0
        ncf2(i) = 0
        te2(i) = 0.0
        ntf2(i) = 0
        areac(i) = 0.0
   10 continue
      do 20 i=1,ncevr5
   20 ir5vol(i) = 0
      k=0
      line = 10
   30 continue
      read (eoin,9040) i1,j1,i2,j2,x250,n442,x251,n443
 9040 format(4i5,es10.0,5x,i5,es10.0,5x,i5)
      if(x250.gt.rtemp)rtemp=x250
      if(i1.eq.0)go to 70
      if (x250 .le. 0.0) then
        read(eoin,9010)ir5v1
        write(output,9000)i1,j1,i2,j2,ir5v1
 9000 format (' Points(i,j coordinates)',i3,' ,',i3,' and',i3, ' ,',i5,
     +' connected to relap5 volume ',i10)
 9010 format (i10)
      end if
      k=k+1
      m1j=k
      do 40 kt=m1j,ncev
   40 tc(kt)=0.0
      ih(k)=i1
      if(j1.ne.-1) ih(k)=node(i1,j1)
      hcoef1(k)=x250
      ncf2(k)=n442
      if (x250 .le. 0.0) then
        icvnod(k) = ih(k)
        ir5vol(k)=ir5v1
      end if
      te2(k)=x251
      ntf2(k)=n443
      i11=min(i1,i2)
      i12=max(i1,i2)
      j11=min(j1,j2)
      j22=max(j1,j2)
      if(j1.eq.-1) i11=1
      if(j1.eq.-1) i12=(i2-i1)/j2
      if(j1.eq.-1) j11=1
      if(j1.eq.-1) j22=1
      itr=i1
      do 50 i=i11,i12
        do 50 j=j11,j22
          itr=itr+j2
          if(j1.ne.-1) itr=node(i,j)
          if(itr.eq.ih(k)) go to 50
          k=k+1
          ih(k)=itr
          if (x250 .le. 0.0) then
            icvnod(k)=ih(k)
            ir5vol(k)=ir5v1
          end if
          itl=ih(k-1)
          hcoef1(k)=x250
          ncf2(k)=n442
          te2(k)=x251
          ntf2(k)=n443
          d=sqrt((r(itr)-r(itl))**2+(z(itr)-z(itl))**2)
c check for case of two gap elements crossing each other and
c producing zero surface area.
c ts(k)=surface area for convective heat transfer for k-th
c   convective node (m**2/m)
          if(d.lt.1.e-10)then
            d=1.e-20
            tc(k-1)=tc(k-1)+0.5*d
            tc(k)=tc(k)+0.5*d
          else
            sint=abs((r(itr)-r(itl))/d)
            if(npp.eq. 0.and. sint.lt.1.0e-05) d=abs(z(itr)-
     #          z(itl))*r(itl)
            if(npp.eq. 0.and. sint.ge.1.0e-05) d=(r(itr)**2-r(itl)**2)
     +      /2./sint
            d=abs(d)
            rs=r(itr)+r(itl)
            pd=d
            if(npp.eq.0) d=pd*(.5+r(itl)/rs)
            tc(k-1)=tc(k-1)+d/2.
            if(npp.eq.0) d=pd*(.5+r(itr)/rs)
            tc(k)=tc(k)+d/2.
          end if
   50 continue
      do 60 i=m1j,k
   60 areac(i)=tc(i)
      go to 30
   70 continue
      do80i=1,ncev
        imetsw(i)=0
        ihsave(i)=ih(i)
        arsave(i)=areac(i)
        htcmet(i)=hcoef1(i)
   80 continue
      numhc=k
      write (output,9050) numhc
 9050 format(1h0,'numhc  =',i5)
      write (output,9020)
      do 110 i=1,k
        if(ntf2(i).ne.-1) go to 100
        x=r(ih(i))
        y=z(ih(i))
        dsqm=1.e10
        jj=ih(i)
        do 90 j=1,numnp
          if(j.eq.ih(i)) go to 90
          dsq=(r(j)-x)**2+(z(j)-y)**2
          if(dsq.lt.dsqm) jj=j
          if(dsq.lt.dsqm) dsqm=dsq
   90   continue
        ntf2(i)=-jj
  100   continue
        write (output,9030) ih(i),hcoef1(i),ncf2(i),te2(i),ntf2(i),
     +  areac(i)
 9030 format(i6,11x,es12.4,i6,13x,es12.4,i9,9x,es12.4)
        line = line + 1
        linea = line
        if(line .ge. 55) call hdwr(line)
        if(linea .ge. 55) write (output,9020)
  110 continue
 9020 format(' convection     coefficient    coefficient    temperature
     +  temperature      surface '/ ' node number    or multiplier  tabl
     +e          or multiplier      table        area    '/)
      return
      end
*endif
