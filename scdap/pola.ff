*mlist
*if def,selap
      subroutine pola(a,ic,ir,xc,xr,xco,xro,value,testc,testr,ick,
     *                  ssv,tsat)
c
c  pola is basically a linear tabular interpolation routine.
c
c******************************************************************
c
c     pola                1-jan-92
c
c     the BWR canister/control blade modules were developed at ORNL
c     by L.J.Ott under the auspices of the NRC sponsored Boiling
c     Water Reactor Severe Accident Technologies programs.
c
c     for information or assistance, call
c                 L.J.Ott (fts)-624-0324 or (615)-574-0324
c                 F.P.Griffin (fts)-626-4684 or (615)-576-4684
c
c******************************************************************
c
c  Cognizant engineer: ewc (ljo fpg).
c
      implicit none
c
      integer         i     , ic    , ick   , ico   , ir    , iro   ,
     *                testc , testr
c
      real            a(ic,ir)      , a1    , a2    , fc    , fr    ,
     *                ssv   , tsat  , value , xc(ic), xco   , xr(ir),
     *                xro
c
c
c***find the columnar position of xco
c
      testc=0
      do 10 i=1,ic
      ico=i
      if(xco.le.xc(i))go to 18
   10 continue
      testc=1
      go to 28
   18 if(ico.ne.1)go to 28
      testc=-1
      ico=2
c
c***find the row position of xro
c
   28 testr=0
      do 30 i=1,ir
      iro=i
      if(xro.le.xr(i))go to 38
   30 continue
      testr=1
      go to 48
   38 if(iro.ne.1)go to 48
      testr=-1
      iro=2
c
c***the position of the desired point has been found; now
c   compute the interpolated value from the a array.
c
   48 go to(58,68,78,88,128),ick
c
c   linear/linear interpolation
c
   58 fr=(xro-xr(iro-1))/(xr(iro)-xr(iro-1))
      a1=fr*(a(ico-1,iro)-a(ico-1,iro-1))+a(ico-1,iro-1)
      a2=fr*(a(ico,iro)-a(ico,iro-1))+a(ico,iro-1)
      fc=(xco-xc(ico-1))/(xc(ico)-xc(ico-1))
      value=fc*(a2-a1)+a1
      return
c
c   log/linear interpolation
c
   68 fr=(log(xro)-log(xr(iro-1)))/(log(xr(iro))-log(xr(iro-1)))
      a1=exp(fr*(log(a(ico-1,iro))-log(a(ico-1,iro-1)))+
     *        log(a(ico-1,iro-1)))
      a2=exp(fr*(log(a(ico,iro))-log(a(ico,iro-1)))+
     *        log(a(ico,iro-1)))
      fc=(xco-xc(ico-1))/(xc(ico)-xc(ico-1))
      value=fc*(a2-a1)+a1
      return
c
c   linear/sqrt interpolation
c
   78 fr=(xro-xr(iro-1))/(xr(iro)-xr(iro-1))
      a1=fr*(a(ico-1,iro)-a(ico-1,iro-1))+a(ico-1,iro-1)
      a2=fr*(a(ico,iro)-a(ico,iro-1))+a(ico,iro-1)
      fc=(sqrt(xco)-sqrt(xc(ico-1)))/
     *   (sqrt(xc(ico))-sqrt(xc(ico-1)))
      value=(fc*(sqrt(a2)-sqrt(a1))+sqrt(a1))**2
      return
c
c   linear/linear interpolation (ref.to sat.)
c
   88 if(a(ico-1,iro).eq.0.0.and.a(ico,iro).eq.0.0)go to 118
      if(a(ico-1,iro).eq.0.0)go to 108
      if(testc.eq.-1)go to 98
      go to 58
   98 fr=(xro-xr(iro-1))/(xr(iro)-xr(iro-1))
      a2=fr*(a(1,iro)-a(1,iro-1))+a(1,iro-1)
      fc=(xco-tsat)/(xc(1)-tsat)
      value=fc*(a2-ssv)+ssv
      return
  108 fr=(xro-xr(iro-1))/(xr(iro)-xr(iro-1))
      a2=fr*(a(ico,iro)-a(ico,iro-1))+a(ico,iro-1)
      fc=(xco-tsat)/(xc(ico)-tsat)
      value=fc*(a2-ssv)+ssv
      return
  118 if (a(ico+1,iro) .eq. 0.0) stop 'pola-1'
      fr=(xro-xr(iro-1))/(xr(iro)-xr(iro-1))
      a2=fr*(a(ico+1,iro)-a(ico+1,iro-1))+a(ico+1,iro-1)
      fc=(xco-tsat)/(xc(ico+1)-tsat)
      value=fc*(a2-ssv)+ssv
      return
c
c   log/log interpolation
c
  128 fr=(log(xro)-log(xr(iro-1)))/(log(xr(iro))-log(xr(iro-1)))
      a1=exp(fr*(log(a(ico-1,iro))-log(a(ico-1,iro-1)))+
     *        log(a(ico-1,iro-1)))
      a2=exp(fr*(log(a(ico,iro))-log(a(ico,iro-1)))+
     *        log(a(ico,iro-1)))
      fc=(log(xco)-log(xc(ico-1)))/(log(xc(ico))-log(xc(ico-1)))
      value=exp(fc*(log(a2)-log(a1))+log(a1))
      return
c
c
      end
*endif
