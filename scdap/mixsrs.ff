*mlist
*if def,selap
       subroutine mixsrs (enth,wal,wu,wss,wcd,wli,tmpeq)
c
c  Calculates the temperature of a mixture of aluminum and uranium given
c  its internal energy.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
c      enth=internal energy of mixture(j)(input)
c      wal=mass of aluminum in mixture(kg)(input)
c      wu=uranium
c      wss=stainless steel
c      wcd=cadmium
c      wli=lithium
c      tmpeq=equilibrium temperature of mixture(k)(output).
c
      implicit none
       real enth,wal,wu,wss,wcd,wli,tmpeq
*call cpmdat
*call ufiles
c
c  Local variables.
      real af(maxcon),cp,cp2,e2,delte,cpave,entmix,entmlt,enteps,t0,t1,
     & tmlt,tref,tstart,ws(maxcon),wsltot,zucp1,zunth1
      integer i,itcnt,itmax
      data tref/ 295./, tstart/ 1000./
      data itmax/ 50/, enteps/ 5./
c
      t1=tstart
      e2=0.0
      itcnt=0
c     ws(1)=mass of zr
      ws(1)=0.0
c     metallic uranium
      ws(2)=wu
c      stainless steel
      ws(3)=0.0
c     silver
      ws(4)=0.0
c     b4c
      ws(5)=0.0
c     uo2
      ws(6)=0.0
c     zro2
      ws(7)=0.0
c     aluminum
      ws(8)=wal
c     lithium
      ws(9)=wli
c     cd
      ws(10)=wcd
c     soil
      ws(11) = 0.0
      wsltot=0.0
      do 40 i=1,maxcon
      wsltot=wsltot+ws(i)
40    continue
      call calaf(ws(1),wsltot,af(1))
c     if mixture above its melting temperature, simplify temperature
c     calculation by assuming linear change in heat capacity above
c     this temperature.
c     first calculate liquidus temperature of mixture.
      call tmltmx(af(1),af(2),af(3),af(4),af(5),af(6),af(7),
     # af(8),af(9),af(10),af(11),tmlt)
      entmlt=zunth1(af(1),af(2),af(3),af(4),af(5),af(6),af(7),
     # tmlt,af(8),af(9),af(10),af(11),tref)
      entmix=enth/wsltot
      if(entmix.gt.entmlt)then
      t1=tmlt+10.
      cp=zucp1(af(1),af(2),af(3),af(4),af(5),af(6),af(7),
     # af(8),af(9),af(10),af(11),t1)
      tmpeq=tmlt+(entmix-entmlt)/cp
      cp2=zucp1(af(1),af(2),af(3),af(4),af(5),af(6),af(7),
     # af(8),af(9),af(10),af(11),tmpeq)
      cpave=0.5*(cp+cp2)
      tmpeq=tmlt+(entmix-entmlt)/cpave
      return
      end if
100   itcnt=itcnt+1
      cp=zucp1(af(1),af(2),af(3),af(4),af(5),af(6),af(7),af(8),
     # af(9),af(10),af(11),t1)
      t0=t1
      if(itcnt.eq.1)t0=tref
      delte=enth-e2
      tmpeq=(delte+wsltot*cp*t0)/(wsltot*cp)
      e2=wsltot*zunth1(af(1),af(2),af(3),af(4),af(5),af(6),af(7),
     # tmpeq,af(8),af(9),af(10),af(11),tref)
      delte=abs(enth-e2)
      if(delte.lt.enteps)then
      return
      end if
      if(itcnt.ge.itmax)then
      write(output,915)
915   format(/,' nonconvergence in subroutine mixsrs')
      write(output,917)enth,e2,tmpeq,t0
917   format(' enth=',e10.4,' e2=',e10.4,' tmpeq=',e10.4,' t0=',
     # e10.4)
      write(output,919)
919   format(' execution continuing with last iteration value')
      return
      end if
      t1=tmpeq
      go to 100
      end
*endif
