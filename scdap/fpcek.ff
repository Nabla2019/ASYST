*mlist
*if def,selap
       subroutine fpcek (maxbin, nbin, pdiam, maxsp, nsp, mdiff,
     * maxsrf, nsrf, surfar, surft, vapnu, vapt, vapp, cesurf,
     * cepart, trblnt, cturb, clmnr, ksurf, eqsrf, kpart, eqvap)
c
c  fpcek defines the condensation/evaporation coefficients.
c
c  Cognizant engineer: ewc (esm).
c
       implicit none
*call cons
c
c     Earl S. Marwil
c     Scientific Computing Unit
c     EG&G Idaho, Inc.
c     PO Box 1625
c     Idaho Falls, ID 83415-2408
c
       integer maxbin, nbin, maxsp, nsp, maxsrf, nsrf
       real pdiam(maxbin), mdiff(maxsp), surfar(maxsrf), surft(maxsrf)
       real vapnu, vapt, vapp
       logical cesurf, cepart, trblnt
       real cturb, clmnr
       real ksurf(maxsp,maxsrf), eqsrf(maxsp,maxsrf)
       real kpart(maxbin,maxsp), eqvap(maxsp)
       external fpvceq
       integer isrf, isp, ibin
       real area, temp
       real third
       parameter (third = 1.0/3.0)
cccc
       real zzz1,zzz2,zzz3
c
c  Calculate coefficients for surface condensation/evaporation.
c  Calculate coefficients for surface chemisorption.
       if (cesurf .and. nsrf .gt. 0) then
         do 20 isrf = 1,nsrf
           area = surfar(isrf)
           temp = surft(isrf)
           call fpvceq (temp,vapp,eqsrf(1,isrf))
           do 10 isp = 1,nsp
             if (trblnt) then
c  Calculate Schmidt number.
c            sc = vapnu/mdiff(isp)
c            coeff = cturb*sc**third
cccc
c            ksurf(isp,isrf) = cturb*(vapnu/mdiff(isp))**third*
c    &       mdiff(isp)*area
             zzz1 = vapnu/mdiff(isp)
             zzz2 = zzz1**third
             zzz3 = cturb*zzz2*mdiff(isp)*area
             ksurf(isp,isrf) = zzz3
cccc
               else
c                 coeff = clmnr
                  ksurf(isp,isrf) = clmnr * mdiff(isp) * area
               end if
   10          continue
   20       continue
      end if
c     Calculate coefficients for particle condensation/evaporation
      if (cepart) then
         call fpvceq(vapt,vapp,eqvap)
         do 40 isp = 1, nsp
            temp = 2.0 * pi * mdiff(isp)
            do 30 ibin = 1, nbin
               kpart(ibin,isp) = temp * pdiam(ibin)
   30          continue
   40       continue
      end if
      return
      end
*endif
