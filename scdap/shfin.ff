*mlist
*if def,selap
       subroutine shfin (anonc,acon,bnonc,bcon,tnonc,tcon,afp,bfp,tfp,
     & xnonc, xcon, nspdeb, idsdeb)
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
*in32 idsdeb
*in32end
      implicit none
c
      integer nspdeb
c
c     this subroutine converts afp(n) to anonc(i) and acon(k),
c                   bfp(n,l) to bnonc(i,l) and bcon(k,l),
c               and tfp(n) to tnonc(i) and tcon(k).
c
c     anonc(i)   = output amount of i th noncondensable gas
c              released during the time increment (kg)
c               i =  3 is krypton
c               i =  4 is xenon
c
c     acon(k)   = output amount of k th condensable vapor
c              released during the time increment (kg)
c               k =  1 for iodine
c               k =  5 for cadmium
c               k = 18 for zinc iodide
c               k = 19 for zinc
c               k = 20 for cesium
c
c     bnonc(i,l) = output mass of i th noncondensable
c              gas in bubble size l at end of
c              time increment (kg)
c               i =  3 is krypton
c               i =  4 is xenon
c
c     bcon(k,l)  = output mass of k th condensable
c              vapor in bubble size l at end of
c              time increment (kg)
c               k =  1 for iodine
c               k =  5 for cadmium
c               k = 18 for zinc iodide
c               k = 19 for zinc
c               k = 20 for cesium
c
c     tnonc(i)   = output total mass of i th
c              noncondensable gas at start/end of
c              time increment (kg)
c               i =  3 is krypton
c               i =  4 is xenon
c
c     tcon(k)   = output total mass of k th
c              condensable vapor at start/end of
c              time increment (kg)
c               k =  1 for iodine
c               k =  5 for cadmium
c               k = 18 for zinc iodide
c               k = 19 for zinc
c               k = 20 for cesium
c
c
c     afp(n)   = input mass of n th species vapor
c              or noncondensable gas released
c              during the time increment (kg).
c              species identification is dynamic and
c              described with the variables nspdeb and
c              idsdeb.
c
c     bfp(n,l)   = input mass of n th species
c              vapor or noncondensable gas
c              in bubble size l at start/end of
c              time increment (kg).
c              species identification is dynamic and
c              described with the variables nspdeb and
c              idsdeb.
c
c     tfp(n)   = input total mass of n th species
c              vapor or noncondensable gas at
c              start/end of time increment (kg).
c              species identification is dynamic and
c              described with the variables nspdeb and
c              idsdeb.
c
c     idsdeb(n)  = input array of indicies that specify which
c              species are to be tracked in the debris bed.
c              n varies between 1 and nspdeb and the values
c              of idsdeb(n) denote the following species in
c              any order.
c
c               idsdeb =  1 for iodine
c               idsdeb =  2 for cesium iodide
c               idsdeb =  3 for cesium hydroxide
c               idsdeb =  4 for tellurium
c               idsdeb =  5 for hydrogen iodide
c               idsdeb =  6 for hydrogen telluride
c               idsdeb =  7 for cadmium
c               idsdeb =  8 for silver
c               idsdeb =  9 for uranium dioxide
c               idsdeb = 10 tin
c               idsdeb = 11 iron (not currently modeled)
c               idsdeb = 12 ruthenium (not currently modeled)
c               idsdeb = 13 barium (not currently modeled)
c               idsdeb = 14 antimony (not currently modeled)
c               idsdeb = 15 cse elemental cesium
c               idsdeb = 16 ie ?????? (not currently modeled)
c               idsdeb = 17 zinc
c               idsdeb = 18 xenon
c               idsdeb = 19 krypton
c               idsdeb = 20 zinc iodide (not currently
c                an input option but gasrl is ready to
c                release this species)
c
c
c
c     shfin was coded by d. l. hagrman october 13, 1989 for rev 5
c     last modified on october 28, 1989 rev 10
*call bsize
c
      integer  idsdeb(22)
      real  afp(22), bfp(22,15), tfp(22)
c
      real  anonc(10), acon(20), bnonc(10,15),
     #       xnonc(10,15), xcon(20,15),
     #       bcon(20,15), tnonc(10), tcon(20)
c
      real kross(20), iross(10)
c
c     kross and iross are idsdeb numbers corresponding to vapors
c      or noncondensable gases
c
c     local variables
      integer i, ie, k, ke, l
c
      data kross /1,2,3,4,7,8,0,0,6, 5,10, 0, 0, 0, 9, 0, 0,20,17,15/
c     correspond  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
c
      data iross /0,0,19,18,0,0,0,0,0, 0/
c     correspond  1,2, 3, 4,5,6,7,8,9,10
c
c
c     initialize total and bubble noncondensable inventories
c      as well as release increments
      nbs = 14
      do 20 i = 1,10
       tnonc(i) = 0.0e+00
       anonc(i) = 0.0e+00
       do 15 l=1,nbs
          bnonc(i,l) = 0.0e+00
          xnonc(i,l) = 0.0e0
   15   continue
   20 continue
c     initialize total and bubble condensable inventories
c      as well as release increments
      do 30 k=1,20
       tcon(k) = 0.0e+00
       acon(k) = 0.0e+00
       do 25 l=1,nbs
          bcon(k,l) = 0.e+00
          xcon(k,l) = 0.0e0
   25   continue
   30 continue
c
c     revise nonzero inventories and increments
c      vapors
      do 70 k=1,20
       do 60 ke=1,nspdeb
          if(idsdeb(ke) .eq. kross(k)) then
             acon(k) = afp(ke)
             tcon(k) = tfp(ke)
             do 50 l=1,nbs
          bcon(k,l) = bfp(ke,l)
   50         continue
          endif
   60   continue
   70 continue
c      noncondensables
      do 100 i=1,10
       do 90 ie=1,nspdeb
          if(idsdeb(ie) .eq. iross(i)) then
             anonc(i) = afp(ie)
             tnonc(i) = tfp(ie)
             do 80 l=1,nbs
          bnonc(i,l) = bfp(ie,l)
   80         continue
          endif
   90   continue
  100 continue
c
      return
      end
*endif
