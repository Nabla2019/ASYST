*mlist
*if def,selap
       subroutine matrx2 (n,nr,na,a,b,c,r,x)
c
c
c  matrx2 solves tridiagonal system of equations in the axial direction
c  by vectorized gaussian elimination methods.
c
c  Cognizant engineer: ssa.
c
       implicit none
c
c  Local variables.
       integer i,j,k,kk,n,na,nr
       real a,b,c,r,temp,x
       dimension a(n+1),b(n),c(n+1),r(n+1),x(n+2)
c  Solves tridiagonal system of equations in the axial direction by
c  vectorized gaussian elimination methods.
c
c
c  Input variables:
c    a - subdiagonal array
c    b - diagonal array
c    c - superdiagonal array
c    r - right hand side vector
c    na = the number of axial levels
c    nr = the number of radial nodes
c    n = na*nr
c
c  Output variables: x - solution vector.
c
      kk = nr
      do 5 k = 1,na
      a(kk) = a(kk)/b(kk)
      r(kk) = r(kk)/b(kk)
      kk = kk + nr
   5  continue
      i = 2
   15 continue
      j = nr-i+2
      do 25 k = 1,na
      temp = 1.0/(b(j-1)-a(j)*c(j-1))
      a(j-1) = a(j-1)*temp
      r(j-1) = ( r(j-1) - c(j-1)*r(j) ) * temp
      j = j + nr
  25  continue
      if ( i.eq.nr ) go to 10
      i = i + 1
      go to 15
  10  continue
      kk = 1
      do 35 k = 1,na
      x(kk) = r(kk)
      kk = kk + nr
  35  continue
      i = 2
 20   continue
      j = i
      do 45 k = 1,na
      x(j) = r(j) - a(j)*x(j-1)
      j = j + nr
  45  continue
      if ( i.eq.nr ) go to 200
      i = i + 1
      go to 20
  200 continue
      return
      end
*endif
