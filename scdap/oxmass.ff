*mlist
*if def,selap
       subroutine oxmass(ngeom,deltc,rout,wtmol,wtlimt,oxrat0,
     +  oxlim0 ,height ,oxdw0 ,ydot ,rheat ,noxzr ,oxdw)
c
c
c  oxmass computes the oxidation of a frozen crust.
c
c  Cognizant engineer: cma.
c
c     calling subroutines:  oxdcon
c     subroutines called:   snfunc,vfunc
c
c     input variables                  description
c        deltc          component time step (s)
c        height         height which is oxidized (m)
c        ngeom          geometry index for oxidation, 1=slab,
c                         2=cylinder, 3=sphere
c        oxdw0          oxide weight gain in frozen mass from
c                         previous time step (kg)
c        oxlim0         oxidation steam starvation rate limit for
c                         previous time step (kg/s)
c        oxrat0         oxidation rate limit ratio for previous time
c                         step
c        rheat          heat of reaction used in heat generation
c                         calculation (j/kg)
c        rout           average outer radius of frozen mass (m)
c        wtlimt         weight gain limit in frozen film (kg)
c        ydot           2 * d(weight gain)/dt * weight gain (kg2/m4-s)
c     i/o variables                    description
c        oxdw           oxide weight gain in frozen mass (kg)
c     local variables                  description
c        area           surface area (m2)
c        volum          volume (m3)
c
c ---------------------------- oxmass outline -------------------
c :compute weight gain
c :apply oxidation rate limits
c :if: weight gain is .gt. weight gain limit
c     :then:
c        :set weight gain to weight gain limit
c :endif:
c :compute heat generation rate
c :return:
c ----------------------------------------------------------------
c
       implicit none
c
       integer ngeom,noxzr
       real deltc,rout,wtmol,wtlimt,oxrat0,oxlim0,height,oxdw0,ydot,
     * rheat,oxdw
c
c  Local variables.
       real area,volum
       real snfunc,vfunc
       external snfunc,vfunc
c
      area = snfunc(ngeom,rout,height,1.0)
      volum = vfunc(ngeom,rout,0.0,height,1.0)
      oxdw = sqrt(ydot * area**2 * deltc + oxdw0**2)
      oxdw = oxrat0 * (oxdw - oxdw0) + oxdw0
      if((oxdw - oxdw0)  .gt. oxlim0 * deltc)
     + oxdw = oxlim0 * deltc + oxdw0
      if(oxdw .gt. wtlimt) then
        oxdw = wtlimt
        noxzr = 1
      endif
      if(wtlimt.lt.1.0e-10 .or. volum.lt.1.0e-10) noxzr = 1
      return
      end
*endif
