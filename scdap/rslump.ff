*mlist
*if def,selap
       subroutine rslump
c
c
c  Reads core slumping cards; called by rnewp.
c
c  Cognizant engineer: ljs.
c
*in32 iv
*in32end
      implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'voldat.h'
       include 'ufiles.h'
       include 'scddat.h'
       include 'cpmdat.h'
       include 'slumpv.h'
       include 'tblsp.h'
       include 'debcom.h'
       include 'buntim.h'
       include 'debout.h'
       include 'hardpn.h'
       include 'scntl.h'
c
      real xv(8)
      integer i, m, nerr, next, nfield, lout
      integer iv(8), l3a(9), l3d(9)
      character psep*80
      character*1 tunit(2)
      character*2 lunit(2)
      equivalence (iv(1),xv(1))
c
      data l3a / 40002000, 0, 2, 3, 0, 1, 0, 0, 1 /
      data l3d / 40002200, 0, 0, 3, 0, 1, 1, 1, 0 /
      data tunit / 'K', 'F' /
      data lunit / 'm ','ft'/
c
      psep(1:80) = '='
      write (output,9001)psep
 9001 format (/,a,/,30x,'Edit of SCDAP input data'/15x,
     +'(quantities printed are input values or set by error recovery)')
      lout=2
      if(unito)lout=1
c core slumping control card. 108/40002000
c first check for existence of old 108 card.
      nerr = 108
      call inplnk(nerr, next, i, nfield, fa(filndx(1)))
      if(nfield.gt.0)then
        fail=.true.
        write(output,9005)nerr,l3a(1)
 9005 format('******** Error - A ',i3,' card was detected.'/
     #       ' This information has been moved to card ',i8,'.')
        goto 100
      endif
      if (.not.scntrl(7))then
        aflwr1 = 0.0
      else
        l3a(3) = 0
      endif
      l3a(6)=1
      call inp2 (fa(filndx(1)), xv, l3a)
      if (l3a(6) .le. 0) then
        if (l3a(6) .lt. 0) fail = .true.
        go to 100
      endif
      if (iv(1) .lt. 0) then
        write (output,9000) 1,l3a(1)
 9000 format(1x,'******** Error - Word ',i2,' on card ',i9,
     #  'is illegal.')
        fail = .true.
        go to 100
      endif
      ncvol = iv(1)
      nvoltp = iv(2)
      if (l3a(6) .gt. 2) aflwr1 = xv(3)
      write (output,20)
   20 format (/,'Core slumping control')
      write (output,1040)
     #  'Volume to receive slumped core material =',ncvol
      write (output,1040)'Volume above core',nvoltp
 1040 format(2x,a,1h=,i10)
      write(output,40)aflwr1
   40 format(/,'Minimum flow area per fuel rod in cohesive debris=',
     #  1pe10.4)
  100 continue
c--Read core damage junction control card.
c first check for existence of old 109 card.
      nerr = 109
      call inplnk(nerr, next, i, nfield, fa(filndx(1)))
      if(nfield.gt.0)then
        fail=.true.
        write(output,9005)nerr,l3d(1)
        goto 300
      endif
      if (.not.scntrl(7))then
        fcntr1 = 0.0
        fcntr2 = 0.0
        ncntr1 = 0
        mltprg = 0
      endif
      l3d(6) = 1
      call inp2 ( fa(filndx(1)), xv, l3d )
      if ( l3d(6) .lt. 0 )  fail = .true.
      if ( l3d(6) .ge. 1 ) fcntr1 = xv(1)
      if ( l3d(6) .ge. 2 ) fcntr2 = xv(2)
      if ( l3d(6) .ge. 3 ) ncntr1 = iv(3)
      if(ncntr1.eq.1.or.ncntr1.eq.2)then
        write(output,9006)
 9006 format(//,' Molten material will slump from',
     # ' upper plenum and/or core plate.')
        write(output,9007)fcntr1
 9007 format(' time at which slumping occurs =',e12.6,' s')
        write(output,9009)fcntr2
 9009 format(' mass of material slumped =',e10.4,' kg')
        if(ncntr1.eq.1)then
          write(output,9011)
 9011 format(' material slumps directly to lower head')
        endif
        if(ncntr1.eq.2)then
          write(output,9013)
 9013 format(' material slumps from upper plenum region')
        endif
      endif
  300 continue
c  Get the index offsets for volumes ncvol and nvoltp.
      inv = -1
      invtp = -1
      i = filndx(4)
      do m = 1,nvols(i)
        if (volno(i) .eq. ncvol) then
          inv = i - filndx(4)
        endif
        if (volno(i) .eq. nvoltp) then
          invtp = i - filndx(4)
        endif
        i = i + ivskp
      enddo
      if (inv .lt. 0) then
        call inp7 (l3a(1),1)
        fail = .true.
      endif
      if (invtp .lt. 0) then
        call inp7 (l3a(1),2)
        fail = .true.
      endif
      return
      end
*endif
