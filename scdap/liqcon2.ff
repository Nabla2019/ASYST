*mlist
       subroutine liqcon2 (dtmac,dz,naz,rigt,rogt,rozrgt,rizrgt,
     & ross,riss,rftemp,tsur,tsur0,z,avoidl,ifrag,vladeb,
     & nfi,rocrab,wbotab,wbotss,wbotgt,wfroab,wfroabin,wfross,
     & wfrossi,wfrogt,wremab,wremss,wremgt,hadd1,haddbt,
     & hremov,wconab,wconss,wcongt,afracl,dzfrcl,mltabi,mltssi,
     & mltgti,tmac,rorel, oxdwf,
     &  wabbng,wsrbng2,oxgain,tclsur)
c 
c  liqcon calculates meltdown of PWR contrl rods.
c 
!
c  Calling subroutine: cylin2
c  Subroutines called: floab,solab,solss,solgt,matpro.
c#     argument list definition:
!
c#     dtmac     = time step (s)     (input)
c#     dz(k)     = height of each axial zone  (m)  (input)
c#     naz       = number of axial zones      (input)
c#     rl        = summation of hieghts of all axial zones.
c#                 (m)    (input)
c#     rigt(k)   = inner radius of guide tube with inner
c#                 oxide layer. (m)     (input)
c#     rogt(k)   = outer radius of guide tube with outer
c#                 oxide layer. (m)     (input)
c#     rozrgt(k) = outer radius of guide tube zr layer.
c#                 (m)     (input)
c#     rizrgt(k) = inner radius of guide tube zr layer. (m)
c#                 (input)
c#     ross(k)   = outer radius of control rod cladding
c#                 stainless steel layer. (m)    (input)
c#     riss(k)   = inner radius of control rod cladding
c#                 stainless steel layer. (m)    (input)
c#     rftemp    = reference temperature for enthalpy cal-
c#                 culations. normally, rftemp is set equal
c#                 to room temperature. (k)    (input)
c       tclsur(k)  absorber cladding surface temperature (k)
c#     tsur(k)   = guide tube  temperature of control rod in
c#                 axial zone k at end of time step. (k).
c#                 (input)
c#     tsur0(k)  = guide tube temperature of control rod in
c#                 axial zone k at start of time step. (k)
c#                 (input)
c#     z(k)      = elevation of midplane of axial zone k. (m)
c#                 (input)
c#     avoidl(k) = flow area around guide tube. (m*2)
c#                 (input)
c#     ifrag(k)  = variable indicating whether or not in-
c#                 tact control rod, debris bed or void
c#                 region exists in axial zone k.
c#                 0 = intact control rod
c#                 1 or 2 = debris bed
c#                 3 = void region
c#                 (input)
c#     vladeb(k) = volume of liquid which can be absorbed
c#                 by debris bed in axial zone k. (m**2)
c#                 (input)
c#    nfi(k)    = indicator of breach in stainless steel
c#                cladding of control rod in axial zone k
c#                durung time step.
c#                0 = no, 1 = yes.    (output)
c#    rocrab(k) = outer radius of crust of solidified
c#                neutron absorber material around
c#                guide tube. (m)    (output)
c#    wbotab    = mass of liquified neutron absorber
c#                material which flowed below bottom
c#                of core. (kg)    (input/output)
c#    wbotss    = mass of liquified control rod stainless
c#                steel cladding which flowed below bottom
c#                of core. (kg)    (input/output)
c#    wbotgt    = mass of liquified zr guide tube which
c#                flowed below bottom of core. (kg)
c#                (input/output)
c#    wfroab(k) = mass of solidified neutron absorber
c#                axial zone k. (kg)    (input/output)
c#    wfroabin(k) = mass of solidified neutron absorber
c#                axial zone k at inner side of guide tube.
c#                (kg)    (input/output)
c#     wfross(k) = mass of solidified stainless steel cladding
c#                 at outer side of guide tube 
c#                 in axial zone k. (kg)     (input/output)
c#     wfrossi(k) = mass of solidified stainless steel cladding
c#                 at inner side of guide tube 
c#                 in axial zone k. (kg)     (input/output)
c#     wfrogt(k) = mass of solidified guide tube in axial
c#                 zone k. (kg)    (input/output)
c#     wremab(k) = mass of neutron absorber material removed
c#                 from axial zone k. (kg)    (input/output)
c#     wremss(k) = mass of control rod stainless steel clad-
c#                 ding removed from axial zone k. (kg)
c#                 (input/output)
c#     wremgt(k) = mass of guide tube removed from axial
c#                 zone k. (kg)    (input/output)
c#     hadd1(k)   = heat added to axial zone k during time
c#                 step due to flow of liquified control
c#                 rod material. (j)    (output)
c#     haddbt    = heat added to region below core due to
c#                 flow of liquified control rod material.
c#                 (j)     (input/output)
c#     hremov(k) = heat removed from axial zone k during
c#                 time step due to flow of liquified con-
c#                 trol rod material. (j)    input/output)
c#     wconab(k) = mass of in-situ liquified neutron ab-
c#                 sorber material in axial zone k. (kg)
c#                 (output)
c#     wconss(k) = mass of in-situ liquified stainless steel
c#                 cladding in axial zone k. (kg)
c#                 (input/output)
c#     wcongt(k) = mass of in-situ liquified guide tube in
c#                axial zone k. (kg)    (input/output)
c#    afracl(k) = fractional reduction in flow area around
c#                guide tube due to crust formation on out-
c#                side of guide tube. if afracl(k) = 1.0,
c#                then flow area around guide tube is com-
c#                pletely filled with crust. (output)
c#    dzfrcl(k) = fraction of height of axial zone k which
c#                is completely filled with liquified/
c#                solidified control rod material resting
c#                on top of debris bed.  (input/output)
c#    mltabi(k) = indicator of in-situ liquified neutron
c#                absorber material in axial zone k.
c#                0 = no , 1 = yes.   (output)
c#    mltssi(k) = indicator of in-situ liquified control rod
c#                stainless steel cladding in axial zone
c#                k. 0 = no , 1 = yes.  (output)
c#    mltgti(k) = indicator of in-situ liquified guide
c#                tube material in axial zone k.
c#                0 = no , 1 = yes.   (output)
c#     three flags above are only on at the initial gt failure
c#     time step 
c#     tmac      = current time (s)   (input)
c
c      rsscn1  = liquefied stainless steel thickness (m)
c              0  =                                                 at the last time step (m)
c      rzrcn1  = liquefied guide tube thickness (m)
c              0  =                                                 at the last time step (m)
c  dhmsszr(k,icomp)= ss/zr mixing heat rate (j/s)
c   rorel(k)   =  guide tube radius including all frozen crusts
   
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       include 'cons.h'
       include 'scddat.h'
       include 'dbacct.h'
       include 'contrl.h'
       include 'ufiles.h'
       include 'scdout.h'
       include 'conele.h'
c
       integer naz,ifrag,nfi,mltabi,mltssi,mltgti
       real(kr) dtmac,dz,rigt,rogt,rozrgt,rizrgt,ross,riss,rftemp,
     & tsur,tsur0,z,avoidl,vladeb,rocrab,wbotab,wbotss,wbotgt,wfroab,
     & wfroabin,wfross,wfrossi,wfrogt,wremab,wremss,wremgt,hadd1,
     & haddbt,hremov,wconab,wconss,wcongt,afracl,dzfrcl,tmac, rorel, 
     & oxdwf, dhsszr,wabbng,wsrbng2,oxgain
       dimension rigt(*),rogt(*),rozrgt(*),rizrgt(*),ross(*),riss(*),
     & tsur(ndax),tsur0(*),z(*),avoidl(ndax),ifrag(*),vladeb(*),
     & nfi(*),rocrab(*),wfroab(*),wfroabin(*),wfross(*),wfrossi(*),
     & wfrogt(*),wremab(*),wremss(*),wremgt(*),hremov(ndax),
     & hadd1(*),wconab(ndax),wconss(ndax),
     & wcongt(ndax),afracl(ndax),dzfrcl(*),mltabi(ndax),
     & mltssi(ndax),mltgti(ndax),dz(*), rorel(*), 
     & oxdwf(*),
     & wsrbng2(ndax,ndcomp),oxgain(ndax),
     & wabbng(ndax,ndcomp)
c  Local variables.
       integer ictype,k,kb,kbreak,kbt,nflow,nswflo,npath
       integer kkk,i,l,nomat,upmat,spmat
       real gtmxlq, volrel
       real(kr) acrsec,ham,hrm,rho,rhoab,rhogt,rhoss,temp1,thkag,
     * tliqab,tliqav,tliqgt,tliqss,tsol,tsolab,tsolss,vol,wfab,tliqabss,
     * wfgt,wflo,wflo1,wfss,wrab,wrgt,wrss,wflossel
       real(kr) wtotmx,fwss,fwzr,atmtot,fass,fasspc,tliqmx,rgas,
     # ceffss,ceffzr,thkhld,tliqzs,wss1,wzr1,woxdwf,dwcongt,
     # duab, dumelx,expan,ratb4c,wssi,wssoi,wabi,waboi,
     # wfrac,tabsh,sumbc,sumbci,sumss,sumssi,fabc,wsri,wbci,
     # tsuri,sflow,wsso,wssoo,tclsur,fabcpc,tliqbcss,sumbco,
     # sumsso,sumzro,wtotout
       real(kr) aden,aenthl,cden,centhl,centhlr,sden,senthl, acp,
     # scp,snfunc,sthexp,soden,zoden,eubsthk
       dimension expan(ndax),tsuri(ndax),sflow(ndax),sumbc(ndax),
     # sumbci(ndax),sumss(ndax),sumssi(ndax) ,tclsur(ndax),
     # sumbco(ndax),sumsso(ndax),sumzro(ndax)
       
c  Data statements.
c  thkhld = thickness of oxide layer on outside of guide tube that
c           results in oxide layer containing liquefied material
c           inside it (m).
       data thkhld / 0.3e-3/
c  rgas = universal gas constant (Pa * m**3/(gram-mole * K)
       data rgas / 8.314/
       data gtmxlq / 0.90/
       data tliqabss /1505.0/
       haddbt = 0.0
c       wbotab = 0.0 
c       wbotss = 0.0
c       wbotgt = 0.0
       wflo = 0.0
       woxdwf=0.0
       temp1 = rftemp
       ictype=2
       rhoab=aden(ictype,temp1)
       rhoss=sden(temp1)
       rhogt=cden(temp1)
       do k = 1,naz
         rocrab(k)=rogt(k)
         expan(k)=sthexp(tclsur(k),rftemp)*
     &    (ross(k)-riss(k))
         wconab(k)=rhoab*dz(k)*pi*riss(k)**2
         wconss(k)=rhoss*dz(k)*pi*(ross(k)+riss(k))*rsscn1(k,icomp)
         wcongt(k)=rhogt*dz(k)*pi*(rozrgt(k)+rizrgt(k))* rzrcn1(k,icomp)
         sflow(k)=pi*(rigt(k)**2-(ross(k)+expan(k))**2)          
         hremov(k)=0.0
         hadd1(k)=0.0
         mltabi(k)=0
         mltssi(k)=0
         mltgti(k)=0
       enddo
       
c calculate solidification and liquefaction temperatures
c of B4C, ss, and zr.
      call ahyprp(ictype, tsolab, tliqab)
      call shyprp(tsolss, tliqss)              
c      compute eutectic interaction of B4C and SS
c      SS melts at its standalone liq. temp. 1700K
        do 20 k=1,naz
           if(b4cox(k,icomp).ge.1) goto 20
           if(tclsur(k).ge.1700.0) goto 10
           if(tclsur(k).gt.1073.0.and.b4cox(k,icomp).eq.0)then
                rsscni1(k,icomp)=(rsscni0(k,icomp)**2+dt*
     &          eubsthk(tclsur(k),1))**0.5
           endif
           if(rsscni1(k,icomp).gt.ross(k)-riss(k)-rsscn1(k,icomp)) then
   10       rsscni1(k,icomp)=ross(k)-riss(k)-rsscn1(k,icomp)
              b4cox(k,icomp)=1
              reazs(k,icomp)=1
              wremss(k)=wremss(k)+rhoss*dz(k)*pi*(ross(k)+riss(k))
     &                          *rsscni1(k,icomp)
              write(output,1000)timehy,icomp,k,tclsur(k)
 1000  format(/,' *** Melt  of absorber sheath***',/,' time =',e12.6,
     +  ' s;',' component ',i3,' node ',i3, ' temperature =',e10.4,' K')
            write(output,1010)rsscni1(k,icomp),ross(k),riss(k)
 1010  format(' rsscni1=',e10.4,' ross=',e10.4,' riss=',e10.4)
              wrbszi(k,icomp,11)=cwb4c(k,icomp)*0.045
              cwb4c(k,icomp)=cwb4c(k,icomp)*0.955              
              do l=1,8
                 wrbszi(k,icomp,l)=wrbszi(k,icomp,l)+wsscon(k,icomp,l)
                 wsscon(k,icomp,l)=0.0
              enddo
           endif
   20  continue
   
       
c tliqss=minimum temperature at which stainless steel in
c contact with Zr will liquefy.
      tliqgt=2150.
      tliqss=1247.
      tliqzs=1900.0
c determine axial zones with liquid absorber material,
c stainless steel cladding or guide tube.
      do 25 k=1,naz
        if(tsur(k).ge.tliqss.and.wremss(k).lt.1.e-6)mltssi(k)=1
        if(tsur(k).ge.tliqgt.and.wremgt(k).lt.1.e-6)mltgti(k)=1
   25 continue
c calculate amount of in situ liquid material in each axial zone.
      do 60 k=1,naz
c thick oxide on guide tube prevents melt through at that location.
c Supposing it can be applied in case that consider inner oxide layer
        if((rogt(k)-rozrgt(k)).gt.thkhld)go to 50
        if((rizrgt(k)-rigt(k)).gt.thkhld)go to 50
        if(wremgt(k).gt.1.e-10)go to 50        
        if(reazs(k,icomp).eq.0)goto 50

c 
c Thickness of control rod cladding and guide tube relative
c to radii of these components is small enough that equations
c for reaction zones in slab geometry can be applied in cylin-
c drical geometry.
c calculate growth of reaction zone in control rod cladding
c and in guide tube that interfaces with control rod cladding.
c First calculate atomic fraction of Fe in reaction zone.
        if(wconss(k).gt.1.e-6)then
          wtotmx=wconss(k)+wcongt(k)
c fwss=mass fraction of Fe in mixture.
c fwzr=mass fraction of Zr in mixture. 
          fwss=wconss(k)/wtotmx
          fwzr=wcongt(k)/wtotmx
c 0.05538 = average atomic weight of SS divided by 1000.
c 0.09122 = atomic weight of Zr divided by 1000.
          atmtot=fwss/0. 05538+ fwzr/0.09122
c fass = atomic fraction of Fe in mixture.
          fass=fwss/(0.05538*atmtot)
        else
          fass=0.24
        end if
        fasspc=100.*fass
        call phsdsz(fasspc,tliqmx)
c coefficients in equations below from report KfK5125.
c**     ceffss=1.19e-6*exp(-435.6/(rgas*tsur(k)))
c**     ceffzr=1.02e-9*exp(-481.8/(rgas*tsur(k)))
c   estimated by trial and error corrections to coefficients
c   from PSI
        ceffss=2.919e+15*exp(-7.02521e+5/(rgas*tsur(k)))
        ceffzr=2.844e+15*exp(-6.43504e+5/(rgas*tsur(k)))
        if(tsur(k).gt.tliqmx)then 
c calculate growth into both directions if SS still exists.
          if(wsscon(k,icomp,1).gt.0.)then
            rsscn1(k,icomp)=sqrt(rsscn0(k,icomp)** 2+ ceffss*dt)
            if(rsscn1(k,icomp).gt.(ross(k)-riss(k)-rsscni1(k,icomp)))
     &       rsscn1(k,icomp)=ross(k)-riss(k)-rsscni1(k,icomp)
          endif
          rzrcn1(k,icomp)=sqrt(rzrcn0(k,icomp)** 2+ ceffzr*dt)
cljs in order to leave residual control rod material for radiation
cljs heat transfer calculations, limit removal of guide tube material
cljs to gtmxrm fraction of its thickness     
            if(rzrcn1(k,icomp).gt.(gtmxlq*(rozrgt(k)-rizrgt(k))))then
              rzrcn1(k,icomp) = gtmxlq*(rozrgt(k)-rizrgt(k))
            end if
            if(tsur(k).gt.tliqgt)then
              rzrcn1(k,icomp)=gtmxlq*(rozrgt(k)-rizrgt(k))
            end if
          go to 40
        end if
c if mixture has ratio of Fe to Zr that results in lowest
c possible liquefaction temperature, and temperature is less
c than liquefaction temperature, then further dissolution does
c not occur.
        if(fasspc.gt.23.0.and.fasspc.lt.25.0)go to 40
        if(fasspc.ge.24.0)then
          rzrcn1(k,icomp)=sqrt(rzrcn0(k,icomp)** 2+ ceffzr*dt)
        else
          rsscn1(k,icomp)=sqrt(rsscn0(k,icomp)** 2+ ceffss*dt)
        end if
cljs limit removal of guide tube material so residual amount left
cljs for heat transfer and radiation calculations for control rod
       if(rzrcn1(k,icomp).gt.(gtmxlq*(rozrgt(k)-rizrgt(k))))then
       rzrcn1(k,icomp) = gtmxlq*(rozrgt(k)-rizrgt(k))
       end if
   40   continue
        if(nfi(k).eq.0)then
          if(rzrcn1(k,icomp).ge.(gtmxlq*(rozrgt(k)-rizrgt(k))
     &    -1.e-10))then
c Guide tube has been liquefied to point of breaching.
            mltgti(k)=1
            rzrcn1(k,icomp)=gtmxlq*(rozrgt(k)-rizrgt(k))
            write(output,9000)timehy,icomp,k,tsur(k)
 9000 format(/,' *** Melt through of guide tube and release of',
     +' liquefied absorber material ***',/,' time =',e12.6,' s;',
     +'  component ',i3,' node ',i3, ' temperature =',e10.4,' K')
            write(output,9010)rzrcn1(k,icomp),rozrgt(k),rizrgt(k)
 9010 format(' rzrcn1=',e10.4,' rozrgt=',e10.4,' rizrgt=',e10.4)
           do l=1,8
            wrbszo(k,icomp,l)=wrbszo(k,icomp,l)+wsscon(k,icomp,l)
     &               *rsscn1(k,icomp)/(ross(k)-riss(k))     
            wsscon(k,icomp,l)=wsscon(k,icomp,l)
     &               *(1.-rsscn1(k,icomp)/(ross(k)-riss(k)))
           enddo
           wrbszo(k,icomp,9)=rhogt*dz(k)*pi*(rozrgt(k)+rizrgt(k))*
     &                 rzrcn1(k,icomp)+wrbszo(k,icomp,9)
           wrbszo(k,icomp,10)=wrbszo(k,icomp,10)+oxgain(k)
     &     *123.22/32.0     
          end if
        end if
c     compute mixing heat generated by Zr and SS eutectic reaction        
        dwcongt=rhogt*dz(k)*pi*(rozrgt(k)+rizrgt(k))*
     &                 rzrcn1(k,icomp)-wcongt(k)
        dwcongt=max(dwcongt,0.0)
        wcongt(k)=wcongt(k)+dwcongt
        wconss(k)=rhoss*dz(k)*pi*(ross(k)+riss(k))*rsscn1(k,icomp)        
        if(dwcongt.gt.1.0e-5 .and. tsur(k).ge.tliqmx)then
           call sszrmix(k,wconss(k),wcongt(k),dwcongt,
     &      dhmsszr(k,icomp))
            dhmsszr(k,icomp)=dhmsszr(k,icomp)/dt
        endif
   50  continue     
   60  continue
                   
c  ratb4c: ratio below which B4C pellet collapse into liquefied material
       ratb4c = 0.1
       do 65 k=1,naz 
         if(b4cox(k,icomp).ne. 1)  goto 65
         wremab(k)=wabbng(k,icomp)-cwb4c(k,icomp)
         if(cwb4c(k,icomp).lt.wabbng(k,icomp)*ratb4c
     &    .or.tclsur(k).ge.2700.)then  
            wrbszo(k,icomp,11)=wrbszo(k,icomp,11)+cwb4c(k,icomp)
            wrbszo(k,icomp,12)=wrbszo(k,icomp,12)+cwb2o3(k,icomp)            
            cwb4c(k,icomp) = 0.0
            cwb2o3(k,icomp) = 0.0
            wremab(k)=wconab(k)
            b4cox(k,icomp)=2
         endif
   65  continue
                     
      do 70 k=1,naz
        if(ifrag(k).gt.0)go to 70
        if(mltgti(k).eq.1)nfi(k)=1
   70 continue
   
c 
c calculate relocation at inner guide tube side
c Relocation inside of guide tube
       do k=1,naz
           sumbci(k)=wrbszi(k,icomp,11)
           sumssi(k)= wrbszi(k,icomp,1)+wrbszi(k,icomp,2)+
     &                      wrbszi(k,icomp,3) 
       enddo  
       
      do 100 k=1,naz
          wsri=sumssi(k)
          wbci=sumbci(k)
          wtotmx=wbci+wsri          
c First calculate atomic fraction of B in reaction zone.
          if(wbci.gt.1.e-6)then
c atmtot=total atoms in mixture          
c fass=atomic fraction of Fe in mixture.
c fabc=atomic fraction of B in mixture.
            atmtot=wsri/55.38+ 4.*wbci/55.2
            fass=wsri/55.38/atmtot
            fabc=1-fass
          else
            fabc=0.167
          end if
          fabcpc=100.*fabc
          call phsdsz(fabcpc,tliqbcss)
               
         if(wtotmx.lt.1.e-10)go to 100
         npath=0
         if(mltgti(k).eq.1.and.wtotmx.ge.1.e-10) then
           npath=1
           do l=1,8
              wrbszi(k,icomp,l)=wrbszi(k,icomp,l)/2.0
              wrbszo(k,icomp,l)=wrbszo(k,icomp,l)+wrbszi(k,icomp,l)
           enddo
         endif       
         if(wremgt(k).gt.1.e-6.and.wtotmx.gt.1.e-10.and. npath.eq.0)
     &    npath=2
         if(tsur(k).gt.tliqbcss.and.wtotmx.gt.1.e-10.and. npath.eq.0)
     &    npath=3
         if(k.gt.1.and.npath.eq.3)then
            if(oxinblo(k-1,icomp).eq.1) goto 100
         endif
         if(npath.gt.0)then
             kb=k
             wfroabin(kb)=0.0
             wfrossi(kb)=0.0
             tliqav=tclsur(k)
             call solin2(kb , naz , tclsur ,tliqbcss , tliqav, wbotab,
     +  wbotss,haddbt, dz , wfroabin, wfrossi,  hadd1, rftemp, 
     +  ifrag ,hremov, wremgt,sflow,npath)
        endif 
  100 continue
  
c Relocation at outside of guide tube  
c calculate relocation of liquefied stainless steel.
       do 120 k=1,naz
           sumbco(k)=wrbszo(k,icomp,11)
           sumsso(k)=wrbszo(k,icomp,1)+wrbszo(k,icomp,2)+
     &                       wrbszo(k,icomp,3)
           sumzro(k)=wrbszo(k,icomp,9)
  120   continue  
  
      do 250 k=1,naz
        wtotout=0.
        wtotmx=0.
        do l=1,12
           wtotout=wtotout+wrbszo(k,icomp,l)
        enddo
        if(mltgti(k).eq.1.and.wconss(k).ge.1.e-6)then
          wss1=wconss(k)+sumssi(k)
          wzr1=wcongt(k)
        else 
          wss1=sumsso(k)
          wzr1=sumzro(k)
        end if
c First calculate atomic fraction of Fe in reaction zone.
        wtotmx=wss1+wzr1
        if(wss1.gt.1.e-6)then
c fwss=mass fraction of Fe in mixture.
c fwzr=mass fraction of Zr in mixture.
          fwss=wss1/wtotmx
          fwzr=1.-fwss
c 0.05538 = averaged atomic weight of SS divided by 1000.
c 0.09122 = atomic weight of Zr divided by 1000.
          atmtot=fwss/0. 05538+ fwzr/0.09122
c fass = atomic fraction of Fe in mixture.
          fass=fwss/(0.05585*atmtot)
        else
          fass=0.24
        end if
        fasspc=100.*fass        
        call phsdsz(fasspc,tliqzs)
c   only the absorber material relocates        
        if(wtotout.gt.1.e-10.and.wtotmx.eq.0.) then
           tsol=tliqzs
           goto 200
        endif        
        if(ifrag(k).gt.0)goto 150
        npath=0
        if(mltgti(k).eq.1)then
          npath=1
          wfross(k)=0.0
        endif
        if(tsur(k).gt.tliqzs.and.wfross(k).gt.1.e-6.and. npath.eq.0)then
          npath=2
          wfross(k)=0.0
        endif        
        if(sumsso(k).gt.1.e-8.and.wremgt(k).gt.1.e-6.and.npath.eq.0)then
          npath=3
        endif  
        if(npath.eq.0)go to 150
        kb=k
        tliqav=tsur(kb)
        tsol=tliqzs
        call solss2(kb , naz , tsur , tsol , tliqav, wbotss,
     +  haddbt, dz , wfross, avoidl, hadd1, rftemp, ifrag , vladeb,
     +  dzfrcl,hremov,wremgt)
        if(npath.eq.1) wremss(k)=wremss(k)+wconss(k)

  150   continue
c calculate relocation of liquified guide tube.
        npath=0
        if(ifrag(k).gt.0)go to 200
c guide tube relocation.
        tsol=tliqzs
        if(mltgti(k).eq.1.and.wcongt(k).ge.1.e-6)then
          npath=1
          woxdwf = oxdwf(ndax*(icomp-1)+k)
          oxdwf(ndax*(icomp-1)+k) =0.0
          wfrogt(k)=0.0
        end if
        if(tsur(k).gt.tliqzs.and.wfrogt(k).gt.1.e-6.and. npath.eq.0)then
          npath=2
          woxdwf = oxdwf(ndax*(icomp-1)+k)
          oxdwf(ndax*(icomp-1)+k) =0.0
          wfrogt(k)=0.0
        end if
        if(wrbszo(k,icomp,9).gt.1.e-10.and.wremgt(k).gt.1.e-10)then
          npath=3
          wfrogt(k)=0.0
        endif
        if(npath.eq.0)goto 200
        kb=k
        tliqav=tsur(kb)
        call solgt2(kb , naz , tsur , tsol , tliqav, wbotgt, 
     +  haddbt, dz , wfrogt, avoidl, hadd1 , rftemp, ifrag , vladeb,
     +  dzfrcl,hremov,woxdwf, oxdwf,wremgt)
        if(npath.eq.1) wremgt(k)=wcongt(k)                           
  200  continue
        npath=0
        tsol=tliqzs        
        if(tsur(k).gt.tliqzs.and.wfroab(k).gt.1.e-6)then
          npath=1
          wfroab(k)=0.0
        endif
        if(wrbszo(k,icomp,11).gt.1.e-10.and.wremgt(k).gt.
     &    1.e-6.and.npath.eq.0)then
          npath=2
          wfroab(k)=0.0
        endif
        if(npath.eq.0)goto 250
        kb=k
        tliqav=tsur(kb)
        call solab2(kb , naz , tsur , tsol , tliqav, wbotab, 
     +  haddbt,dz,wfroab,avoidl, hadd1 , rftemp, ifrag , vladeb,
     +  dzfrcl,hremov,wremgt)          
  250  continue

c   Relocation of B4C pellet in case there is no material underneath
       nomat=0
       spmat=0
       upmat=0
       do k=1,naz-1 
         if(b4cox(k,icomp).eq.2.and.b4cox(k+1,icomp).eq.1)then
           spmat=k  
           goto 300
         endif  
       enddo       
  300  continue
       if(spmat.eq.0) goto 320
       do k=spmat+1,naz
         if(b4cox(k,icomp).eq.1) upmat=k
         if(b4cox(k,icomp).ne.1) goto 320
       enddo
  320  continue          
       do k = spmat,1,-1
          if(b4cox(k,icomp).eq.1.or.b4cox(k,icomp).eq.0)then
             nomat=k+1
             goto 340
          endif
       enddo   
  340 continue
       
       if(nomat.ne.0.and.upmat.gt.nomat)then
         if(spmat.eq.nomat)then
           do k=nomat,upmat-1
              hremov(k+1)=hremov(k+1)+cwb4c(k+1,icomp)
     &                           *aenthl(ictype,tclsur(k+1),rftemp)
              hadd(k)=hadd(k)+cwb4c(k+1,icomp)
     &                          *aenthl(ictype,tclsur(k+1), rftemp)
              cwb4c(k,icomp)=cwb4c(k+1,icomp)
           enddo
           wremab(upmat)=cwb4c(upmat,icomp)
           cwb4c(upmat,icomp)=0.0
           b4cox(nomat,icomp)=1
         else
           do k=1,spmat-nomat+1
              hremov(spmat+2-k)=hremov(spmat+2-k)+
     &       cwb4c(spmat+2-k,icomp)*aenthl(ictype,
     &       tclsur(spmat+2-k),rftemp)
              hadd(spmat+1-k)=hadd(spmat+1-k)+
     &       cwb4c(spmat+2-k,icomp)*aenthl(ictype,
     &       tclsur(spmat+2-k),rftemp)
              cwb4c(spmat+1-k,icomp)=cwb4c(spmat+2-k,icomp)
              cwb4c(spmat+2-k,icomp)=0.0
            enddo
              b4cox(nomat,icomp)=1              
         endif   
       endif
         
            
c    Flow blocakage outside of GT   
        do 500 k=1,naz
          if(ifrag(k).ne.0)go to 500
          wsso=wrbszo(k,icomp,1)+wrbszo(k,icomp,2)+wrbszo(k,icomp,3)
     +           +wrbszo(k,icomp,8)    
          do l=4,7
            wssoo=wrbszo(k,icomp,l)
          enddo
          volrel = wsso/sden(tsur(k))+wssoo/soden(tsur(k))
     +   +wrbszo(k,icomp,9)/cden(tsur(k))+wrbszo(k,icomp,10)/
     +   zoden(tsur(k))+wrbszo(k,icomp,11)/aden(ictype,tsur(k))
     +   +wrbszo(k,icomp,12)/3.22/aden(ictype,tsur(k))
          rorel(k)= sqrt(volrel/(pi*dz(k))+rogt(k)**2)
c      Blockage rate avoid: flow area
          afracl(k)=volrel/avoidl(k)/dz(k)
  500 continue
  
c  Flow blocakge inside of GT  
       
       do 600 k=1,naz  
          oxinblo(k,icomp)=0
          if(ifrag(k).ne.0)go to 600
          wssi=wrbszi(k,icomp,1)+wrbszi(k,icomp,2)+wrbszi(k,icomp,3)
     +            +wrbszi(k,icomp,8)      
          wssoi=wrbszi(k,icomp,4)+wrbszi(k,icomp,5)+wrbszi(k,icomp,6)
     +              +wrbszi(k,icomp,7)   
          wabi=wrbszi(k,icomp,11)
          waboi=wrbszi(k,icomp,12)
          volrel = wssi/sden(tsur(k))+wssoi/soden(tsur(k))+ 
     +     wabi/aden(ictype,tsur(k))+waboi/3.22/aden(ictype,tsur(k))
          surirat(k,icomp)=1.-volrel/dz(k)/sflow(k)
         if(surirat(k,icomp).lt.0.2) oxinblo(k,icomp)=1
  600 continue          

       return
       end
