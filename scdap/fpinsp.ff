*mlist
*if def,selap
       subroutine fpinsp (symbol,nsym,numsp)
c
c  Provides all material properties for fission product condensable
c  species.
c
c  Cognizant engineer ewc (esm).
c
c  fpinsp - initialization of species data
c  fpvceq - calculates equilibrium vapor concentration
c  fpvchm - calculates vapor deposition velocity for chemisorption
c  fpcthc - calculates condensate thermal conductivity
c  fpcrho - returns condensate density
c  fpvdif - calculates the vapor diffusion coefficient
c  fpvsol - returns the vapor solubility
c  fpemfr - returns elemental mass fractions
c  fpspnm - returns species name
c  fpspix - returns species index
c  fpmtnm - returns material type name
c  fpmtix - returns material type index
c
       implicit none
       real symbol(*)
       include 'cons.h'
       integer nsym,numsp
c
       include 'fplim.h'
       include 'fpinsc.h'
       include 'fparm1.h'
       include 'fparm2.h'
       include 'fpinsh.h'
c
       include 'fpctrl.h'
       integer, parameter :: kr=selected_real_kind(12,200)
       character name*4
       integer j,jsp
       real const
       real(kr), parameter :: third=1.0/3.0
c
c  Initializations.
c    Convert temperature from Celcius to Kelvin.
c    Convert density from (g/cm3) to (kg/m3).
c    Set equilibrium concentration coefficients.
c    Calculate molecular diameter.
c
       nsp2 = 0
       do j = 1,nsym
         write (name, '(a4)') symbol(j)
         jsp = 1
         do
           if (jsp .gt. maxsp) exit
           if (name .ne. spsym(jsp)) then
             jsp = jsp + 1
             cycle
           elseif (list(jsp) .eq. 0) then
             nsp2 = nsp2 + 1
             list(jsp) = nsp2
             indx(nsp2) = jsp
           endif
           exit
         enddo
       enddo
       numsp = nsp2
       const = 6.0/(avogdr*pi)
       do j = 1,maxsp
         tmelt(j) = tmelt(j) + celkel
         rhofp(j) = rhofp(j)*rfact
         beq(j) = atwt(j)/rhofp(j)
         ceq(j) = beq(j)/ugc
         dmol(j) = (const*atwt(j)/rhofp(j))**third
       enddo
       return
       end
*endif
