*mlist
*if def,selap
       subroutine hamsub (kfail,naz,tsur,wuo2,wremuo,wremzr,
     & wzr,hremov,ktopf,ifrag,rftemp,vfuel,denuo2,wfrozr,wfrouo,
     & wzrinc,winliq,winrem,winfro)
!  Routine computes the mass of liquid zry-uo2 which bursts from the
!  fuel rod and flows as a slug.
!
!  Cognizant engineer: ljs.
!
!  Calling routine: liqsol.
!  Subroutines called: fenthl, centhl.
!
!#                           calculations (k)
!#    engineer/programmer: l.j.siefken/w.j.suitt
!#    last date modified:  10/ 9/81
!#    input variables:        description
!#    kfail               number of axial zone in which failure of cladd
!#    naz                 number of axial nodes.
!#    tsur(z)             temperature of surface over which slug flows a
!#    wuo2                weight of dissolved uo2.
!#    winliq              mass of liquified inconel at axial node k
!     winfro(k)           mass of previously slumped and frozen Inconel
!                         at axial node k (kg).
!#    winrem              mass of inconel removed from axial node k
!#    wremuo              mass of uo2 removed from axial zone k by disso
!#    wremzr              mass of zr removed from axial zone k by liquef
!#    wzr                 weight of dissolved zr.
!#    wzrinc              mass of zr liquified due to reaction with
!#                        inconel grid spacer
!#
!#       ifrag(k) = variable indicating whether or not in-
!#                  tact fuel rod, debris bed, or void region
!#                  exists in axial zone k.
!#                  0 = intact fuel rod
!#                  1 or 2 = debris bed
!#                  3 = void region
!#        rftemp = reference temperature for enthalpy
!#                 calculations (k)  (input)
!#          vfuel(k)  = volume of fuel in axial zone k inside
!#                      cladding. (m**3)  (input/output)
!#                     (if liquified fuel flows out of cladding
!#                      zro2 layer, input vfuel(k) is reduced.
!#          denuo2    = as-fabricated fuel density (kg/m**3)
!#                      (input)
!#    output variables:       description
!#    hremov              heat removed from axial zone k during time ste
!#    ktopf               top node from which liquid zr is removed.
!
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       include 'scddat.h'
       include 'contrl.h'
       include 'ufiles.h'
!
!  Local variables.
       integer kfail,naz,ktopf,ifrag
       real(kr) tsur,wuo2,wremuo,wremzr,wzr,hremov,rftemp,vfuel,denuo2,
     & wfrozr,wfrouo,wzrinc,winliq,winrem,winfro
       dimension hremov(ndax), tsur(ndax), wuo2(ndax), wremuo(ndax),
     & wremzr(ndax), wzr(ndax), ifrag(ndax), vfuel(ndax),
     & wfrozr(ndax), wfrouo(ndax), wzrinc(ndax), winliq(ndax),
     & winrem(ndax), winfro(ndax)
!
       integer k,nsw,nswadd
       real(kr) fcomp,fotmtl,ftmelt,fhefus,frmlt1,frmlt2
       real(kr) centhl,centhlr,fenthl
       real gaddum
!
!  Data statements.
      data fcomp/0.0/, fotmtl/2.0/, ftmelt/3113.0/, fhefus/27.4e4/,
     1     frmlt1/1.0/, frmlt2/0.0/
!
!     if no failure of zr-o2 during the current time step, return.
      gaddum = 0.0
      ktopf  = kfail
      if(kfail .ne. 0) then
        nsw=0
        do 10 k=kfail,naz
          nswadd=0
          if(k.gt.kfail)nsw=1
          if((wzr(k)+wzrinc(k)+winliq(k)) .lt. 1.e-15) nsw=1
          if(ifrag(k).ne.0)nsw=1
          if(nsw.eq.1)go to 10
          if(winliq(k).gt.1.e-6)then
          nswadd=1
          winrem(k)=winrem(k)+winliq(k)+wzrinc(k)
          end if
          if(wzr(k) .gt. 0.0) then
            nswadd=1
            wremzr(k) = wremzr(k) + wzr(k)
            wremuo(k) = wremuo(k) + wuo2(k)
            vfuel(k)=vfuel(k)-wuo2(k)/denuo2
          end if
         if (nswadd .eq. 1) then
           if (chngno(70)) then
             hremov(k) =(wzr(k) + wzrinc(k) +
     &       winliq(k))*centhlr(tsur(k),rftemp) +
     &       wuo2(k)*fenthl(tsur(k),fcomp,fotmtl,ftmelt,frmlt2,fhefus,
     &       gaddum)
           else
             hremov(k) =(wzr(k) + wzrinc(k) +
     &       winliq(k))*centhl(tsur(k),rftemp) +
     &       wuo2(k)*fenthl(tsur(k),fcomp,fotmtl,ftmelt,frmlt2,fhefus,
     &       gaddum)
           endif
          ktopf  = k
       end if
   10   continue
      end if
      return
      end
*endif
