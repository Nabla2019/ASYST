*mlist
*if def,selap
      subroutine imesh(icomp)
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ljs.
c
       implicit none
*call alcm
*call iparm
*call parm
*call ufiles
c
       integer icomp
c  Local variables.
       integer i71,i73,m11,mul,n12,n13
c
      coni = 0.0
      conj = 0.0
      seti = 0.0
      setj = 0.0
      mnpo = 0
c     print heading
      call titl
      write (output,2000)
c     allocate storage for mesh generation
      nmax=maxi*maxj
      n1  = last
      n2  = n1+maxi
      n3  = n2+maxi
      n4  = n3+maxj
      n5  = n4+maxj
      n6  = n5+nmax
      n7  = n6+nmax
      last= n7+nmax
      call rmesh(a(n1),a(n2),a(n3),a(n4),a(n5),a(n6),a(n7),icomp)
c     allocate storage for element information
      i8 = last
      i9 = i8 + 5*numel
      i70 = i9 + numel
      i72 = i70 + numel
      i74 = i72 + numel
      i76 = i74 + numel
      i78 = i76 + numel
      i80 = i78 + numel
      i82 = i80 + numel
      i84 = i82 + numel
      i86 = i84 + numel
      i88 = i86 + numel
      i90 = i88 + numel
       iptalf=i90+numel
       iptlif=iptalf+numel
       iptcdf=iptlif+numel
       iptsif=iptcdf+numel
       iwurce = iptsif + numel
       iwuoce = iwurce + numel
       iwalce = iwuoce + numel
       iratpo = iwalce + numel
       iptkfz = iratpo + numel
       iptmlt=iptkfz+numel
       iptmdt=iptmlt+numel
       iptfml=iptmdt+numel
       ipthfs=iptfml+numel
       iptkfr=ipthfs+numel
       iptiel=iptkfr+numel
       iptjel=iptiel+numel
       ipteij=iptjel+numel
       i6=ipteij+maxj*maxi
      i7 = i6 + numnp
      n12 = i7 + numnp
      n13= n12+ 5*nmtl
      i71 = n13 + nmtl
      i73 = i71 + nmtl
      m11 = i73 + nmtl
      i10 = m11 + nmtl
      i99 = i10 + numel
      i100 = i99 + numnp
      i102 = i100 + numel
      i103 = i102 + numel
      i104 = i103 + numel
      i105 = i104 + nmtl
      i108 = i105 + numel
      i109 = i108 + 4*numel
      i110 = i109 + 4*numel
       i111=i110+4*numel
c      calculate pointers for debris bed fission product - aerosols
c      iptspl points to array holding species to be tracked
c      iptspd points to array storing inventory (kg) of each species
c             for each element
c      idetop points to array storing top elements through which
c             debris bed passes
c        **   pointers iptfpv, iptgav, ipafp, ipbfp, iptfp, used    **
c        **   in subroutine (debfpr,gasrl) for tracking fission     **
c        **   product-aerosols in debris bed                        **
c      iptfpv points to array storing offsets for identifying relap5
c             volume numbers adjacent to convective nodes of debris bed
c             for condensible aerosols (add to fpsrc term)
c             (this pointer set in sr conset)
c      iptgav points to array storing offsets for identifying relap5
c             volume numbers adjacent to convective nodes of debris bed
c             for noncondensible aerosols (add to gaman term)
c             (this pointer set in sr conset)
c      ipafp  points to array of amount of gas (aerosol)
c             released from couple element in time step (kg)
c      ipbfp  points to array of mass of ith aerosol
c             in kth bubble size at start/end of time step (kg)
c             for each element (allow for 20 bubble sizes)
c      iptfp  points to total mass of ith aerosol at
c             start/end of time step for each element (kg)
c
c        **  dimensioning for nspdeb aerosols (max 17         **
c        **  condensible and 2 noncondensible aerosols for    **
c         ** for debris bed, and for 15 bubble sizes in release   **
c        **  model (subroutine gasrl)                         **
c
       iptspl = i111 + numel
       mul    = nspdeb
       if (nspdeb .eq. 0) mul = 1
       iptspd = iptspl + mul
       iptsmx = iptspd + numel*mul
       idetop = iptsmx + numel*mul
       inussn=idetop+(maxi-1)
       ipafp  = inussn + numel
       ipbfp  = ipafp  + numel*mul
      iptfp=ipbfp+numel*mul*15
      iptnbu=iptfp+numel*mul
      ipxfp = iptnbu + numel*15
c     set pointers for debris bed surface aluminum oxidation
c     model
      ipwxl2 = ipxfp  + mul*15
      ipexlm = ipwxl2 + numel
      iph2lm = ipexlm + numel
      ipoxth = iph2lm + numel
      last   = ipoxth + numel
c
c     set pointers for user-defined ATR configuration
c     ilayer holds the elements in each layer,
c     inelms holds the number of elements in each layer.
      ilayer = last
      inelms = ilayer + 25*25
      last   = inelms + 25
c
      call points(a(n3),a(n4),a(n5),a(n6),a(i6),a(i7))
      call relem(a(n3),a(n4),a(i8),a(i9),
     1a(n12),a(i6),a(i7),a(n13),a(i70),a(i71),a(i72),a(i73),
     +     a(i10),a(m11),a(i104),a(i105),icomp)
c      call subroutine to produce arrays giving i-j coordinates
c      of each element.
       call elijgn (a(i8), a(iptiel), a(iptjel), a(ipteij),
     # a(n3), a(n4))
      write (output,2003) numnp
      write (output,2004) numel
 2000 format(1h0,'M e s h  g e n e r a t i o n  d a t a')
 1000 format (4i5,f10.4)
 2001 format(
     1 ' maxi--------------------------------',i5/
     2 ' maxj--------------------------------',i5/
     # ' number of material blocks-----------',i5/
     4 ' geometric code----------------------',i5/
     5 ' unit conversion ---------------------', 1p,e13.5)
 2003 format(' Total number of nodes        =',i4)
 2004 format(' Total number of element      =',i4)
      return
      end
*endif
