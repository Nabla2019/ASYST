*mlist
       subroutine liqcon (dtmac,dz,naz,rl,rigt,rogt,rozrgt,rizrgt,
     & ross,riss,rftemp,tsur,tsur0,z,avoidl,
     & ifrag,vladeb,nfi,rocrab,wbotab,wbotss,wbotgt,wfroab,
     & wfross,wfrogt,wremab,wremss,wremgt,hadd,haddbt,hremov,
     & wconab,wconss,wcongt,afracl,dzfrcl,mltabi,mltssi,mltgti,tmac)
c
c  liqcon calculates meltdown of PWR contrl rods.
c
c  Cognizant engineer: ljs.
!
c  Calling subroutine: slabc.
c  Subroutines called: floab,solab,solss,solgt,matpro.
c#     argument list definition:
!
c#     dtmac     = time step (s)     (input)
c#     dz(k)     = height of each axial zone  (m)  (input)
c#     naz       = number of axial zones      (input)
c#     rl        = summation of hieghts of all axial zones.
c#                 (m)    (input)
c#     rigt(k)   = inner radius of guide tube with inner
c#                 oxide layer. (m)     (input)
c#     rogt(k)   = outer radius of guide tube with outer
c#                 oxide layer. (m)     (input)
c#     rozrgt(k) = outer radius of guide tube zr layer.
c#                 (m)     (input)
c#     rizrgt(k) = inner radius of guide tube zr layer. (m)
c#                 (input)
c#     ross(k)   = outer radius of control rod cladding
c#                 stainless steel layer. (m)    (input)
c#     riss(k)   = inner radius of control rod cladding
c#                 stainless steel layer. (m)    (input)
c#     rftemp    = reference temperature for enthalpy cal-
c#                 culations. normally, rftemp is set equal
c#                 to room temperature. (k)    (input)
c#     tsur(k)   = average temperature of control rod in
c#                 axial zone k at end of time step. (k).
c#                 (input)
c#     tsur0(k)  = average temperature of control rod in
c#                 axial zone k at start of time step. (k)
c#                 (input)
c#     z(k)      = elevation of midplane of axial zone k. (m)
c#                 (input)
c#     avoidl(k) = flow area around guide tube. (m*2)
c#                 (input)
c#     ifrag(k)  = variable indicating whether or not in-
c#                 tact control rod, debris bed or void
c#                 region exists in axial zone k.
c#                 0 = intact control rod
c#                 1 or 2 = debris bed
c#                 3 = void region
c#                 (input)
c#     vladeb(k) = volume of liquid which can be absorbed
c#                 by debris bed in axial zone k. (m**2)
c#                 (input)
c#    nfi(k)    = indicator of breach in stainless steel
c#                cladding of control rod in axial zone k
c#                durung time step.
c#                0 = no, 1 = yes.    (output)
c#    rocrab(k) = outer radius of crust of solidified
c#                neutron absorber material around
c#                guide tube. (m)    (output)
c#    wbotab    = mass of liquified neutron absorber
c#                material which flowed below bottom
c#                of core. (kg)    (input/output)
c#    wbotss    = mass of liquified control rod stainless
c#                steel cladding which flowed below bottom
c#                of core. (kg)    (input/output)
c#    wbotgt    = mass of liquified zr guide tube which
c#                flowed below bottom of core. (kg)
c#                (input/output)
c#    wfroab(k) = mass of solidified neutron absorber
c#                axial zone k. (kg)    (input/output)
c#     wfross(k) = mass of solidified stainless steel cladding
c#                 in axial zone k. (kg)     (input/output)
c#     wfrogt(k) = mass of solidified guide tube in axial
c#                 zone k. (kg)    (input/output)
c#     wremab(k) = mass of neutron absorber material removed
c#                 from axial zone k. (kg)    (input/output)
c#     wremss(k) = mass of control rod stainless steel clad-
c#                 ding removed from axial zone k. (kg)
c#                 (input/output)
c#     wremgt(k) = mass of guide tube removed from axial
c#                 zone k. (kg)    (input/output)
c#     hadd(k)   = heat added to axial zone k during time
c#                 step due to flow of liquified control
c#                 rod material. (j)    (output)
c#     haddbt    = heat added to region below core due to
c#                 flow of liquified control rod material.
c#                 (j)     (input/output)
c#     hremov(k) = heat removed from axial zone k during
c#                 time step due to flow of liquified con-
c#                 trol rod material. (j)    input/output)
c#     wconab(k) = mass of in-situ liquified neutron ab-
c#                 sorber material in axial zone k. (kg)
c#                 (output)
c#     wconss(k) = mass of in-situ liquified stainless steel
c#                 cladding in axial zone k. (kg)
c#                 (input/output)
c#     wcongt(k) = mass of in-situ liquified guide tube in
c#                axial zone k. (kg)    (input/output)
c#    afracl(k) = fractional reduction in flow area around
c#                guide tube due to crust formation on out-
c#                side of guide tube. if afracl(k) = 1.0,
c#                then flow area around guide tube is com-
c#                pletely filled with crust. (output)
c#    dzfrcl(k) = fraction of height of axial zone k which
c#                is completely filled with liquified/
c#                solidified control rod material resting
c#                on top of debris bed.  (input/output)
c#    mltabi(k) = indicator of in-situ liquified neutron
c#                absorber material in axial zone k.
c#                0 = no , 1 = yes.   (output)
c#    mltssi(k) = indicator of in-situ liquified control rod
c#                stainless steel cladding in axial zone
c#                k. 0 = no , 1 = yes.  (output)
c#    mltgti(k) = indicator of in-situ liquified guide
c#                tube material in axial zone k.
c#                0 = no , 1 = yes.   (output)
c#    tmac      = current time (s)   (input)
c
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       include 'cons.h'
       include 'scddat.h'
       include 'dbacct.h'
       include 'contrl.h'
       include 'ufiles.h'
c
       integer naz,ifrag,nfi,mltabi,mltssi,mltgti
       real(kr) dtmac,dz,rl,rigt,rogt,rozrgt,rizrgt,ross,riss,rftemp,
     & tsur,tsur0,z,avoidl,vladeb,rocrab,wbotab,wbotss,wbotgt,wfroab,
     & wfross,wfrogt,wremab,wremss,wremgt,hadd,haddbt,hremov,
     & wconab,wconss,wcongt,afracl,dzfrcl,tmac
       dimension rigt(*),rogt(*),rozrgt(*),rizrgt(*),ross(*),riss(*),
     & tsur(ndax),tsur0(*),z(*),avoidl(ndax),ifrag(*),vladeb(*),
     & nfi(*),rocrab(*),wfroab(*),wfross(*),wfrogt(*),wremab(*),
     & wremss(*),wremgt(*),hadd(*),hremov(ndax),
     & wconab(ndax),wconss(ndax),
     & wcongt(ndax),afracl(ndax),dzfrcl(*),mltabi(ndax),
     & mltssi(ndax),mltgti(ndax),dz(*)
c  Local variables.
       integer ictype,k,kb,kbreak,kbt,nflow,nswflo,npath
       integer kkk
       real gtmxlq
       real(kr) acrsec,ham,hrm,rho,rhoab,rhogt,rhoss,temp1,thkag,
     * tliqab,tliqav,tliqgt,tliqss,tsol,tsolab,tsolss,vol,wfab,
     * wfgt,wflo,wfss,wrab,wrgt,wrss
       real(kr) wtotmx,fwss,fwzr,atmtot,fass,fasspc,tliqmx,rgas,
     # ceffss,ceffzr,thkhld,tliqzs,wss1,wzr1
       real(kr) aden,aenthl,cden,centhl,centhlr,sden,senthl
c  Data statements.
c  thkhld = thickness of oxide layer on outside of guide tube that
c           results in oxide layer containing liquefied material
c           inside it (m).
       data thkhld / 0.3e-3/
c  rgas = universal gas constant (Pa * m**3/(gram-mole * K)
       data rgas / 8.314/
       data gtmxlq / 0.90/
       haddbt = 0.0
       wbotab = 0.0
       wbotss = 0.0
       wbotgt = 0.0
       wflo = 0.0
       temp1 = rftemp
c  Since this subroutine only models eutectic reaction between
c  stainless steel cladding and Zr guide tube, it is only valid
c  for control rod with Ag for absorber material.  B4C as
c  absorber material cannot be represented because eutectic
c  reaction between B4c and stainless steel is not modeled.
       ictype=1
       rhoab=aden(ictype,temp1)
       rhoss=sden(temp1)
       rhogt=cden(temp1)
       do k = 1,naz
         rocrab(k)=rogt(k)
         wconab(k)=rhoab*dz(k)*pi*riss(k)**2
         wconss(k)=rhoss*dz(k)*pi*(ross(k)+riss(k))*rsscn1(k,icomp)
         wcongt(k)=rhogt*dz(k)*pi*(rozrgt(k)+rizrgt(k))* rzrcn1(k,icomp)
         hremov(k)=0.0
         hadd(k)=0.0
         mltabi(k)=0
         mltssi(k)=0
         mltgti(k)=0
       enddo
       ictype=1
c calculate solidification and liquefaction temperatures
c of ag-in-cd, ss, and zr.
      call ahyprp(ictype, tsolab, tliqab)
      call shyprp(tsolss, tliqss)
c tliqss=minimum temperature at which stainless steel in
c        contact with Zr will liquefy.
      tliqgt=2150.
      tliqss=1247.
      tliqzs=1900.0
c determine axial zones with liquid absorber material,
c stainless steel cladding or guide tube.
      do20k=1,naz
        if(tsur(k).ge.tliqab.and.wremab(k).lt.1.e-6)mltabi(k)=1
        if(tsur(k).ge.tliqss.and.wremss(k).lt.1.e-6)mltssi(k)=1
        if(tsur(k).ge.tliqgt.and.wremgt(k).lt.1.e-6)mltgti(k)=1
   20 continue
c calculate amount of in situ liquid material in each axial zone.
      do60k=1,naz
        if(mltabi(k).eq.0)go to 30
        if(wremab(k).gt.1.e-15)go to 30
c thick oxide on guide tube prevents melt through at that location.
        if((rogt(k)-rozrgt(k)).gt.thkhld)go to 50
        ictype=1
c *****   assume as-fabricated dimensions.
        wconab(k)=rhoab*dz(k)*pi*riss(k)**2
   30   if (mltssi(k) .eq. 0) go to 50
        if(wremss(k).gt.1.e-15)go to 50
        if(wremab(k).gt.1.e-15)go to 50
        if(mltgti(k).eq.1)go to 50
c 
c Thickness of control rod cladding and guide tube relative
c to radii of these components is small enough that equations
c for reaction zones in slab geometry can be applied in cylin-
c drical geometry.
c calculate growth of reaction zone in control rod cladding
c and in guide tube that interfaces with control rod cladding.
c First calculate atomic fraction of Fe in reaction zone.
        if(wconss(k).gt.1.e-6)then
          wtotmx=wconss(k)+wcongt(k)
c fwss=mass fraction of Fe in mixture.
c fwzr=mass fraction of Zr in mixture.
          fwss=wconss(k)/wtotmx
          fwzr=1.-fwss
c 0.05585 = atomic weight of Fe divided by 1000.
c 0.09122 = atomic weight of Zr divided by 1000.
          atmtot=fwss/0. 05585+ fwzr/0.09122
c fass = atomic fraction of Fe in mixture.
          fass=fwss/(0.05585*atmtot)
        else
          fass=0.24
        end if
        fasspc=100.*fass
        call phsdsz(fasspc,tliqmx)
c coefficients in equations below from report KfK5125.
c**     ceffss=1.19e-6*exp(-435.6/(rgas*tsur(k)))
c**     ceffzr=1.02e-9*exp(-481.8/(rgas*tsur(k)))
c   estimated by trial and error corrections to coefficients
c   from PSI
        ceffss=2.919e+15*exp(-7.02521e+5/(rgas*tsur(k)))
        ceffzr=2.844e+15*exp(-6.43504e+5/(rgas*tsur(k)))
        if(tsur(k).gt.tliqmx)then
c calculate growth in reaction zone in both directions.
          rsscn1(k,icomp)=sqrt(rsscn0(k,icomp)** 2+ ceffss*dt)
          if(tsur(k).gt.tliqgt)rsscn1(k,icomp)= ross(k)-riss(k)
 
          if(rsscn1(k,icomp).gt.(ross(k)-riss(k)))then
            rsscn1(k,icomp)=ross(k)-riss(k)
          end if
          rzrcn1(k,icomp)=sqrt(rzrcn0(k,icomp)** 2+ ceffzr*dt)
cljs in order to leave residual control rod material for radiation
cljs heat transfer calculations, limit removal of guide tube material
cljs to gtmxrm fraction of its thickness
            if(rzrcn1(k,icomp).gt.(gtmxlq*(rozrgt(k)-rizrgt(k))))then
            rzrcn1(k,icomp) = gtmxlq*(rozrgt(k)-rizrgt(k))
            end if
          if(tsur(k).gt.tliqgt)then
            rzrcn1(k,icomp)=gtmxlq*(rozrgt(k)-rizrgt(k))
          end if
          go to 40
        end if
c if mixture has ratio of Fe to Zr that results in lowest
c possible liquefaction temperature, and temperature is less
c than liquefaction temperature, then further dissolution does
c not occur.
        if(fasspc.gt.23.0.and.fasspc.lt.25.0)go to 40
        if(fasspc.ge.24.0)then
          rzrcn1(k,icomp)=sqrt(rzrcn0(k,icomp)** 2+ ceffzr*dt)
        else
          rsscn1(k,icomp)=sqrt(rsscn0(k,icomp)** 2+ ceffss*dt)
        end if
cljs limit removal of guide tube material so residual amount left
cljs for heat transfer and radiation calculations for control rod
       if(rzrcn1(k,icomp).gt.(gtmxlq*(rozrgt(k)-rizrgt(k))))then
       rzrcn1(k,icomp) = gtmxlq*(rozrgt(k)-rizrgt(k))
       end if
   40   continue
        if(nfi(k).eq.0)then
          if(rzrcn1(k,icomp).ge.(gtmxlq*(rozrgt(k)-rizrgt(k))
     &    - 1.e-10))then
c Guide tube has been liquefied to point of breaching.
            mltgti(k)=1
            rzrcn1(k,icomp)=gtmxlq*(rozrgt(k)-rizrgt(k))
!           write(output,9000)timehy,icomp,k,tsur(k)
!9000 format(/,' *** Melt through of guide tube and release of',
!    +' liquefied absorber material ***',/,' time =',e12.6,' s;',
!    +'  component ',i3,' node ',i3, ' temperature =',e10.4,' K')
!           write(output,9010)rzrcn1(k,icomp),rozrgt(k),rizrgt(k)
!9010 format(' rzrcn1=',e10.4,' rozrgt=',e10.4,' rizrgt=',e10.4)
          end if
        end if
        wconss(k)=rhoss*dz(k)*pi*(ross(k)+riss(k))* rsscn1(k,icomp)
        wcongt(k)=rhogt*dz(k)*pi*(rozrgt(k)+rizrgt(k))* rzrcn1(k,icomp)
   50   continue
   60 continue
      do70k=1,naz
        if(ifrag(k).gt.0)go to 70
        if(wremss(k).gt.1.e-15)go to 70
        if(mltgti(k).eq.1)nfi(k)=1
   70 continue
c 
c calculate liquefaction-flow-solidification of
c neutron absorber material.
c 
c assume one break per time step. lowest axial
c zone breaks first.
c 
      nflow=0
      do90k=1,naz
        if(nflow.eq.1)go to 90
        if(ifrag(k).gt.0)go to 90
        if(wremab(k).gt.1.e-15)go to 90
        if(mltabi(k).eq.0)go to 90
c 
c flow if either breach in axial zone k or material
c flowed from axial zone just below.
c 
        if(nfi(k).eq.1)nflow=1
        if(k.eq.1)go to 80
        if(wremab(k-1).gt.1.e-15)nflow=1
   80   continue
        if(nflow.eq.0)go to 90
c calculate new position of neutron absorber material.
        kbreak=k
        call floab(kbreak, naz , wconab, rftemp, tsur , z , dz , rogt ,
     +  avoidl, ifrag , vladeb, wfroab, tliqab, tsolab, wremab, dzfrcl,
     +  wbotab, hadd , haddbt, hremov, afracl)
   90 continue
c calculate relocation of solidified ag-in-cd  which remelts.
      do100k=1,naz
        if(ifrag(k).ne.0)go to 100
        if(wfroab(k).lt.1.e-15)go to 100
        if(tsur(k).lt.tliqab)go to 100
        wflo=wfroab(k)
        kbt=k
        tliqav=tsur(k)
        ictype=1
        hremov(k)=hremov(k)+ wflo*aenthl(ictype,tliqav,rftemp)
        wfroab(k)=0.0
        call solab(kbt , naz , tsur , tsolab, tliqav, wbotab, wflo ,
     +  haddbt, dz , wfroab, avoidl, hadd , rftemp, ifrag , vladeb,
     +  dzfrcl)
  100 continue
c calculate outer radius of crust and flow area reduction.
      do110k=1,naz
        if(ifrag(k).ne.0)go to 110
        if(wfroab(k).lt.1.e-15)go to 110
        ictype=1
        temp1=tsur(k)
        rho=aden(ictype,temp1)
        vol=wfroab(k)/rho
        rocrab(k)= sqrt(vol/(pi*dz(k))+rogt(k)**2)
        acrsec=vol/dz(k)
        afracl(k)=acrsec/avoidl(k)
  110 continue
c calculate relocation of liquefied stainless steel.
      do130k=1,naz
        if(mltgti(k).eq.1.and.wconss(k).ge.1.e-6)then
          wss1=wconss(k)
          wzr1=wcongt(k)
        else
          wss1=wfross(k)
          wzr1=wfrogt(k)
        end if
        tliqzs=1700.
c First calculate atomic fraction of Fe in reaction zone.
        if(wss1.gt.1.e-6)then
          wtotmx=wss1+wzr1
c fwss=mass fraction of Fe in mixture.
c fwzr=mass fraction of Zr in mixture.
          fwss=wss1/wtotmx
          fwzr=1.-fwss
c 0.05585 = atomic weight of Fe divided by 1000.
c 0.09122 = atomic weight of Zr divided by 1000.
          atmtot=fwss/0. 05585+ fwzr/0.09122
c fass = atomic fraction of Fe in mixture.
          fass=fwss/(0.05585*atmtot)
        else
          fass=0.24
        end if
        fasspc=100.*fass
        call phsdsz(fasspc,tliqzs)
        tsol=tliqzs
        if(ifrag(k).gt.0)go to 120
        npath=0
        nswflo=0
        if(mltgti(k).eq.1.and.wconss(k).ge.1.e-6)then
          nswflo=1
          npath=1
          wflo=wconss(k)+wfross(k)
          wfross(k)=0.0
          tsol=tliqzs
        end if
        if(tsur(k).gt.tliqzs.and.wfross(k).gt.1.e-6.and. npath.eq.0)then
          nswflo=1
          npath=2
          wflo=wfross(k)
          wfross(k)=0.0
          tsol=tliqzs
        end if
        if(nswflo.eq.0)go to 120
        kb=k
        tliqav=tsur(kb)
        call solss(kb , naz , tsur , tsol , tliqav, wbotss, wflo ,
     +  haddbt, dz , wfross, avoidl, hadd , rftemp, ifrag , vladeb,
     +  dzfrcl)
        if(npath.eq.1)then
          wremss(k)=wconss(k)
          wconss(k)=0.0
        end if
        hremov(k)=hremov(k)+
     #  wremss(k)*senthl(tliqav, rftemp)
  120   continue
c calculate relocation of liquified guide tube.
        npath=0
        if(ifrag(k).gt.0)go to 130
c guide tube relocation.
        nswflo=0
        if(mltgti(k).eq.1.and.wcongt(k).ge.1.e-6)then
          nswflo=1
          npath=1
          wflo=wcongt(k)+wfrogt(k)
          wfrogt(k)=0.0
          tsol=tliqzs
        end if
        if(tsur(k).gt.tliqzs.and.wfrogt(k).gt.1.e-6.and. npath.eq.0)then
          nswflo=1
          wflo=wfrogt(k)
          wfrogt(k)=0.0
          npath=2
          tsol=tliqzs
        end if
        if(nswflo.eq.0)go to 130
        kb=k
        tliqav=tsur(kb)
        call solgt(kb , naz , tsur , tsol , tliqav, wbotgt, wflo ,
     +  haddbt, dz , wfrogt, avoidl, hadd , rftemp, ifrag , vladeb,
     +  dzfrcl)
        if(npath.eq.1)then
          wremgt(k)=wcongt(k)
          wcongt(k)=0.0
        end if
       if (chngno(70)) then
         hremov(k)=hremov(k)+wremgt(k)*centhlr(tliqav, rftemp)
       else
         hremov(k)=hremov(k)+wremgt(k)*centhl(tliqav, rftemp)
       endif
  130  continue
      return
      end
