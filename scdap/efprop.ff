*mlist
*if def,selap
       subroutine efprop (effcp,effk,effgen,naz,ngeom,numelm,tcond,
     * xcond,n1,n2,ifrag,efrcpa,effka,efgena,efstor,efstr0,tcond0)
c
c  efprop computes average thermal properties and stored energy for a
c  component.
c
c  Cognizant engineer: cma.
c
c calling subroutines: fuelan, cylin, slabc
c
       implicit none
*call scddat
*call buntim
*call tblsp
c
c  Local variables.
       integer i,ifrag,j,kprint,n1,n2,naz,nelm,ngeom,numelm
       real ai,asum,effcp,effgen,effk,effka,efgena,efrcpa,efstor,efstr0,
     * sumenr,t01,t02,tcond,tcond0,xcond
       dimension xcond(ndrd,ndax), numelm(ndax), effcp(ndrd,ndax),
     # effk(ndrd,ndax), effgen(ndrd,ndax), efrcpa(ndax),
     +          effka( ndax ), efgena( ndax ), efstor( ndax ),
     +          tcond( ndrd,ndax ), ifrag( ndax )
       dimension tcond0(ndrd,ndax), efstr0(ndax)
*call cons
*call ufiles
c
      do 100 i = 1 , naz
       if(irubpp(i,icomp).eq.1)go to 100
c        initialize average thermal capacitance, thermal conductivity,
c        heat generation, and stored energy
         efrcpa(i) = 0.0
         effka(i) = 0.0
         efgena(i) = 0.0
       sumenr=0.0
         if ( ifrag(i) .eq. 0 ) then
            asum = 0.0
            nelm = numelm(i)
            do 90 j = 1 , nelm
               if ( ngeom .gt. 1 )
     +            ai = ( xcond(j+1,i) + xcond(j,i) ) *
     +                 ( xcond(j+1,i) - xcond(j,i) ) *
     +                 pi
               if ( ngeom .le. 1 )
     +            ai = ( xcond(j+1,i) - xcond(j,i) )
               efrcpa(i) = efrcpa(i) + effcp(j,i) * ai
               effka(i) = effka(i) + ai / effk(j,i)
               efgena(i) = efgena(i) + effgen(j,i) * ai
       kprint=0
       if(kprint.eq.1)then
       write (output,901)j,i,tcond(j+1,i),tcond(j,i),tcond0(j+1,i),
     # tcond0(j,i)
  901  format (' In efprop, j=',i3,' i=',i3,' tcond(j+1,i)=',e10.4,
     # ' tcond(j,i)=',e10.4,' tcond0(j+1,i)=',e10.4,' t0ji=',e10.4)
       end if
       t01=tcond0(j,i)
       t02=tcond0(j+1,i)
       sumenr=sumenr+effcp(j,i)*ai
     # *(0.5*(tcond(j+1,i)+tcond(j,i))-0.5*(t01+t02))
   90       asum = asum + ai
       efstor(i)=efstr0(i)+sumenr
            effka(i) = asum / effka(i)
         endif
  100 continue
      return
      end
*endif
