*mlist
*if def,selap
       subroutine epoint (ndf,c,vx,vy,xx,f,npp)
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
c
       implicit none
*call deriv
c
c  Local variables.
       integer i,j,k,m,n,ndf,npp
       real area1,area1a,area1b,area2,area2a,area2b,area3,area3a,area3b,
     * areat,c,dx,f,gamma,gsign,r,rq,s,sq,vrs,vx,vy,x1,x2,x3,xab,xe,
     * xi,xx,xxi,y1,y2,y3,yab,ye
       real tarea
       external tarea
       external cross,jacob
      dimension xx(2,4),f(4)
      dimension xab(2),yab(2),dx(3),gamma(3),xi(3),vrs(3),xxi(2,3)
      dimension rq(2,2),sq(2,2)
      data rq(1,1)/ 1./,rq(1,2)/-1./,rq(2,1)/ 0./,rq(2,2)/ 0./
      data sq(1,1)/ 0./,sq(1,2)/-0./,sq(2,1)/ 1./,sq(2,2)/-1./
      if(ndf.gt.3) go to 400
c     obtain evaluation point for a triangle
c     determine dx
      dx(1)=2.
      dx(2)=2.
      dx(3)=2.
      vrs(1)=vx*(xx(1,3)-xx(1,2))/2.+vy*(xx(2,3)-xx(2,2))/2.
      vrs(2)=vx*(xx(1,1)-xx(1,3))/2.+vy*(xx(2,1)-xx(2,3))/2.
      vrs(3)=vx*(xx(1,2)-xx(1,1))/2.+vy*(xx(2,2)-xx(2,1))/2.
c     determine gamma and xi for each side
      do 200 m=1,3
      gamma(m)=c*vrs(m)*dx(m)
      xi(m)=0.
      if(gamma(m).eq.0.0) go to 200
      gsign=sign(1.,gamma(m))
      xi(m) = 1.0 / tanh(abs(gamma(m)))
      xi(m)=gsign*xi(m)
      xi(m)=xi(m)-1./gamma(m)
      xi(m)=-xi(m)
  200 continue
c     find x,y values corresponding to 3 xi values
      x1=.5*((1.-xi(1))*xx(1,2)+(1.+xi(1))*xx(1,3))
      y1=.5*((1.-xi(1))*xx(2,2)+(1.+xi(1))*xx(2,3))
      x2=.5*((1.-xi(2))*xx(1,3)+(1.+xi(2))*xx(1,1))
      y2=.5*((1.-xi(2))*xx(2,3)+(1.+xi(2))*xx(2,1))
      x3=.5*((1.-xi(3))*xx(1,1)+(1.+xi(3))*xx(1,2))
      y3=.5*((1.-xi(3))*xx(2,1)+(1.+xi(3))*xx(2,2))
c     find 3 intersection points of xi sweep lines
      call cross(x1,y1,xx(1,1),xx(2,1),x2,y2,xx(1,2),xx(2,2)
     *,xxi(1,1),xxi(2,1))
      call cross(x2,y2,xx(1,2),xx(2,2),x3,y3,xx(1,3),xx(2,3)
     *,xxi(1,2),xxi(2,2))
      call cross(x3,y3,xx(1,3),xx(2,3),x1,y1,xx(1,1),xx(2,1)
     *,xxi(1,3),xxi(2,3))
      xe=0.
      ye=0.
      do 104 i=1,3
      xe=xe+xxi(1,i)
      ye=ye+xxi(2,i)
  104 continue
      xe=xe/3.
      ye=ye/3.
      areat=tarea(xx(1,1),xx(1,2),xx(1,3),xx(2,1),xx(2,2),xx(2,3))
      area1a=tarea(xe,x2,xx(1,1),ye,y2,xx(2,1))
      area1b=tarea(xe,x3,xx(1,1),ye,y3,xx(2,1))
      area2a=tarea(xe,x1,xx(1,2),ye,y1,xx(2,2))
      area2b=tarea(xe,x3,xx(1,2),ye,y3,xx(2,2))
      area3a=tarea(xe,x1,xx(1,3),ye,y1,xx(2,3))
      area3b=tarea(xe,x2,xx(1,3),ye,y2,xx(2,3))
      area1=area1a+area1b
      area2=area2a+area2b
      area3=area3a+area3b
      f(1)=area1/areat
      f(2)=area2/areat
      f(3)=area3/areat
      return
c     obtain evaluation point  for quadrilateral
  400 continue
c     get jacobian
      r=0.
      s=0.
      call jacob(r,s,3,xx,ndf,j)
c     trans form velocities
      vrs(1)=a(1,1)*vx+a(1,2)*vy
      vrs(2)=a(2,1)*vx+a(2,2)*vy
      do 300 m=1,2
      do 301 n=1,2
      r=rq(m,n)
      s=sq(m,n)
      call jacob(r,s,3,xx,ndf,j)
      xab(n)=0.
      yab(n)=0.
      do 302 k=1,ndf
      xab(n)=xab(n)+xx(1,k)*q(k)
      yab(n)=yab(n)+xx(2,k)*q(k)
  302 continue
  301 continue
c     determine dx
      dx(m)=2.
c     determine gamma and xi
      gamma(m)=c*vrs(m)*dx(m)
      xi(m)=0.
      if(gamma(m).eq.0.0) go to 300
      gsign=sign(1.,gamma(m))
      xi(m) = 1.0 / tanh(abs(gamma(m)))
      xi(m)=gsign*xi(m)
      xi(m)=xi(m)-1./gamma(m)
      xi(m)=-xi(m)
  300 continue
c     gobal coordinates of evaluation point
      call jacob(xi(1),xi(2),3,xx,ndf,j)
      xe=0.
      ye=0.
      do 500 i=1,ndf
      xe=xe+xx(1,i)*q(i)
      ye=ye+xx(2,i)*q(i)
  500 continue
      r=1.-xi(1)
      s=1.-xi(2)
      f(1)=(2.-r)*(2.-s)
      f(2)=r*(2.-s)
      f(3)=r*s
      f(4)=(2.-r)*s
      do 501 i=1,4
      f(i)=f(i)/4.
  501 continue
      return
      end
*endif
