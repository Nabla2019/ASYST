*mlist
*if def,selap
       subroutine bwshfl
c
c  bwrmlt calculates B4C relocation.
c
c  Cognizant engineer: ewc.
c
       implicit none
*call scddat
*call cons
*call ndxara
*call scdout
*call scdcom
*call trnot2
*call bwgeom
*call bwprop
*call bwtrns
c
c  Local variables.
       integer nflags,nflagb,nflgs
       dimension nflags(10),nflagb(10),nflgs(10)
       integer i,ib,ibp,ic,ie,j,k,nazm,nb,ni,nj,ns
       real pdzo,pdzs
c
       ibp = ibwrc(icomp)
       if (nazs(ibp).le.0.and.nazb(ibp).le.0) return
       ns = 0
       nb = 0
       nazm = naz
       ib = (ibwrc(icomp)-1)*ndax + 1
       ie = ib + nazm - 1
       ic = (icomp-1)*ndax + 1
       j = ic
       do 10 i = ib,ie
         if (m1t(i).gt.0.0) then
           nb = nb + 1
           nflagb(nb) = i
         else
           nfshb(i) = 1
         endif
         if (m2t(i).gt.0.0) then
           ns = ns + 1
           nflags(ns) = i
           nflgs(ns) = j
         else
           nfshs(i) = 1
         endif
         j = j + 1
  10   continue
       if (nb.eq.nazb(ibp).and.ns.eq.nazs(ibp)) go to 200
       if (nb.eq.nazb(ibp)) go to 100
       i = ib
       do 12 k = 1,nb
         ni = nflagb(k)
         m1t(i) = m1t(ni)
         mbct(i) = mbct(ni)
         mbcs(i) = mbcs(ni)
         mbcl(i) = mbcl(ni)
         mbot(i) = mbot(ni)
         mbos(i) = mbos(ni)
         mbol(i) = mbol(ni)
         rbc(i) = rbc(ni)
         rbo(i) = rbo(ni)
         r1bcs(i) = r1bcs(ni)
         r1bcl(i) = r1bcl(ni)
         r1bos(i) = r1bos(ni)
         r1bol(i) = r1bol(ni)
         t1(i) = t1(ni)
         i = i + 1
  12   continue
       i = ib + nb
       do 22 k = 1,nazm-nb
         m1t(i) = 0.0
         mbct(i) = 0.0
         mbcs(i) = 0.0
         mbcl(i) = 0.0
         mbot(i) = 0.0
         mbos(i) = 0.0
         mbol(i) = 0.0
         rbc(i) = 0.0
         rbo(i) = 0.0
         r1bcs(i) = 0.0
         r1bcl(i) = 0.0
         r1bos(i) = 0.0
         r1bol(i) = 0.0
         i = i + 1
  22   continue
 100   continue
       i = ib
       j = ic
       do 14 k = 1,ns
         ni = nflags(k)
         nj = nflgs(k)
         m2t(i) = m2t(ni)
         msst(i) = msst(ni)
         msss(i) = msss(ni)
         mssl(i) = mssl(ni)
         msot(i) = msot(ni)
         msos(i) = msos(ni)
         msol(i) = msol(ni)
         pdzs = pi*dzcond(nj)*denss(ni)
         pdzo = pi*dzcond(nj)*denso(ni)
         rss(i) = sqrt( msst(i)/pdzs+rbo(i)*rbo(i) )
         r2ssl(i) = rss(i)
         r2sss(i) = sqrt( msss(i)/pdzs+rbo(i)*rbo(i) )
         rso(i) = sqrt( msot(i)/pdzo+rss(i)*rss(i) )
         r2sol(i) = rso(i)
         r2sos(i) = sqrt( msos(i)/pdzo+rss(i)*rss(i) )
         t2(i) = t2(ni)
         dzcond(j) = dzcond(nj)
         i = i + 1
         j = j + 1
  14   continue
       i = ib + ns
       j = ic + ns
       do 24 k = 1,nazm-ns
         m2t(i) = 0.0
         msst(i) = 0.0
         msss(i) = 0.0
         mssl(i) = 0.0
         msot(i) = 0.0
         msos(i) = 0.0
         msol(i) = 0.0
         rss(i) = rbo(i)
         rso(i) = rbo(i)
         r2sss(i) = rbo(i)
         r2ssl(i) = rbo(i)
         r2sos(i) = rbo(i)
         r2sol(i) = rbo(i)
         t2(i) = tcolc(j)
         i = i + 1
         j = j + 1
  24   continue
       i = ib + nb
       do k = 1,nazm-nb
         t1(i) = t2(i)
         i = i + 1
       enddo
 200   continue
       i = ib
       do k = 1,naz
         rco2(k,icomp) = r2sol(i)
         rcrst2(k,icomp) = r2sol(i)
         tcond3(1,k,icomp) = t1(i)
         tcond3(2,k,icomp) = t2(i)
         i = i + 1
      enddo
       nazb(ibp) = nb
       nazs(ibp) = ns
       return
       end
*endif
