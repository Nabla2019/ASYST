*mlist
*if def,selap
       function denmat(im,t)
!  Computes density by interpolation of user-specified tables ttemp 
!  (=temperature) and tro (=density).
!
!  Cognizant engineer: ewc.
!
!  Calling subroutines:  fnro.
!     input variables   description
!        im             material indicator
!        t              temperature ( k )
!
       use gentblc
       implicit none
!
       integer, parameter :: kr=selected_real_kind(12,200)
       real(kr) denmat
       integer im
       real(kr) t
!
       include 'matdat.h'
!
       real(kr) dr(1)
       integer i,jknt,k
       logical err
!
       if (im .le. 12) then
         jknt = im - 8
       else
         jknt = im - 45
       endif
!
       if (umgntno(1,jknt) .gt. 0) then
!  Evaluate material from general tables.
         k = umgntni(2,jknt)
         if (t .ne. gen(k)%gtarg) then
           call gtpolat (gen(k)%gtinfo,gtptr(k)%gtbl,t,dr(1:1),err)
           gen(k)%gtarg = t
           gen(k)%gtval(1) = dr(1)
         else
           dr(1) = gen(k)%gtval(1)
         endif
         denmat = dr(1)
       else
!  Evaluate material from fixed temperature tables.
         if (t .ge. ttemp(markmx(jknt),jknt)) then
           denmat = tro(markmx(jknt),jknt)
         elseif (t .le. ttemp(1,jknt)) then
           denmat = tro(1,jknt)
         else
           i = 1
           do
             if (t.ge.ttemp(i,jknt) .and. t.le.ttemp(i+1,jknt)) then
               denmat = tro(i,jknt) +
     &         (tro(i+1,jknt) - tro(i,jknt))*(t - ttemp(i,jknt))/
     &         (ttemp(i+1,jknt) - ttemp(i,jknt))
               exit
             endif
             i = i + 1
           enddo
         endif
       endif
       return
       end
*endif
