*mlist
      function gceq(gtemp,gpres,k)
c
c  gceq calculates the equilibrium vapor concentration of a
c  chemical species.
c
c  Cognizant engineer: dlh jkh.
c
c  This is a COUPLE ROUTINE
       implicit none
c
c     gceq    = output equilibrium vapor concentration of
c              k th chemical species (kg/m**3)
c
c     gtemp    = input gas temperature (k)
c     gpres    = input gas pressure (pa)
c     k     = input species index
c                 k = 1 for iodine
c                 k = 2 for cesium iodide
c                 k = 3 for cesium hydroxide
c                 k = 4 for tellurium
c                 k = 5 for cadmium
c                 k = 6 for silver
c                 k = 7 for strontium hydroxide
c                 k = 8 for barium hydroxide
c                 k = 9 for hydrogen telluride
c                 k = 10 for hydrogen iodide
c                 k = 11 for tin
c                 k = 12 for tin telluride
c                 k = 13 for water vapor
c                 k = 14 for zirconium oxide
c                 k = 15 for urnaium dioxide
c                 k = 16 for carbon
c                 k = 17 for silver iodide
c                 k = 18 for zinc iodide
c                 k = 19 for zinc
c                 k = 20 for cesium
c
c     gceq was coded by d. l. hagrman june, 1984
c     and modified for water as a consdensible by
c     j. k. hohorst, november, 1985.
c
c     modified by j. k. hohorst in include dana power's model
c     for csi-csoh interaction on wall surfaces, june, 1986.
c
c     modified by j. k. hohorst to include zirconium oxide, uranium
c     dioxide and carbon, november, 1986
c
c     modified by d. l. hagrman to include silver iodide august 1988
c
c     modified by d. l. hagrman to include new csoh data october 1988
c
c     modified by d. l. hagrman to include zn zni2 and cs
c      and to correct agi correlation october 1989
c
*call ufiles
c
c  Local variables.
       integer k
       real a,arg,b,c,c1,c2,c3,denom,frthta,frtht2,frtht3,gpres,gtemp,
     * ppres,rppres,theta,x,y
       real gceq
      dimension a(20),b(20),c(20)
c
c     data statement a = kg-mole masses
c
      data a /2.54e+02,2.60e+02,1.50e+02,1.28e+02,1.12e+02,
     # 1.08e+02,1.21e+02,1.71e+02,1.30e+02,1.28e+02,
     # 1.19e+02,2.47e+02,1.8e+01,1.23e+02,2.70e+02,
     # 1.2011e+01,2.348e+02,3.1922e+02,6.538e+01,1.3291e+02/
c
c     data statement b = molar volume m**3/kg-mole
c
      data b /5.15e-02,5.16e-02,4.08e-02,2.04e-02,1.30e-02,1.03e-02,
     +3.34e-02,7.84e-02,5.06e-02,4.49e-02,1.63e-02,3.81e-02,1.80e-02,
     #2.21e-01,2.46e-02,5.31e-02,4.141e-02,6.84e-02,8.67e-02,7.10e-02/
c
c     data statement c = b/gas constant, b/8.314e+03
      data c /6.19e-06,6.93e-06,4.91e-06,2.46e-06,1.57e-06,1.24e-06,
     +4.02e-06,9.43e-06,6.09e-06,5.40e-06,1.96e-06,4.59e-06,2.17e-06,
     #2.55e-06,2.96e-06,6.39e-07,4.98e-06,8.23e-06,1.04e-05,8.54e-06/
c
c *******************************************************e*************
c     turn off model for csi/csoh interaction by x = -1.0e+00
      x = -1.0e+00
c *********************************************************************
c
      if(k .ne. 1) go to 10
       if(gtemp .le. 3.87e+02) then
          c1 = -8.24e+03
          c2 = 4.57e+01
          c3 = -5.78e+00
       else
          if(gtemp .le. 8.26e+02)then
             c1 = -7.38e+03
             c2 = 5.93e+01
             c3 = -1.19e+01
          else
             c1 = -7.38e+03
             c2 = 5.93e+01
             c3 = -1.19e+01
             go to 170
          endif
       endif
       go to 150
   10 if(k .ne. 2) go to 20
       if(gtemp .le. 8.94e+02) then
          c1 = -2.40e+04
          c2 = 5.02e+01
          c3 = -6.95e+00
       else
          c1 = -2.23e+04
          c2 = 5.17e+01
          c3 = -8.11e+00
       endif
       go to 150
   20 if(k .ne. 3) go to 30
       c1 = -1.4769e+04
       c2 = 2.249e+01
       c3 = 0.0e+00
       go to 150
   30 if(k .ne. 4) go to 40
       if(gtemp .le. 7.23e+02) then
          c1 = -2.15e+04
          c2 = 5.06e+01
          c3 = -6.24e+00
       else
          c1 = -1.84e+04
          c2 = 5.69e+01
          c3 = -9.95e+00
       endif
       go to 150
   40 if(k .ne. 5) go to 50
       c1 = -1.42e+04
       c2 = 3.85e+01
       c3 = -4.42e+00
       go to 150
   50 if(k .ne. 6) go to 60
       c1 = -3.69e+04
       c2 = 5.30e+01
       c3 = -7.83e+00
       go to 150
   60 if(k .ne. 7) go to 70
       c1 = 1.0e+00
       c2 = 1.0e+00
       c3 = 1.0e+00
       go to 150
   70 if(k .ne. 8) go to 80
       c1 = 1.0e+00
       c2 = 1.0e+00
       c3 = 1.0e+00
       go to 150
   80 if(k .ne. 9) go to 90
       if(gtemp .le. 4.84e+02) then
          c1 = -.350e+03
          c2 = -1.321e+01
          c3 = 8.035e+00
       else
          c1 = -.350e+03
          c2 = -1.321e+01
          c3 = 8.035e+00
          go to 180
       endif
   90 if(k .ne. 10) go to 100
       if(gtemp .le. 4.84e+02) then
          c1 = -.944e+03
          c2 = 8.527e+00
          c3 = 2.358e-01
       else
          c1 = -.944e+03
          c2 = 8.527e+00
          c3 = 2.358e-01
          go to 180
       endif
       go to 150
  100 if(k .ne. 11) go to 110
       c1 = -2.8467e+04
       c2 = -1.431e+01
       c3 = 1.047e+01
       go to 150
  110 if(k .ne. 12) go to 120
       if(gtemp .le. 1079.15) then
          c1 = -23.467e+03
          c2 = 2.650e+01
          c3 = 0.0e+00
       else
          c1 = -18.055e+03
          c2 = 2.13e+01
          c3 = 0.0e+00
       endif
       go to 150
  120 if(k .ne. 13) go to 130
       if(gtemp .le. 6.472e+02) then
c
c     theta is the reduced temperature for water vapor
c     647.2 is the critical temperature for water vapor.
c
          theta = gtemp/6.472e+02
c
          frthta = 1.0e+00 - theta
          frtht2 = frthta * frthta
          frtht3 = frtht2 * frthta
c
c     the terms frthta, frtht2 and frtht3 are used to find
c     the reduced partial pressure of water vapor at a temperature
c     less than the critical temperature 647.2k of water vapor.
c     if the temperature is .gt. the critical temperature the
c     pressure would be so large that condensation would be
c     impossible.
c
          rppres = exp(1.e+00/theta * (((-7.691e+00 * frthta) +
     +       (-2.608e+01 * frtht2) + (-1.682e+02 * frtht3) +
     +    (6.432e+01 * frtht2 * frtht2) + (-1.190e+02 * frtht2 *
     +    frtht3)) / (1.0e+00 + (4.167e+00 * frthta) +
     +          (2.098e+01 * frtht2))) - frthta / ((1.0e+09 *
     +          frtht2) + 6.0e+00))
c
c     convert the reduced partial pressure into a partial pressure
c
         ppres = rppres * 221.55e+05
c
c     using van der waals equation to solve for the equilibrium
c     vapor concentration.  the a and b terms in van der waals
c     equation came from 'principles of physical chemistry, william
c     h. hamill and russell r. williams, prentice-hall, 1959.
c
         gceq = (a(k) /  ((8.31e+03 * gtemp) + (3.05e-02 * gpres)
     +      - (5.536e+05 / (8.31e+03 * gtemp)) * gpres))
     *      * ppres
c
c
c     since water can be a major species the a and b terms
c     of van der waalals equation are used in calculating the
c     equilibrium vapor concentration.
c
          go to 160
c
       else
c
       if(gtemp .gt. 6.472e+02) then
c
c     the critical temperature of water vapor is used as the
c     maximum temperature in this calculation or the cut off
c     temperature.  gtemp = 647.2 therefore theta = 1. since
c     gtemp/temp(crit) = 647.2/647.2 = 1.
c
          theta = 1.e+00
          frthta = 1.e+00 - theta
          frtht2 = frthta * frthta
          frtht3 = frtht2 * frthta
c
c     same equation as for .le. 647.2 is used but now the
c     maximum gtemp is 647.2)
c
          rppres = exp(1.e+00/theta*(((-7.691e+00*frthta) +
     +   (-2.608e+01*frtht2) + (-1.681e+02*frtht3) +
     +   (6.432e+01*frtht2*frtht2)*(-1.190e+02*
     +   frtht2*frtht3))/(1.e+00 + (4.167e+00*frthta) +
     +   (2.098e+01*frtht2))) - frthta/((1.0e+09*frtht2) + 6.0e+00))
c
         ppres = rppres*221.5e+05
c
         gceq = (a(k) / ((8.31e+03 * 6.472e+02) + (3.05e-02 * gpres)
     +         - (5.536e+05 / (8.31e+03 * 6.472e+02)) * gpres)) *
     +      ppres
c
c
c     the extrapolation was cut off at the critical temperature of
c     steam, accurate values are not obtained above this point.
c
         go to 160
         endif
       go to 150
      endif
c
  130 if(k .ne. 14) go to 140
       if(gtemp .le. 2.973e+03) then
          c1 = -9.1592e+04
          c2 = 5.6889e+01
          c3 = -8.2824e+00
       else
          c1 = -7.0445e+04
          c2 = 2.0184e+01
          c3 = 0.0e+00
       endif
       go to 150
  140 if(k .ne. 15) go to 141
          c1 = -2.5768e+04
          c2 = -1.59279e+02 - 3.039e-03 * gtemp
          c3 = 5.2983e+01
       go to 150
  141 if(k .ne. 16) go to 142
       c1 = -9.4374e+04
       c2 = 1.078e+02 + 3.572e-03 * gtemp
       c3 = -2.43925e+01
       go to 150
  142 if(k .ne. 17) go to 143
       c1 = -2.3602e+04
       c2 = 5.11517e+01
       c3 = -8.105e+00
       go to 150
  143 if(k .ne. 18) go to 144
       c1 = -1.485e+04
       c2 = 3.874e+01
       c3 = -4.052e+00
       go to 150
  144 if(k .ne. 19) go to 145
       if(gtemp .le. 6.93e+02) then
          c1 = -1.5773e+04
          c2 = 3.077e+01
          c3 = -1.738e+00
       else
          c1 = -1.5243e+04
          c2 = 3.331e+01
          c3 = -2.8897e+00
       endif
       go to 150
  145 if(k .ne. 20) go to 150
       c1 = -9.383e+03
       c2 = 3.109e+01
       c3 = -3.339e+00
  150 continue
c
      arg = (c1/gtemp + c2 + c3*log10(gtemp) + c(k) *
     +      (gpres-1.01e+05)/gtemp)
      if(arg .gt. 2.50e+02) then
           write(output,1)
    1       format(2x,'****argument of exponent .gt. 250')
           write(output,2)k,gtemp,gpres
    2       format(2x,'k =',i4,2x,'gtemp =',e11.4,2x,'gpres =',e11.4)
      arg = 2.49e+02
      endif
      denom = 8.310e+03 * gtemp + b(k) * gpres
      gceq = (a(k)/denom)* exp(arg)
c
c     consider effects of surface reaction between csi/csoh
c
      if(x .gt. 1.0e-02) then
       if(k .eq. 2) then
          if(x .lt. 9.9e-01) then
             y = x
          else
             y = 9.9e-01
          endif
          gceq = (1 - y) * exp(-3.984e+03 * y * y/gtemp) * gceq
       endif
       if(k .eq. 3) then
          if(x .lt. 9.9e-01) then
             y = 1 - x
          else
             y = 1.0e-02
          endif
          gceq = (1 -y) * exp(-3.984e+03 * y * y/gtemp) * gceq
       endif
      endif
      go to 160
c
  170 gceq = (a(k)/(8.31e+03*8.26e+02 + b(k)*gpres))*
     # exp(c1/8.26e+02 + c2 + c3*log10(8.26e+02) + c(k)
     # *(gpres-1.01e+05)/8.26e+02)
       go to 160
c
  180 gceq = (a(k)/(8.31e+03*4.84e+02 + b(k)*gpres))*
     + exp(c1/4.84e+02 + c2 + c3*log10(4.84e+02)+ c(k)
     + *(gpres-1.01e+05)/4.84e+02)
c
  160 return
      end
