*mlist
*if def,selap
       subroutine atrsso( deltc, dzcond, slbwd, naz, nrodes,
     & flstm, tcond, tfuel, uthick, tzr0, oxdwc0, oxdwa0, uwg0, oxdwc,
     & oxdhc, h2oxd, sroxd, oxdwa, qaox, h2aox, sraox, quox,
     & h2uox, sruox, noxide, masca0, masca, masco0, masco,
     & masfa0, dtalox, masfu0, dtuox, nsurf )
c
c  Descriptive sentence goes here
c
c  Cognizant engineer: ewc.
c
       implicit none
       include 'comctl.h'
       include 'fast.h'
       include 'voldat.h'
       include 'statec.h'
       include 'scntl.h'
       include 'scddat.h'
       include 'tblsp.h'
c
c  Local variables.
       integer i,il,iln,im,in,jb,jm,naz,noxide,nrodes,ns,nsurf
       real dzcond,tcond,tfuel,uthick,tzr0,oxdwc0,oxdwa0,uwg0,oxdwc,
     * oxdhc,h2oxd,sroxd,oxdwa,qaox,h2aox,sraox,quox,h2uox,sruox,
     * uwg,flstm,dtoxwg,dtalox,dtuox,area,alwgsw,alwlim,co,deltc,
     * do,flstmc,flstmu,slbwd,stmlim,uo,uwlim
      dimension dzcond(ndax),nrodes(ndax),tcond(ndrd,ndax),tfuel(ndax),
     + uthick(ndax),tzr0(ndax),oxdwc0(ndax),oxdwa0(ndax),uwg0(ndax),
     + oxdwc(ndax),oxdhc(ndax),h2oxd(ndax),sroxd(ndax),oxdwa(ndax),
     + qaox(ndax),h2aox(ndax),sraox(ndax),quox(ndax),
     + h2uox(ndax),sruox(ndax),uwg(ndax),flstm(ndax)
      dimension noxide(ndax),dtoxwg(ndax),dtalox(ndax),dtuox(ndax)
      real masca0(ndax), masca(ndax), masco0(ndax), masco(ndax),
     +     masfa0(ndax), masfu0(ndax)
c
      external aloxd,atruod
c
c  Data statements.
      data uo/1.827834e5/, co/10310.75/, do/0.52257/
c  -- al,fuel elememt oxidation for atr
      ns = nrodes(1)
      if (nsurf.eq.1) ns = 1
      do i = 1,naz
        oxdwc(i) = oxdwc0(i)
        oxdhc(i) = 0.0
        h2oxd(i) = 0.0
        sroxd(i) = 0.0
        oxdwa(i) = oxdwa0(i)
        dtalox(i) = 0.0
        h2aox(i) = 0.0
        sraox(i) = 0.0
        qaox(i) = 0.0
        uwg(i) = uwg0(i)
        dtuox(i) = 0.0
        quox(i) = 0.0
        h2uox(i) = 0.0
        sruox(i) = 0.0
      enddo
      do i = 1,naz
        area = dzcond(i)*slbwd
       if(masca0(i).gt.1.e-10.and.tcond(ns,i).ge.300.0.and.
     # tcond(ns,i).le.1100.0)then
          alwlim = masca0(i)/area
          stmlim = flstm(i)*deltc/area
          call aloxd( oxdwc0(i), oxdwc0(i), alwlim, stmlim, deltc,
     +    tcond(ns,i), slbwd, dzcond(i), dtoxwg(i), oxdwc(i),
     +    oxdhc(i), h2oxd(i), sroxd(i) )
          masca(i) = max(0.0,masca0(i)-dtoxwg(i)*area)
          masco(i) = masco0(i) + 1.888889*dtoxwg(i)*area
          if (masca(i).le.0.0) noxide(i) = 2
        endif
c
      if (masca(i).le.0.0) then
        noxide(i) = 2
c
       if(tfuel(i).ge.300.0.and.masfa0(i).gt.1.0e-10.and.
     # tfuel(i).le.1100.0)then
          alwlim = 0.5*masfa0(i)/area
          flstmc = flstm(i)*deltc/area
          stmlim = max(0.0,flstmc)
          alwgsw = oxdwa0(i)
          if (noxide(i).eq.0) alwgsw = alwgsw + oxdwc(i)
          call aloxd( alwgsw, oxdwa0(i), alwlim, stmlim, deltc,
     +          tfuel(i), slbwd, dzcond(i), dtalox(i), oxdwa(i),
     +          qaox(i), h2aox(i), sraox(i) )
        endif
c
       if(tfuel(i).ge.300.0.and.masfu0(i).gt.1.0e-10.and.
     # tfuel(i).le.1100.0)then
          flstmu = flstmc - sraox(i)*deltc/area
          stmlim = max(0.0,flstmu)
          uwlim = 0.5*masfu0(i)/area
          call atruod( uwg0(i), uwlim, stmlim, deltc, tfuel(i),
     +          slbwd, dzcond(i), dtuox(i), uwg(i), quox(i),
     +          h2uox(i), sruox(i) )
        endif
c
      endif
c
        h2oxd(i) = h2oxd(i) + h2aox(i) + h2uox(i)
        sroxd(i) = sroxd(i) + sraox(i) + sruox(i)
        if (.not.scntrl(8)) then
          if ( nsurf.eq.0 ) then
            im = (icmp-1)*nx + i
            il = nvad(im) + filndx(4)
            do in = 1,noncn
              if (in .ne. nonhy) cycle
              iln = il + in - 1
              gaman(iln) = gaman(iln) + h2oxd(i)*isgl*recipv(il)
              enthn(iln) = uo + co*tcond(ns,i) + 0.5*do*(
     &        tcond(ns,i) - tao)**2
            enddo
          else
            jb = ndcomp + nsout(icmp)
            jm = (jb-1)*nx + i
            il = nvad(jm) + filndx(4)
            do in = 1,noncn
              if (in .ne. nonhy) cycle
              iln = il + in - 1
              gaman(iln) = gaman(iln) + h2oxd(i)*isgl*recipv(il)
              enthn(iln) = uo + co*tcond(1,i) + 0.5*do*
     &        (tcond(1,i) -tao)**2
            enddo
          endif
        endif
      enddo
      return
      end
*endif
