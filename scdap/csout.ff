*mlist
*if def,selap
       subroutine csout
c
c  Process the printed output from the shroud analysis.
c
c  Cognizant engineer: ljs.
c
       use scdmod
       implicit none
       include 'contrl.h'
       include 'scddat.h'
       include 'buntim.h'
       include 'fpnonv.h'
       include 'iocom.h'
       include 'cons.h'
       include 'scdcom.h'
       include 'intcom.h'
       include 'debout.h'
       include 'scdout.h'
       include 'tblsp.h'
       include 'fgrcom.h'
       include 'ndxara.h'
       include 'ufiles.h'
       include 'oxcom4.h'
       include 'miscon.h'
       include 'matdat.h'
       include 'dbacct.h'
       include 'oxsrv2.h'
c  Local variables.
      real radloc(ndax)
      integer knt
      integer knt2,nvdshr
      integer kmid1,mm
      integer ndbg
      character*3 ind(2)
      data ind / ' no' , 'yes' /
       ndbg=0
       write (output,10) 'shroud analysis for component',
     & scd1(icomp)%cmpno
   10  format(1h1,a,i3)
       write(output,11)timehy
   11  format(' time =',e10.4,' s')
       write (output, 20)  'heat conduction solution'
   20  format (1h0,a)
       call prntt2
      write(output,9231)
9231  format(/,' OXIDATION RATE and MAXIMUM HISTORIC',
     & ' TEMPERATURE')
      write(output,9232)
9232  format('                oxidation   ')
      write(output,9233)
9233  format('  axial            heat    ',
     &         '      maximum         time        max. ox.   time max.')
      write(output,9235)
9235  format('  node          generation     ',
     &       '  historic      maximum         heat     ox. heat')
      write(output,9237)
9237  format('                   rate       ',
     &       ' temperature    temperature   generation  generation')  
      write(output,9239)
9239  format('                  (W/m)        ',
     &       '    (K)           (s)           W/m)       (s)')
      do knt=naz,1,-1
      write(output,9241)knt,oxdhcc(knt,icomp),
     & tmxful(knt,icomp),tmxfl0(knt,icomp),oxdhmx(knt,icomp),
     & toxhmx(knt,icomp)
9241  format(2x,i3,11x,e10.4,6x,e10.4,4x,e12.6,2x,e10.4,
     & 2x,e10.4)
      end do
c
cljs display void region in shroud and radius heat transfer coefficient
cljs for this region.
      nvdshr = 0
        do knt=1,naz
        if(ishgpi(knt,icomp) .ge. 1)nvdshr = 1
        end do
        if(nvdshr .eq. 1) then
        write(output,9004)
9004    format(/,' heat transfer characteristics for void regions',
     &  ' in shroud;')
        write(output,9005)
9005    format(/,' axial node  mesh inner no.  mesh outer no.',            
     &  '  thickness (mm)  radiative HTC (W/m2.K) ',
     &  ' effective conductivity (W/m.K)')
          do knt=naz,1,-1
            if(ishgpi(knt,icomp) .ge. 1)then
            radloc(1) = 1000.0*thkgp2(knt,icomp)
            write(output,9007)knt,ishgpi(knt,icomp),ishgpo(knt,icomp),
     &      radloc(1),htcgap(knt,icomp),
     &      kgpshi(knt,icomp) 
9007        format(4x,i3,11x,i3,11x,i3,13x,f8.5,8x,e10.4,18x,e10.4)
            end if
          end do
        end if
cljs display material index for each radial mesh at each axial node
      write(output,9011)
9011  format(/,' material index at each radial mesh of each axial',
     & ' node:')
      write(output,9013)
9013  format(/,' axial node; indices for each primary material',
     & ' for each radial mesh beginning with radial mesh 1')
        do knt = naz,1,-1
        write(output,9015)knt,(mshmt3(knt2,knt,icomp),knt2=1,
     &  numelm2(knt,icomp))                
9015    format(3x,i3,8x,25i3)
        end do
cljs  print as-fabricated radius to each radial node, 
cljs  which are same at each axial node.
        do knt = 1,numelm2(1,icomp)+1
        radloc(knt) = 1000.0*xcond3(knt,1,icomp)
        end do
      write(output,9021)
9021  format(/,' radial node   as-fabricated radius (mm) ')
        do knt =1,numelm2(1,icomp)+1
        write(output,9023)knt,radloc(knt)
9023    format(3x,i3,20x,f8.4)
        end do
c   add print at mid-plane axial node of variables input to heat
c   conduction solver, namely volumetric heat generation rate,
c   thermal conductivity, and volumetric heat capacity.
        kmid1 = naz/2 +1
        write(output,9303),kmid1
9303    format(/,' values for each radial mesh at mid-plane elevation',
     &  ' of variables used by heat conduction solver, axial node =',
     &  i3,/)
        write(output,9307)
9307    format('   mesh        inner        outer       volumetric ',
     &         '  thermal    volumetric')
        write(output,9309)
9309    format('  number      radius        radius         heat  ',
     &         '   conduct.    heat')
        write(output,9311)
9311    format('               (m)           (m)        generation '
     &         '  W/m.K)     capacity')
        write(output,9313)
9313    format('                                         (W/m3)   ',
     &          '              (J/m3.K)')
        do mm=1,numelm2(1,icomp)
        write(output,9315)mm,xcond3(mm,1,icomp),xcond3(mm+1,1,icomp),
     &  effgn1(mm,icomp),effk1(mm,icomp),effcp1(mm,icomp)
9315    format(3x,i3,7x,e10.4,3x,e10.4,3x,e10.4,3x,e10.4,2x,e10.4)
        end do
        write(output,9122)
9122    format(/,' OXIDATION AND MELTDOWN STATUS OF SHROUD ZR LINER:')
        write(output,9123)
9123    format('   axial        double-sided     oxide       ',
     &         '  oxidation      oxide          mass Zr       ',
     &         '  mass Zr        slumped')
        write(output,9124)
9124    format('   node          oxidation      shatter       ',
     &         '   rate       thickness         added         ',
     &         ' removed       oxidation')
        write(output,9126)
9126    format('                                              ',
     &         '  (W/m)       (microns)         (kg)          ',
     &         '  (kg)           (W/m)')
        do knt=naz,1,-1                
        radloc(knt)=(rco2(knt,icomp)-rnoxd((icomp-1)*ndax+knt))*
     &  1.e+6
        write(output,9125)knt,
     &  ind(int(brchv(knt,icomp))+1),
     &  ind(shtflg(knt,icomp)+1),oxdhcc(knt,icomp),
     &  radloc(knt),wremzr((icomp-1)*ndax +knt),
     &  wfrozr((icomp-1)*ndax +knt),oxdhfc(knt,icomp)
9125    format(1x,i5,13x,a3,11x,a3,10x,e10.4,4x,
     &  f6.1,9x,e10.4,7x,e10.4,5x,e10.4)
        end do
c -------------------------------------------------------------------
      write (output,20) 'Oxidation model'
c
  30  format(1p,(10(1x,g11.4)))
      write(output,8305)
8305  format(/,'                         kinetics       diffusion   ',
     &         ' steam           steam')
      write(output,8307)
8307  format(  '                          alone          limited   ',
     &         ' limited         removal')
      write(output,8309)
8309  format(  '  axial  elevation        rate            rate      ',
     &         '  rate           rate')
      write(output,8311)
8311  format(  '  node      (m)         (kg/m2.s)       (kg/m2.s)   ',
     &         ' (kg/m2.s)       (kg/s)')
        do knt = naz,1,-1
        write(output,8313)knt,zcond2(knt,icomp),nolmt(knt,icomp),
     &  diflmt(knt,icomp),stmlmt(knt,icomp),sroxd((icomp-1)*ndax+knt)
8313    format(2x,i3,4x,f7.3,8x,e10.4,5x,e10.4,3x,e10.4,5x,e10.4)
        end do
c   printout for oxidation of outside surface (radial node 1)
       if(nsurox(icomp).eq.1)then
       write(output,8505)
8505   format(' OXIDATION OF OUTSIDE SURFACE (RADIAL NODE 1) DATA')
         write(output,8507)
8507     format(' axial    oxdide      weight      heat   ')
         write(output,8506)
8506     format(' node   thickness      gain     generation ')
         write(output,8508)
8508     format('          (m)        (kg/m2)       (W/m)   ')
         do knt = naz,1,-1
         write(output,8509)knt,oxdeot(knt,icomp),oxdwct(knt,icomp),
     &   oxdhct(knt,icomp)
8509     format(i3,4x,e10.4,2x,e10.4,2x,e10.4)
         end do
       end if
c
c -------------------------------------------------------------------
c
      return
      end
*endif
