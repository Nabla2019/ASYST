*mlist
*if def,selap
       subroutine solab (kb,naz,tsur,tsol,tliqav,wbotab,wflo,haddbt,
     # dz,wfroab,avoidl,hadd,rftemp,ifrag,vladeb,dzfrcl)
c
c  Descriptive sentence for solab goes here.
c
c  Cognizant engineer: ljs.
c
c#     calling subroutine: floab
c#     subroutines called: matpro
c#     engineer/programmer: l.j. siefken
c#     argument list :
c#     kb        = elevation at which liquid neutron ab-
c#                  sorber material begins to flow. (m)
c#                  (input)
c#     naz       = number of axial zones      (input)
c#     tsur(k)   = average temperature of control rod in
c#                 axial zone k at end of time step. (k).
c#                 (input)
c#     tsol      = solidification temperature (k)   (input)
c#      tliqav    = average temperature of liquified mater-
c#                  at start of flow. (k)   (input)
c#    wbotab    = mass of liquified neutron absorber
c#                material which flowed below bottom
c#                of core. (kg)    (input/output)
c#     wflo      = mass of liquified material at start of
c#                 flow. (kg)    (input)
c#     haddbt    = heat added to region below core due to
c#                 flow of liquified control rod material.
c#                 (j)     (input/output)
c#     dz(k)     = height of each axial zone  (m)  (input)
c#    wfroab(k) = mass of solidified neutron absorber
c#                axial zone k. (kg)    (input/output)
c#     avoidl(k) = flow area around guide tube. (m*2)
c#                 (input)
c#     hadd(k)   = heat added to axial zone k during time
c#                 step due to flow of liquified control
c#                 rod material. (j)    (output)
c#     rftemp    = reference temperature for enthalpy cal-
c#                 culations. normally, rftemp is set equal
c#                 to room temperature. (k)    (input)
c#     ifrag(k)  = variable indicating whether or not in-
c#                 tact control rod, debris bed or void
c#                 region exists in axial zone k.
c#                 0 = intact control rod
c#                 1 or 2 = debris bed
c#     vladeb(k) = volume of liquid which can be absorbed
c#                 by debris bed in axial zone k. (m**2)
c#                 (input)
c#                 3 = void region
c#                 (input)
c#    dzfrcl(k) = fraction of height of axial zone k which
c#                is completely filled with liquified/
c#                solidified control rod material resting
c#                on top of debris bed.  (input/output)
c
       implicit none
c
       integer kb,naz
       real tsol,tliqav,wbotab,wflo,haddbt,rftemp
*call cons
*call scddat
*call contrl
*call ufiles
c
       integer ifrag
       real tsur,dz,avoidl,vladeb,wfroab,hadd,dzfrcl
       dimension tsur(ndax),dz(*),avoidl(ndax),ifrag(*),vladeb(*),
     #           wfroab(*), hadd(*),dzfrcl(*)
c
c  Local variables.
       integer ictype,k,ksol,nsw
       integer ndbg
       real hrem, aden,aenthl
       external aden,aenthl
c
c       find first axial zone below zone kb which is cooler
c       than solidification temperature minus 200 k
        ndbg=0
          if(timehy.ge.1.e+9)then
          write(output,9005)timehy
9005      format(' SOLAB entered; timehy=',e11.4)
          end if
        nsw=0
        ksol=0
        do140k=kb,1,-1
        if(nsw.eq.1)go to 140
       if(tsur(k).lt.(tsol-100.))then
c      solidification temperature is assumed to be raised due to
c      some ss and zr in control rod material.
        nsw=1
        ksol=k
        end if
  140   continue
        if(ksol.ge.1)go to 200
c
c       calculate mass and heat added to region below
c       bottom of core.
!       write(output,9021)timehy,icomp,wflo,tliqav
!9021    format(' core degradation event - absorber material',
!    #  ' to lower head; time =',e12.6,' s,  component no. =',i3,
!    #  ' mass slumped =',e10.4,' kg',' temperature =',e10.4,' K')
        wbotab=wflo+wbotab
      ictype=1
       hrem=wflo*aenthl(ictype,tliqav,rftemp)
        haddbt=hrem+haddbt
c       go to return
        go to 850
  200   continue
        wfroab(ksol)=wfroab(ksol)+wflo
        hadd(ksol)=hadd(ksol)+wflo*aenthl(ictype, tliqav, rftemp)
  850   continue
        return
        end
*endif
