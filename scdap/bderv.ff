*mlist
*if def,selap
      subroutine bderv
c
c  Calculates the rate of change of bubble sizes at the input time.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
      implicit none
c
c     dadt(l) = output rate of change of number concentration
c              of bubble size l at time tderv (1/(m**3 s))
c                   common bder
c
c     dbnon(i,l) = output rate of change of mass of i th
c              noncondensable gas in bubble size l
c              at time tderv (kg/s)
c                   common bder
c
c     dbcon(k,l) = output rate of change of mass of k th
c              condensable gas in bubble size l
c              at time tderv (kg/s)
c                   common bder
c
c     dxnon(i,l) = output rate of change of mass of i th
c                   noncondensable gas in bubble size l
c                   due only to exit from surface
c                   at time tderv (kg/s)
c                   common bder
c
c     dxcon(k,l) = output rate of change of mass of k th
c                   condensable gas in bubble size l
c                   due only to exit from surface
c                   at time tderv (kg/s)
c                   common bder
c
c
c     ant(l) = input number concentration of bubble size l
c              at time tderv (1/m**3)
c                   common bder
c
c     bnont(i,l) = input mass of i th noncondensable gas
c              in bubble size l at time tderv (kg)
c                   common bder
c
c     bcont(k,l) = input mass of k th condnesable species
c              at time tderv (kg)
c                   common bder
c
c      xa(l) = input volume of l th bubble size class average
c              (m**3).  common block bsize.
c
c      dba(l) = input diameter of l th bubble size class average
c              (m).  common block bsize
c
c      vrise(l)  = input speed of rise of l th bubble size (m/s).
c              common block bcons.
c
c      coal(l1,l2) = input coalescence frequency function
c                for bubble size classes l1 and l2
c                (m**3/(bubble s))
c                common block bcons.
c
c      f(l2,l1)  = input fraction of coalescing bubbles l2 and l1
c              (where l1 is greater than l2)
c              net volume that goes into size class l1
c              common block bsize.
c
c     topa = input component of liquid surface area normal
c              to acceleration of gravity with access to
c              effluent (m**2)
c              passed to common block dcon as topaa.
c
c     v  = input volume fuel or debris considered (m**3)
c              passed to common block dcon as vv.
c
c     bderv was coded by d. l. hagrman october 24, 1989
c     last modified on june 27, 1990.  REV 15
c
c
*call bder
*call bsize
*call bcons
*call dcon
*call ufiles
c
c     local variables
      integer l, l1, l2
c
      real adt2, bc11, bc12, bc181, bc182, bc191, bc192, bc201,
     #bc202, bc51, bc52, bn31, bn32, bn41, bn42, cfact, comp,
     #vrav
c
c     initialize rates to zero
      do 10 l = 1,nbs
         dadt(l) = 0.0e+00
         dbnon(3,l) = 0.0e+00
         dbnon(4,l) = 0.0e+00
         dbcon(1,l) = 0.0e+00
         dbcon(5,l) = 0.0e+00
         dbcon(18,l) = 0.0e+00
         dbcon(19,l) = 0.0e+00
         dbcon(20,l) = 0.0e+00
   10 continue
c
c ********************************************************************
c     temporary debugging printout follows
c
c     check for negative bubble density or mass
c     nflag = 0
c     do 40 l = 1,nbs
c         if(ant(l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bnont(3,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bnont(4,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bcont(1,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bcont(5,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bcont(18,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bcont(19,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c         if(bcont(20,l) .lt. -1.0e-275) then
c            nflag = 1
c         endif
c  40 continue
c     if(nflag .gt. 0) then
c         write (output,"('0******** Error, negative mass into bderv.')
c         stop 'bderv-1'
c     endif
c ********************************************************************
c
c     sum over bubble size l1 in an outer loop and over
c      smaller or equal sizes, l2, in an inner loop
      do 200 l1 = 1,nbsm1
c         find bubble loss rate due to rise
          vrav = vrise(l1) * topaa / vv
          dadt(l1) = dadt(l1) - vrav * ant(l1)
c        calculate loss rate only to rise
         cfact = vrise(l1) * topaa / vv
         dxnon(3,l1) = cfact * bnont(3,l1)
         dxnon(4,l1) = cfact * bnont(4,l1)
         dxcon(1,l1) = cfact * bcont(1,l1)
         dxcon(5,l1) = cfact * bcont(5,l1)
         dxcon(18,l1) = cfact * bcont(18,l1)
         dxcon(19,l1) = cfact * bcont(19,l1)
         dxcon(20,l1) = cfact * bcont(20,l1)
c
          dbnon(3,l1) = dbnon(3,l1) - vrav * bnont(3,l1)
          dbnon(4,l1) = dbnon(4,l1) - vrav * bnont(4,l1)
          dbcon(1,l1) = dbcon(1,l1) - vrav * bcont(1,l1)
          dbcon(5,l1) = dbcon(5,l1) - vrav * bcont(5,l1)
          dbcon(18,l1) = dbcon(18,l1) - vrav * bcont(18,l1)
          dbcon(19,l1) = dbcon(19,l1) - vrav * bcont(19,l1)
          dbcon(20,l1) = dbcon(20,l1) - vrav * bcont(20,l1)
c         calculate and add rates due to coalesence
          do 100 l2 = 1,l1
c            subtract rates out by coalesence
c             out of l2 follows
             adt2 = coal(l1,l2) * ant(l1) * ant(l2)
             dadt(l2) = dadt(l2) - adt2
             bn32 = coal(l1,l2) * ant(l1) * bnont(3,l2)
             dbnon(3,l2) = dbnon(3,l2) - bn32
             bn42 = coal(l1,l2) * ant(l1) * bnont(4,l2)
             dbnon(4,l2) = dbnon(4,l2) - bn42
             bc12 = coal(l1,l2) * ant(l1) * bcont(1,l2)
             dbcon(1,l2) = dbcon(1,l2) - bc12
             bc52 = coal(l1,l2) * ant(l1) * bcont(5,l2)
             dbcon(5,l2) = dbcon(5,l2) - bc52
             bc182 = coal(l1,l2) * ant(l1) * bcont(18,l2)
             dbcon(18,l2) = dbcon(18,l2) - bc182
             bc192 = coal(l1,l2) * ant(l1) * bcont(19,l2)
             dbcon(19,l2) = dbcon(19,l2) - bc192
             bc202 = coal(l1,l2) * ant(l1) * bcont(20,l2)
             dbcon(20,l2) = dbcon(20,l2) - bc202
c             out of l1 follows
             dadt(l1) = dadt(l1) - adt2
             bn31 = coal(l1,l2) * ant(l2) * bnont(3,l1)
             dbnon(3,l1) = dbnon(3,l1) - bn31
             bn41 = coal(l1,l2) * ant(l2) * bnont(4,l1)
             dbnon(4,l1) = dbnon(4,l1) - bn41
             bc11 = coal(l1,l2) * ant(l2) * bcont(1,l1)
             dbcon(1,l1) = dbcon(1,l1) - bc11
             bc51 = coal(l1,l2) * ant(l2) * bcont(5,l1)
             dbcon(5,l1) = dbcon(5,l1) - bc51
             bc181 = coal(l1,l1) * ant(l2) * bcont(18,l1)
             dbcon(18,l1) = dbcon(18,l1) - bc181
             bc191 = coal(l1,l2) * ant(l2) * bcont(19,l1)
             dbcon(19,l1) = dbcon(19,l1) - bc191
             bc201 = coal(l1,l2) * ant(l2) * bcont(20,l1)
             dbcon(20,l1) = dbcon(20,l1) - bc201
c             into l1 follows
          dadt(l1) = dadt(l1) + f(l2,l1) *  adt2
          dbnon(3,l1) = dbnon(3,l1) + f(l2,l1) * (bn32 + bn31)
          dbnon(4,l1) = dbnon(4,l1) + f(l2,l1) * (bn42 + bn41)
          dbcon(1,l1) = dbcon(1,l1) + f(l2,l1) * (bc12 + bc11)
          dbcon(5,l1) = dbcon(5,l1) + f(l2,l1) * (bc52 + bc51)
          dbcon(18,l1) = dbcon(18,l1) + f(l2,l1) * (bc182 + bc181)
          dbcon(19,l1) = dbcon(19,l1) + f(l2,l1) * (bc192 + bc191)
          dbcon(20,l1) = dbcon(20,l1) + f(l2,l1) * (bc202 + bc201)
c             into l1 + 1 follows
          comp = 1.0e+00 - f(l2,l1)
          dadt(l1+1) = dadt(l1+1) + comp * adt2
          dbnon(3,l1+1) = dbnon(3,l1+1) + comp * (bn32 + bn31)
          dbnon(4,l1+1) = dbnon(4,l1+1) + comp * (bn42 + bn41)
          dbcon(1,l1+1) = dbcon(1,l1+1) + comp * (bc12 + bc11)
          dbcon(5,l1+1) = dbcon(5,l1+1) + comp * (bc52 + bc51)
          dbcon(18,l1+1) = dbcon(18,l1+1) + comp * (bc182 + bc181)
          dbcon(19,l1+1) = dbcon(19,l1+1) + comp * (bc192 + bc191)
          dbcon(20,l1+1) = dbcon(20,l1+1) + comp * (bc202 + bc201)
  100   continue
  200 continue
      return
      end
*endif
