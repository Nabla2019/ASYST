*mlist
*if def,selap
       subroutine hamadd (drliq,dz,naz,ro,rhozu,s2,
     & tmelt,wfruo,wfrzr,wfrouo,wfrozr,winliq,winfro,z,
     & z1,z2,hadd,nfrslg,rocrmx,rftemp,woxsol,kfail,winrem,
     & wremzr)
!  hamadd calculates the heat and mass addition to the axial zone in
!  which the slug has frozen.
!
!  Cognizant engineer: ljs (wjs).
!
!#    calling routine:     liqsol
!#    subroutines called:  fenthl, centhl, zufrdn
!#    engineer/programmer: l.j.siefken/w.j.suitt
!#    last date modified:  10/ 9/81
!#    input variables:        description
!#    drliq               thickness of the slug.
!#    dz                  height of each axial zone.
!#    naz                 number of axial nodes.
!#    ro(z)               outside radius of cladding at elevation z.
!#    rhozu               density of zry-uo2.
!#    s2                  volume of the slug.
!#    tmelt               liquidus temperature.
!#    wfruo               weight fraction of uo2.
!#    wfrzr               weight fraction of zr.
!#    wfrouo              mass of uo2 which has dripped into axial zone
!#    wfrozr              mass of zr which has dripped into axial zone k
!#    winfro              mass of inconel which has slumped and frozen
!#    winliq              mass of liquified inconel at axial node k
!#    winrem              mass of inconel slumped from node (kg)
!     wremzr              mass of Zr slumped from node (kg).
!#    z                   elevations of axial nodes.
!#    z1                  previous elevation of the slug.
!#    z2                  current elevation of the slug.
!#    rftemp                  reference temperature for enthalpy
!#                            calculation (k)
!#      woxsol(k)      mass of oxygen absorbed by solidified
!#      kfail = axial node from which slumping material originated.
!#
!#                     zr-u-o in axial zone k (kg)  (input)
!#    output variables:       description
!#
!#    hadd                heat added to axial zone k during time step by
!#    nfrslg              indicator of frozen slug in axial zone k.
!#    rocrmx              maximum outer radius of frozen zry-uo2 on outs
!
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       include 'scddat.h'
       include 'contrl.h'
       include 'ufiles.h'
       include 'blageo.h'
!
!  Local variables.
       integer naz,nfrslg
       integer kfail
       real(kr) drliq,dz,ro,rhozu,s2,tmelt,wfruo,wfrzr,wfrouo,wfrozr,
     * winliq,winfro,z,z1,z2,hadd,rocrmx,rftemp,woxsol
       real(kr) winrem,wremzr
       dimension dz(*),ro(*),wfrouo(*),wfrozr(*),winliq(ndax),
     # winrem(*),wremzr(*),
     * winfro(ndax),z(*),hadd(*),nfrslg(*),rocrmx(*),woxsol(ndax)
       integer k,l
       real(kr) elevb,elevt,fcomp,fhefus,fotmtl,frmlt1,frmlt2,ftmelt,
     * woxfr,znpoh
       real(kr) wremtt
       real(kr) centhl,centhlr,fenthl
       real gaddum
!
      data fcomp/0.0/, fotmtl/2.0/, ftmelt/3113.0/, fhefus/27.4e4/,
     1           frmlt1/0.0/, frmlt2/0.0/
!
!
!     find axial zone in which the slug froze.
      k      = 0
      wremtt=0.0
      do5l=1,naz
      wremtt=wremtt+wremzr(l)+winrem(l)
5     continue
      do 10 l=1,naz
           elevb  = z(l) - 0.5 * dz(l)
!***  For bottom axial node consider structural material to exist below
!***  bottom of fuel rods.
      if(l.eq.1)elevb=-0.05
           elevt  = z(l) + 0.5 * dz(l)
           znpoh  = 0.5 * (z1 + z2)
           if((elevb .le. znpoh) .and. (znpoh .le. elevt)) then
                k      = l
                go to 20
           end if
   10 continue
   20 continue
        woxfr=1.-wfrzr-wfruo
        woxsol(k)=woxsol(k)+woxfr*rhozu*s2
      wfrozr(k) = wfrozr(k) + wfrzr * rhozu * s2
      wfrouo(k) = wfrouo(k) + wfruo * rhozu * s2
      winfro(k)=winfro(k)+winliq(kfail)
       if(wfrozr(k).lt.0.0)wfrozr(k)=0.0
!  include the following correction only when there are
!  no bwr blade/box components
      if(nblabx.eq.0) then
!       because inconel and zr are considered mixed together but have
!       different densities, wfrozr may be in error. Apply correction.
        if(wfrozr(k).gt.wremtt)wfrozr(k)=wremtt
      endif
       gaddum = 0.0
       if (chngno(70)) then
         hadd(k) = hadd(k) + wfrzr*rhozu*s2*centhlr(tmelt,rftemp) +
     &   wfruo*rhozu*s2*fenthl(tmelt,fcomp,fotmtl,ftmelt,frmlt2,fhefus,
     &   gaddum)
       else
         hadd(k) = hadd(k) + wfrzr*rhozu*s2*centhl(tmelt,rftemp) +
     &   wfruo*rhozu*s2*fenthl(tmelt,fcomp,fotmtl,ftmelt,frmlt2,fhefus,
     &   gaddum)
       endif
       return
       end
*endif
