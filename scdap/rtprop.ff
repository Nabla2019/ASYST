*mlist
*if def,selap
       subroutine rtprop (e,icomp)
*in32 idat
*in32end
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ewc.
c
       implicit none
*call iparm
*call ufiles
*call contrl
*call fast
*call comctl
c     input routine for heat conduction material properties
       integer icomp
       real e
      dimension e(9,15)
c
c  Local variables.
      integer k,mtl,ndata,nstart,l32,inext
      integer idat(10),l5(16)
      real rdat(10)
      equivalence (idat(1),rdat(1))
      data l5 /0,0,5,10,0,1,0,9*1/
c
c     input routine for couple element material properties.
c        material=1, debris;        material=2,stainless steel;
c        material=3, inconel;       material=4, carbon steel;
c        material=5, fluid;         material=6, null material;
c        material=7, HTGR graphite; material=8, HTGR fuel compact;
c        material=9, HTGR target;   material=10, HTGR average;
c        material 11-15, user input constant property materials
c
c     data heading
      write (output,2000)
    5 continue
c  process material cards.
c     storage for material properties in a array.  material stored
c     on material number (e(i,mtl))      krk change, may 1990
c *************************************************************
c use inp routines to input card information
c *************************************************************
      l5(1)=50050001+1000000*icomp
      l32=l5(1)+98
      nummat=0
   51 call inplnk(l5(1),inext,nstart,ndata,fa(filndx(1)))
      if(ndata.eq.0)then
        if (inext .gt. 0 .and. inext.le.l32)  then
          l5(1)=inext
          goto 51
        endif
      else
        nummat=nummat+1
        call inp2(fa(filndx(1)),rdat,l5)
        if(l5(6).lt.0)then
          fail=.true.
          return
        endif
        mtl=idat(1)
        if (mtl .gt. 15) then
          write(output,*)'0****** invalid material number on',l5(1)
          fail = .true.
        endif
        e(1,mtl)      = rdat(1)
        e(2,mtl)      = rdat(2)
        e(3,mtl)      = rdat(3)
        e(4,mtl)      = rdat(4)
        e(5,mtl)      = rdat(5)
        write(output,2020) mtl,e(2,mtl)
        write(output,2030) (e(k,mtl),k=3,8)
        if (l5(6) .ge. 6) then
          if(mtl .eq. 7) then
            e(6,mtl) = rdat(6)
            if (rdat(6) .lt. 1.0e21) then
              write(output,2060)rdat(6)
              fail = .true.
            endif
          endif
          if(mtl .eq. 10) then
            e(9,mtl)=rdat(6)
            e(4,mtl)=rdat(7)
            e(6,mtl)=rdat(8)
            e(7,mtl)=rdat(9)
            e(8,mtl)=rdat(10)
            write(output,2050) e(4,mtl),e(6,mtl),e(7,mtl),
     #             e(8,mtl),e(9,mtl)
          endif
          goto 51
        endif
        l5(1)=inext
        if(l5(1).le.l32)goto 51
      endif
c *************************************************************
c  end of card input, begin processing
c *************************************************************
      if (e(1,10).eq. 10.0) then
         mtl = 10
         write(output,2050) e(4,mtl),e(6,mtl),e(7,mtl),e(8,mtl),e(9,mtl)
         if (e(9,mtl) .lt. 1.0e21) then
            write (output,2070) e(9,mtl)
            fail = .true.
         endif
      endif
 1000 format (i5,5x,f10.0,10a4)
 1010 format (7f10.0)
 1020 format (5f10.0)
c
 2000 format(
     1'  material  density    thermal         thermal         specific
     2         HTGR                        '/
     3'  number               conductivity    conductivity    heat
     4        fluence                      '/
     5'                       or              or              capacity o
     6r                                    '/
     7'                        default          default        default
     8                                     '/
     9'                       zeta-direction  eta-direction'/)
 2010 format (1h1)
 2020  format(4x,i3,3x,1p,e10.3)
 2030 format (1h+,21x,1p,e10.3,6x,e10.3,6x,e10.3,7x,e10.3,2x,
     # e10.3,2x,e10.3)
 2040 format('0******** input error, material = ',i4,' exceeds maximum')
 2050 format ('0    areas for smeared HTGR core, material = 10'/
     #   '     graphite   fuel compact target mat coolant channel',
     #  ' fluence  '/3x,e10.3,3x,e10.3,3x,e10.3,3x,e10.3,3x,e10.3)
 2060 format ('0 ***** input error, fluence for material 7 = ',
     # e12.5,' must be equal or greater than 1.0e21')
 2070 format ('0 ***** input error, fluence for material 10 = ',
     # e12.5,' must be equal or greater than 1.0e21')
c
      return
      end
*endif
