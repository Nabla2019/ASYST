*mlist
*if def,selap
*in32 idat
*in32 nhydv
*in32 igeom
*in32end
      subroutine ibwr
c
c  Perform all variable initilization for the control rod component
c
c  Cognizant engineer: D. T. Hagrman
c
      implicit none
c
*call scddat
*call cons
*call scdout
*call scdcom
*call ndxara
*call tblsp
*call bwgeom
*call bwtrns
*call bwprop
*call ufiles
c
c Local Variables
      integer knt,ibwrb,ik,j,k,l
c External routines
      real acp,aden,athcon,avisc,scp,sden,sthcon
      external acp,aden,athcon,avisc,scp,sden,sthcon
c
c initialize variables
      rl(icomp)=0.0
      ibwrc(icomp) = nbwr
      ibwrb=(nbwr-1)*ndax
c
      do 100 knt=1,naz
c loop through all initializations that are done on an axial node basis
c
c Calculate axial node elevations from node heights
      if (knt .gt. 1) then
        zcond2(knt,icomp)= zcond2(knt-1,icomp)+dzcnd2(knt-1,icomp)
     #              *0.5+0.5*dzcnd2(knt,icomp)
      else
        zcond2(knt,icomp)=0.5*dzcnd2(knt,icomp)
      endif
c Set initial radii, volumes, mass for layers, of different states
c and compositions
         nfshs(ibwrb+knt) = 0
         nfshb(ibwrb+knt) = 0
         rbo(ibwrb+knt) = rbc(ibwrb+knt)
         rso(ibwrb+knt) = rss(ibwrb+knt)
         r1bcs(ibwrb+knt) = rbc(ibwrb+knt)
         r1bcl(ibwrb+knt) = rbc(ibwrb+knt)
         r1bos(ibwrb+knt) = rbc(ibwrb+knt)
         r1bol(ibwrb+knt) = rbc(ibwrb+knt)
         r2sss(ibwrb+knt) = rss(ibwrb+knt)
         r2ssl(ibwrb+knt) = rss(ibwrb+knt)
         r2sos(ibwrb+knt) = rss(ibwrb+knt)
         r2sol(ibwrb+knt) = rss(ibwrb+knt)
         vbc(ibwrb+knt) = pi* rbc(ibwrb+knt)**2 *dzcnd2(knt,icomp)
         vss(ibwrb+knt) = pi*( rss(ibwrb+knt)**2 - rbc(ibwrb+knt)**2 )
     #         *dzcnd2(knt,icomp)
         vbo(ibwrb+knt) = 0.0
         vso(ibwrb+knt) = 0.0
c ******** call matpro to get denbc(i),debss(i) at tbc(i),tss(i)
         denss(ibwrb+knt) = sden(t2(ibwrb+knt))
         denbc(ibwrb+knt) = aden(2,t1(ibwrb+knt))
         msst(ibwrb+knt) = denss(ibwrb+knt)*vss(ibwrb+knt)
         mbct(ibwrb+knt) = denbc(ibwrb+knt)*vbc(ibwrb+knt)
  100 continue
      ik=(nbwr-1)*ndax+1
      j=ibwrb+1
      l= (icomp-1)*ndax + 1
      do 130 k=1,naz
c rod volume - local variable unused
c        rodv(k) = vbc(ik) + vss(ik)
         nrods2(k,icomp) = 2
         tcond3(2,k,icomp) = t2(j)
         tcond3(1,k,icomp) = t1(j)
         rcrst2(k,icomp) = r2sol(j)
         rcoi2(k,icomp) = r2sol(j)
         rco2(k,icomp) = r2sol(j)
         rcrsto(l) = r2sol(j)
         ik = ik + 1
         j = j + 1
         l = l + 1
  130  continue
c ---- initial mass inventories
      mbclot(nbwr) = 0.0
      mbolot(nbwr) = 0.0
      msslot(nbwr) = 0.0
      msolot(nbwr) = 0.0
      ubclot(nbwr) = 0.0
      ubolot(nbwr) = 0.0
      usslot(nbwr) = 0.0
      usolot(nbwr) = 0.0
      nazs(nbwr) = naz
      nazb(nbwr) = naz
      do 15 knt = ibwrb+1,ibwrb+naz
        mbcs(knt) = mbct(knt)
        mbcl(knt) = 0.0
        mbot(knt) = 0.0
        mbos(knt) = 0.0
        mbol(knt) = 0.0
        msss(knt) = msst(knt)
        mssl(knt) = 0.0
        msot(knt) = 0.0
        msos(knt) = 0.0
        msol(knt) = 0.0
        m1t(knt) = mbct(knt)
        m2t(knt) = msst(knt)
        mbclre(knt) = 0.0
        mbolre(knt) = 0.0
        msslre(knt) = 0.0
        msolre(knt) = 0.0
   15  continue
c ---- call matpro routines to get density, ht.capacity, viscosity
       do 12 knt = ibwrb+1,ibwrb+naz
         denbo(knt) = denbc(knt)*1.3077
         denso(knt) = denss(knt)*1.3077
         cpbc(knt) = acp(2,t1(knt))
         cpbo(knt) = cpbc(knt)
         cpss(knt) = scp(t2(knt))
         cpso(knt) = cpss(knt)
         cnkss(knt) = sthcon(t2(knt))
         cnkso(knt) = cnkss(knt)
         cnkbc(knt) = athcon(2,t1(knt))
         cnkbo(knt) = cnkbc(knt)
         visss(knt) = 2.0e-3
         visso(knt) = visss(knt)
         visbc(knt) = avisc(2,t1(knt))
         visbo(knt) = visbc(knt)
c ----- initial oxidation weight gain
         wtgsdt(knt) = 0.0
         wtgbdt(knt) = 0.0
         qoxbc(knt) = 0.0
         qoxss(knt) = 0.0
   12  continue
      return
      end
*endif
