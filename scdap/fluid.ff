*mlist
*if def,selap
      subroutine fluid
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
c
       implicit none
c
*call alcm
*call ufiles
*call iparm
*call parm
c
c  Local variables.
       integer i,i1,i2
       external fluvel,titl
c     input routine for fluid description
      ifluid=0
c     return if all default values used
      if(idf.eq.1)return
c     print heading
      call titl
      write (output,2000)
c     read control parameters
      read (eoin,1000) numvt,iov,iupwnd,ivsol
      write (output,1001)numvt,iov,iupwnd,ivsol
      ifluid=1
c     allocate storage
      nftot=amult*float(numvt)
      m1=last
      m2=m1+nftot
      m3=m2+nftot
      m4=m3+nftot
      m5=m4+nftot
      m6=m5+nftot
      m7=m6+nftot
      m8=m7+numnp
      m9=m8+numel
      m10=m9+numel
      m12 = m10+2*numel
      m13=m12+4*numel
      m14=m13+numnp
      m15=m14+numnp
      last=m15+numnp
c     zero out element velocity vectors
      do 1 i=1,numel
      i1=m8+i-1
      i2=m9+i-1
      a(i1)=0.0
      a(i2)=0.0
    1 continue
      do 2 i=1,numnp
      i1=m13+i-1
    2 a(i1)=0.
      call fluvel(a(m1),a(m2),a(m3),a(m4),a(m5),a(m6),a(i6),
     *a(i7),npp,nftot,numvt,a(n101))
 2000 format(1h0,'f l u i d  d a t a')
 1000 format(4i5)
 1001 format(' fluid in/out nodes     =',i5/
     *       ' fluid in/out boundaries=',i5/
     *       ' upwind flag            =',i5/
     *       ' velocity solution flag =',i5)
      return
      end
*endif
