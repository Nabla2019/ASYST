*mlist
*in32 idat
*in32end
*if def,selap
      subroutine ricnsl (ix, evol, spideb)
c
c  ricnsl initializes couple values for the "no slumping case" including
c  arrays of atomic fractions and fission products.
c
c  Cognizant engineer: ewc (gaj)             June 1990.
c
c
      implicit none
c
c  Input arguments -
c     ix     = element corner node numbers and material indicator
c     evol   = element volumes
c  Output argument -
c     spideb = fission products in elements
c
*call ufiles
*call contrl
*call cpmdat
*call alcm
*call iparm
*call parm
*call coupl
*call scddat
*call slumpv
*call cons
*call chcons
*call fast
*call comctl
c
      integer ix(5,*), nkk
      real evol(*), spideb(numel,*)
      character*4 chaid(19)
c
      external calaf, titl
c   Local variables.
      integer i, j, kk, m, n, nel1, nel2, nelmt1, nsp1, nsp2
      real af(maxcon), volmt1, wf(maxcon), wftot
      integer idat(20),l9(19),l10(25),inext,nstart,ndata
      real rdat(20)
      equivalence (idat(1),rdat(1))
c
      nelmt1 = 0
      volmt1 = 0.0
c     only one period for no slumping case
      nkk = 1
      do 20 n = 1, numel
      if (ix(5,n) .eq. 1) then
        nelmt1 = nelmt1 + 1
        volmt1 = volmt1 + evol(n)
      end if
      a(i74+n-1)    = 0.0
      a(i76+n-1)    = 0.0
      a(i78+n-1)    = 0.0
      a(i80+n-1)    = 0.0
      a(i82+n-1)    = 0.0
      a(i84+n-1)    = 0.0
      a(i86+n-1)    = 0.0
      a(iptalf+n-1) = 0.0
      a(iptlif+n-1) = 0.0
      a(iptcdf+n-1) = 0.0
      a(iptsif+n-1) = 0.0
   20 continue
c
      if (nspdeb .gt. 0) then
        do 40 kk = 1, nspdeb
        do 30 n = 1, numel
        spideb(n,kk) = 0.0
   30   continue
   40   continue
      end if
c
      if (nslph .ne.-1) go to 1000
c
      nslump(mcp) = 0
c
      if (nelmt1 .eq. 0) then
        write (output,210) mcp
  210   format (' $$$$$$$$ Note - there are no elements with material',
     1          ' 1 in Couple mesh',i4)
        go to 1000
      endif
c
c       Store Scdap input values of atomic fractions and
c       fission products for all elements with material 1.
c
      do 200 n = 1, numel
      if (ix(5,n) .eq. 1) then
        a(i74+n-1)    = afrdeb( 1,mcp)
        a(i76+n-1)    = afrdeb( 2,mcp)
        a(i78+n-1)    = afrdeb( 3,mcp)
        a(i80+n-1)    = afrdeb( 4,mcp)
        a(i82+n-1)    = afrdeb( 5,mcp)
        a(i84+n-1)    = afrdeb( 6,mcp)
        a(i86+n-1)    = afrdeb( 7,mcp)
        a(iptalf+n-1) = afrdeb( 8,mcp)
        a(iptlif+n-1) = afrdeb( 9,mcp)
        a(iptcdf+n-1) = afrdeb(10,mcp)
        a(iptsif+n-1) = afrdeb(11,mcp)
        if (nspdeb .gt. 0) then
          do 100 kk = 1, nspdeb
          spideb(n,kk) = evol(n) * wslxxx(kk,mcp,nkk) / volmt1
  100     continue
        end if
      end if
  200 continue
c 4ccc0901-99
c       Read any Couple input for specified elements to override
c       the above Scdap input for mass fractions.
c
      l9(1)=50090001+1000000*icomp
      l9(2)=-l9(1)-98
   51 call inplnk(l9(1),inext,nstart,ndata,fa(filndx(1)))
      if(ndata.eq.0)then
        if (inext.le.abs(l9(2)) )  then
          l9(1)=inext
          goto 51
        endif
      else
        l9(3)=13
        l9(4)=13
        l9(5)=0
        l9(6)=1
        call inp2(fa(filndx(1)),rdat,l9)
        nel1=idat(1)
        nel2=idat(2)
        do 52 i=1,maxcon
  52    wf(i)=rdat(i+2)
        call calaf (wf, wftot, af)
        do 300 n = nel1, nel2
          if (ix(5,n) .eq. 1) then
            a(i74+n-1)    = af( 1)
            a(i76+n-1)    = af( 2)
            a(i78+n-1)    = af( 3)
            a(i80+n-1)    = af( 4)
            a(i82+n-1)    = af( 5)
            a(i84+n-1)    = af( 6)
            a(i86+n-1)    = af( 7)
            a(iptalf+n-1) = af( 8)
            a(iptlif+n-1) = af( 9)
            a(iptcdf+n-1) = af(10)
            a(iptsif+n-1) = af(11)
          else
            write (output,270) n
  270 format (' ******** Element',i4,' is not material'
     1    ,' 1, and cannot have mass fractions input.')
            fail = .true.
          end if
  300   continue
        goto 51
      endif
c       Print atomic fractions for all elements with material 1.
      call titl
      write (output,410)
  410 format ('0     Atomic Fractions for Elements with Material 1' //
     1        '   element   zr      u       ss      ag      b4c',
     2        '     uo2     zro2    al      li      cd      soil'//)
      do 450 n = 1, numel
      if (ix(5,n) .eq. 1) then
        m = n - 1
        write (output,430) n, a(i74+m), a(i76+m), a(i78+m), a(i80+m),
     1                        a(i82+m), a(i84+m), a(i86+m),
     2       a(iptalf+m), a(iptlif+m), a(iptcdf+m), a(iptsif+m)
  430   format (i8, 1x, 11f8.4)
      end if
  450 continue
c
  500 continue
      if (nspdeb .eq. 0) go to 1000
c   4ccc1001 - 99
c       Read any Couple input for specified elements to override
c       the above Scdap input for fission products.
c
      l10(1)=50100000+1000000*icomp
      l10(2)=-l10(1)-98
   64 call inplnk(l10(1),inext,nstart,ndata,fa(filndx(1)))
      if(ndata.eq.0)then
        if (inext.le.l10(1))  then
          l10(1)=inext
          goto 64
        endif
      else
        l10(3)=0
        l10(4)=19
        l10(5)=0
        l10(6)=1
        call inp2(fa(filndx(1)),rdat,l10)
        nel1=idat(1)
        nel2=idat(2)
        do 62 kk=1,nspdeb
  62    wslxxx(kk,mcp,nkk)=rdat(2+kk)
        do 600 n = nel1, nel2
        if (ix(5,n) .eq. 1) then
          do 550 kk = 1, nspdeb
            spideb(n,kk) = evol(n) * wslxxx(kk,mcp,nkk)
  550     continue
          if (npp .eq. 0) then
            do 560 kk = 1, nspdeb
              spideb(n,kk) = twopi * spideb(n,kk)
  560       continue
          end if
        else
          write (output,570) n
  570 format (' ******** Element',i4,' is not material',
     # ' 1, and cannot have fission products.')
          fail = .true.
        end if
  600   continue
        goto 64
      endif
c       Print fission products for all elements with material 1.
      call titl
      write (output,710)
  710 format ('0     Fission Product Masses (kg) for Elements with ',
     1        'Material 1'//)
      do 715 kk = 1, nspdeb
      chaid(kk) = chaidx(ifpdb(kk,mcp,nkk))
  715 continue
      do 770 j = 1, 3
      nsp1 = (j-1)*8 + 1
      nsp2 = min (nsp1+7, nspdeb)
      if (nsp1 .gt. nsp2) go to 770
      write (output,720) (chaid(kk), kk = nsp1, nsp2)
  720 format ('0  element', 4x, 8(a4,9x))
      do 750 n = 1, numel
      if (ix(5,n) .eq. 1) then
        write (output,730) n, (spideb(n,kk), kk = nsp1, nsp2)
  730   format (i8, 1x, 8e13.4)
      end if
  750 continue
  770 continue
c
 1000 continue
c
      return
c
      end
*endif
