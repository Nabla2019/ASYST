*mlist
*if def,selap
      subroutine icnosl (ix, evol, spideb, naf, nfp)
*in32 ix
*in32end
c
c This is a COUPLE ROUTINE
c
c    Initialize Couple values for the "no slumping case", including
c    arrays of atomic fractions and fission products.
c
c  Cognizant engineer: G. A. Jayne          June, 1990
c
      implicit none
c
c  Input arguments -
c     ix     = element corner node numbers and material indicator
c     evol   = element volumes
c     naf    = number of lines of atomic fractions input
c     nfp    = number of lines of fission products input
c  Output argument -
c     spideb = fission products in elements
c
*call ufiles
*call contrl
*call scddat
*call cpmdat
*call alcm
*call iparm
*call parm
*call coupl
*call slumpv
*call cons
*call chcons
c
      integer ix(5,*), naf, nfp, nkk
      real evol(*), spideb(numel,*)
      character*4 chaid(19)
c
      external calaf, titl
c   Local variables.
      integer i, ic, j, kk, m, n, nel1, nel2, nel2ab, nelmt1, nsp1, nsp2
      real af(maxcon), pore1, rpart1, volmt1, wf(maxcon), wftot
c
      nelmt1 = 0
      volmt1 = 0.0
c     only one period for no slumping case
      nkk = 1
      do 20 n = 1, numel
      if (ix(5,n) .eq. 1) then
        nelmt1 = nelmt1 + 1
        volmt1 = volmt1 + evol(n)
      end if
      a(i74+n-1)    = 0.0
      a(i76+n-1)    = 0.0
      a(i78+n-1)    = 0.0
      a(i80+n-1)    = 0.0
      a(i82+n-1)    = 0.0
      a(i84+n-1)    = 0.0
      a(i86+n-1)    = 0.0
      a(iptalf+n-1) = 0.0
      a(iptlif+n-1) = 0.0
      a(iptcdf+n-1) = 0.0
      a(iptsif+n-1) = 0.0
   20 continue
c
      if (nspdeb .gt. 0) then
        do 40 kk = 1, nspdeb
        do 30 n = 1, numel
        spideb(n,kk) = 0.0
   30   continue
   40   continue
      end if
c
      if (nslph .ne.-1) go to 1000
c
      nslump(mcp) = 0
c
      if (nelmt1 .eq. 0) then
        write (output,210) mcp
  210   format (' $$$$$$$$ Note - there are no elements with material',
     1          ' 1 in Couple mesh',i4)
        go to 1000
      endif
c
c       Store Scdap input values of atomic fractions and
c       fission products for all elements with material 1.
c
      do 200 n = 1, numel
      if (ix(5,n) .eq. 1) then
        a(i74+n-1)    = afrdeb( 1,mcp)
        a(i76+n-1)    = afrdeb( 2,mcp)
        a(i78+n-1)    = afrdeb( 3,mcp)
        a(i80+n-1)    = afrdeb( 4,mcp)
        a(i82+n-1)    = afrdeb( 5,mcp)
        a(i84+n-1)    = afrdeb( 6,mcp)
        a(i86+n-1)    = afrdeb( 7,mcp)
        a(iptalf+n-1) = afrdeb( 8,mcp)
        a(iptlif+n-1) = afrdeb( 9,mcp)
        a(iptcdf+n-1) = afrdeb(10,mcp)
        a(iptsif+n-1) = afrdeb(11,mcp)
        if (nspdeb .gt. 0) then
          do 100 kk = 1, nspdeb
          spideb(n,kk) = evol(n) * wslxxx(kk,mcp,nkk) / volmt1
  100     continue
        end if
      end if
  200 continue
c
c       Read any Couple input for specified elements to override
c       the above Scdap input for mass fractions.
c
      if (naf .le. 0) go to 370
      do 350 ic = 1, naf
      read (eoin,220) nel1, nel2, (wf(i),i=1,maxcon)
  220 format (2i5,7e10.1 / (8e10.1))
      call calaf (wf, wftot, af)
      if ( nel2 .lt. 0. )  read (eoin,1001) pore1, rpart1
      nel2ab = abs (nel2)
      do 300 n = nel1, nel2ab
      if (ix(5,n) .eq. 1) then
        a(i74+n-1)    = af( 1)
        a(i76+n-1)    = af( 2)
        a(i78+n-1)    = af( 3)
        a(i80+n-1)    = af( 4)
        a(i82+n-1)    = af( 5)
        a(i84+n-1)    = af( 6)
        a(i86+n-1)    = af( 7)
        a(iptalf+n-1) = af( 8)
        a(iptlif+n-1) = af( 9)
        a(iptcdf+n-1) = af(10)
        a(iptsif+n-1) = af(11)
        if ( nel2 .lt. 0. ) then
          a(i70+n-1)    = pore1
          a(i72+n-1)    = rpart1
        endif
      else
        write (output,270) n
  270   format (' ******** Element',i4,' is not material 1, and ',
     1          'cannot have mass fractions input.')
        fail = .true.
      end if
  300 continue
  350 continue
  370 continue
c
c       Print atomic fractions for all elements with material 1.
c
      call titl
      write (output,410)
  410 format ('0     Atomic Fractions, Porosity, and Particle Size ',
     &          'for Elements with Material 1' //
     1        '   element   zr      u       ss      ag      b4c',
     2        '     uo2     zro2    al      li      cd      soil',
     &        '    porosity    particle size'//)
      do 450 n = 1, numel
      if (ix(5,n) .eq. 1) then
        m = n - 1
        write (output,430) n, a(i74+m), a(i76+m), a(i78+m), a(i80+m),
     1                        a(i82+m), a(i84+m), a(i86+m),
     2       a(iptalf+m), a(iptlif+m), a(iptcdf+m), a(iptsif+m),
     &       a(i70+m), a(i72+m)
  430   format (i8, 1x, 12f8.4, f12.4)
      end if
  450 continue
c
  500 continue
      if (nspdeb .eq. 0) go to 1000
c
c       Read any Couple input for specified elements to override
c       the above Scdap input for fission products.
c
      if (nfp .le. 0) go to 670
      do 650 ic = 1, nfp
      read (eoin,220) nel1, nel2, (wslxxx(kk,mcp,nkk),kk=1,nspdeb)
      do 600 n = nel1, nel2
      if (ix(5,n) .eq. 1) then
        do 550 kk = 1, nspdeb
        spideb(n,kk) = evol(n) * wslxxx(kk,mcp,nkk)
  550   continue
        if (npp .eq. 0) then
          do 560 kk = 1, nspdeb
          spideb(n,kk) = twopi * spideb(n,kk)
  560     continue
        end if
      else
        write (output,570) n
  570   format (' ******** Element',i4,' is not material 1, and ',
     1          'cannot have fission products.')
        fail = .true.
      end if
  600 continue
  650 continue
  670 continue
c
c       Print fission products for all elements with material 1.
c
      call titl
      write (output,710)
  710 format ('0     Fission Product Masses (kg) for Elements with ',
     1        'Material 1'//)
      do 715 kk = 1, nspdeb
      chaid(kk) = chaidx(ifpdb(kk,mcp,nkk))
  715 continue
      do 770 j = 1, 3
      nsp1 = (j-1)*8 + 1
      nsp2 = min (nsp1+7, nspdeb)
      if (nsp1 .gt. nsp2) go to 770
      write (output,720) (chaid(kk), kk = nsp1, nsp2)
  720 format ('0  element', 4x, 8(a4,9x))
      do 750 n = 1, numel
      if (ix(5,n) .eq. 1) then
        write (output,730) n, (spideb(n,kk), kk = nsp1, nsp2)
  730   format (i8, 1x, 8e13.4)
      end if
  750 continue
  770 continue
c
 1000 continue
c
      return
c
c
 1001  format (2f10.0)
c
c
      end
*endif
