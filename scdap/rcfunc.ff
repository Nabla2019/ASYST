*mlist
*if def,selap
      function rcfunc(n,dxi,x)
c
c  rcfunc computes the oxide inner radius or leftmost coordinate for a
c  slab,
c
c  Cognizant engineer: cma.
c
c     calling subroutines:  oxstat,oxtran,oxfunc
c     subroutines called:   zreal1
c     engineer/programmer:  c. m. allison
c
c     input variables                  description
c        dxi            oxide thickness
c        n              geometry index, 1 = slab, 2 = cylinder, 3 =
c                         sphere
c        thzta          weighted ratio of zircaloy density to zro2
c                         density defined by equation 2.1.12
c        x              outside radius or rightmost coordinate
c        x              volume coordinate
c
c     output variables                 description
c        c0             coefficient passed to function funox through
c                         oxidation common block
c        dx             duplicate of dxi, passed to function funox
c                         through oxidation common block
c     local variables                  description
c        ier            error flag returned by routine zreal1
c        itmax          maximum number of iterations allowed to find
c                         root by routine zreal1
c        root           initial root guess passed to zreal1, returned a
c                         output root
c
c -----------------------rcfunc outline---------------------------
c :set dimensions
c :if: slab geometry
c     :then:
c        :compute oxide inner radius or leftmost coordinate
c     :else then:
c :if: cylinder geometry
c     :then:
c        :compute oxide inner radius or leftmost coordinate
c     :else then:
c :if: sphere geometry
c     :then:
c        :compute oxide inner radius or leftmost coordinate
c     :else then:
c :endif:
c :return
c ---------------------------------------------------------------
c
       implicit none
c
       integer ier
       real fval,root
       real rcfunc
      integer n , iparm(6)
      real x , dxi , rparm(2)
      external funox
       external zsf1dr
*call oxcom1
*call oxcom3
*call ufiles
c          initial guess for root for sphere is set to 1 mm
      data root /1.0e-3/
      dx = dxi
      if(n.eq.1) then
           rcfunc = x - dx / thzta
      else if (n.eq.2) then
           rcfunc = (-2.0 * dx + sqrt(4.0 * dx**2
     +              - 4.0 * thzta * (dx**2 - thzta * x**2)))
     +              / (2.0 * thzta)
      else if (n.eq.3) then
           c0 = dx**3 - thzta * x**3
c
           iparm(1) = 0
           iparm(2) = 1
           iparm(3) = 1
           iparm(4) = 1
           iparm(5) = 20
           rparm(1) = 1.0e-05
           rparm(2) = 1.0e-10
c
           call zsf1dr (funox , root , fval , rparm , iparm , ier)
           rcfunc = root
           if (ier .gt. 11)  write (output,4000) root,dx,x,fval,ier
 4000  format ('0Inner oxide radius could not be',
     +                   'found by root solver for sphere'/
     +                   ' root = ',g10.4/
     +                   ' oxide thickness = ',g10.4/
     +                   ' sphere radius = ',g10.4/
     +                   ' f(root) = ',g10.4/
     +                   ' error code =',i3/)
      endif
      return
      end
*endif
