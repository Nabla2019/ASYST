*mlist
*if def,selap
       subroutine maxitr (n,nr,na,a,b,c,d,u,r,repeat)
c
c  Solves a very strongly diagonally dominant matrix equation by point
c  Jacobi iterations.
c
c  Cognizant engineer: ssa.
c
       implicit none
*call ufiles
       integer n,na,nr
      real a(n+1),b(n),c(n+1),d(n+1),r(n),u(n+2)
      integer repeat
c
c****programmer/engineer  art shieh (208) 526-9460
c
c***  input variables:
c***           a - subdiagonal array
c***           b - diagonal array
c***           c - superdiagonal array
c***           d - right hand side
c***           na = the number of axial levels
c***           nr = the number of radial nodes
c***           n = na*nr
c
c***  output variables: u - solution vector
c***                   repeat - success indicator
c***                   repeat = 0, success
c***                   repeat = 1, solve again with direct solver
c
c  Local variables.
       integer i,icr,jj,jn
       real sum,tol
c
      repeat = 0
      jj = 1
      jn = na
      do 1 i = 1,nr
         a(jj) = 0.
         c(jn) = 0.
         jj = jj + na
         jn = jn + na
   1  continue
      do 5 i = 1,n
         a(i) = a(i)/b(i)
         c(i) = c(i)/b(i)
         d(i) = d(i)/b(i)
   5  continue
      icr = 10
      tol = 1.0e-04*n
 101  continue
      r(1) = d(1) - c(1)*u(2) - u(1)
      r(n) = d(n) - a(n)*u(n-1) - u(n)
      do 10 i = 2,n-1
         r(i) = d(i) - u(i) - a(i)*u(i-1) - c(i)*u(i+1)
  10  continue
      sum = 0.
      do 20 i = 1,n
         sum = sum + r(i)*r(i)
  20  continue
      if(sum.lt.tol)goto 100
      do 30 i=1,n
          u(i) = u(i) + r(i)
  30  continue
      icr = icr - 1
      if(icr.gt.0)goto 101
c**nonconverging solution
      write(output,*)'0******nonconverging in maxitr after 10 itrs.'
      repeat = 1
 100  continue
      return
      end
*endif
