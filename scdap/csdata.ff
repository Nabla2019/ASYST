*mlist
*if def,selap
       subroutine csdata
c
c  csdata computes beginning of time step data for slab.
c
c  Cognizant engineer: ewc.
c
       implicit none
       include 'scddat.h'
       include 'cons.h'
       include 'debout.h'
       include 'iocom.h'
       include 'intcom.h'
       include 'miscon.h'
       include 'ndxara.h'
       include 'nrcom.h'
       include 'ptscom.h'
       include 'scdout.h'
       include 'scdcom.h'
       include 'trnot2.h'
       include 'uoxcom.h'
c
c  Local variables.
       integer i,k,mz
c
c  Move previous time step information into input arrays for
c  the component models.
c  Calling subroutines: fuelan
c
       external dsrpsw
c
       mz = ndax*(icomp - 1)
c  Call routine to set disruption switch for component models.
       do i = 1,naz
         alfai0( i ) = alfai( mz+i )
         alfao0( i ) = alfao( mz+i )
         effcp0( i ) = effcpf( mz+i )
         effgn0( i ) = effqf ( mz+i )
         h2oxd0( i ) = h2oxd2( i,icomp )
         oxdei0( i ) = oxdei( mz+i )
         oxdeo0( i ) = oxdeo2( i,icomp )
         oxdwc0( i ) = oxdwc2( i,icomp )
         oxdwf0( i ) = oxdwf( mz+i )
         qclad0( i ) = qclad( mz+i )
         qout0(i) = qout2(i,icomp,1)
         rnalf0( i ) = rnalf( mz+i )
         rnoxd0( i ) = rnoxd( mz+i )
         flstm0( mz+i ) = flstm ( mz+i )
         flstm0( mz+i+ndax ) = flstm ( mz+i+ndax )
         flwh20( mz+i ) = flwh2 ( mz+i )
         flwh20( mz+i+ndax ) = flwh2 ( mz+i+ndax )
         ioxer0(i) = ioxerr(mz+i)
         noxid0(i) = noxide2(i,icomp)
         wfrsr0(i) = wfrosr(mz+i)
         wfrzr0(i) = wfrozr(mz+i)
         wrmsr0(i) = wremsr(mz+i)
         wrmzr0(i) = wremzr(mz+i)
         alfoo0(i,icomp) = alfaoo(i,icomp)
         h2odo0(i,icomp) = h2oxdo(i,icomp)
         oxdoo0(i,icomp) = oxdeoo(i,icomp)
         oxwco0(i,icomp)  = oxdwco(i,icomp)
         rcoo0(i,icomp)   = rcoo(i,icomp)
         rnafa0(i,icomp) = rnalfo(i,icomp)
         rnodo0(i,icomp) = rnoxdo(i,icomp)
         noxdo0(i,icomp) = noxido(i,icomp)
         oxdco0(i,icomp) = oxdhco(i,icomp)
         uwgi0(i,icomp)   = uwgi(i,icomp)
         h2uoi0(i,icomp) = h2uoxi(i,icomp)
         quoxi0(i,icomp)  = quoxi(i,icomp)
         uwgo0(i,icomp)   = uwgo(i,icomp)
         h2uoo0(i,icomp) = h2uoxo(i,icomp)
         quoxo0(i,icomp)  = quoxo(i,icomp)
       enddo
c  Set slab surface temperatures.
       do i = 1,naz
         do k = 1,nrods2(i,icomp)
           tcnd03( k,i,icomp ) = tcond3( k,i,icomp )
         enddo
       enddo
       do i = 1,naz
         rco0(i) = rco2(i,icomp)
       enddo
       noxer0 = noxerr(icomp)
       wbtss0 = wbotsr(icomp)
       wbtzr0 = wbotzr(icomp)
       return
       end
*endif
