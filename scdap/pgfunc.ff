*mlist
*if def,selap
       function pgfunc(ict,t)
c
c
c  pgfunc provides internal gas pressure as function of temperature for
c  a control rod or a general cylindrical component by calling the
c  matpro function prcnrd or interpolating user-specified tables.
c
c  Cognizant engineer: ewc (wxs).
c
c     calling subroutines:  cpress
c     subroutines called: matpro function prcnrd
c     engineer/programmer:  w. sengpiel
c
c     input variables                  description
c        ict            flag indicating use of matpro function prcnrd
c                       ( ict=1,2 ) or user-specified tables ( ict=3 )
c        t              average absorber material temperature or
c                       average component temperature ( k )
c
       implicit none
*call cprdat
c
*call prdat
c
c  Local variables.
       integer ict
       real t,temp
       real pgfunc,prcnrd
       external prcnrd
c
      temp= t
      if( ict .eq. 1 .or. ict .eq. 2 ) then
c matpro function prcnrd for control rod internal gas pressure
c        calculation
c ict=1: absorber material ag-in-cd
c ict=2: absorber material b4c
c        internal gas pressure equal to sum of vapour pressures of
c        absorber material components
          pgfunc= prcnrd(ict,temp)
      else
c ict = 3
c internal gas pressure as function of average component temperature
c          is calculated by interpolation of user-specified tables
          if( temp .gt. tempc(1) .and. temp .lt. tempc(mtmax) )
     +    goto 10
          if( temp .le. tempc(1) ) pgfunc= prsc(1)
          if( temp .ge. tempc(mtmax) ) pgfunc= prsc(mtmax)
          return
   10     continue
          if( tempc(mtc) .lt. temp ) then
   15         continue
              if( tempc(mtc+1) .ge. temp ) then
                  pgfunc= prsc(mtc) +( prsc(mtc+1) -prsc(mtc) )
     +           *( temp -tempc(mtc) )/( tempc(mtc+1) -tempc(mtc) )
              else
                  mtc= mtc +1
                  goto 15
              endif
          else
              mtc= mtc -1
              goto 10
          endif
      endif
      return
      end
*endif
