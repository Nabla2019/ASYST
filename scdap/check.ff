*mlist
*if def,selap
       subroutine check (l,io,tz,tc)
c
c  Checks to see if the non-linear problem temperatures (i.e. the
c  square root of the sum of the differences squared) have converged to
c  within convv.
c
c  Cognizant engineer: ewc.
c
c This is a COUPLE ROUTINE
c
       implicit none
c
       real tz(*),tc(*)
       include 'iparm.h'
       include 'parm.h'
       include 'ufiles.h'
       include 'contrl.h'
c
c  Local variables.
       integer i,io,l
       real cnumnp,convv,d,tmax,tmin
       real d1,eps1
c   eps1 = tolerance for temperature change between iterations in
c          temperature at an individual node (K).
c***   testing
       data eps1 / 1.0/
c
      tmin=tz(1)
      tmax=tz(1)
      d=0.0
      do 100 i=1,numnp
      d=d+(tz(i)-tc(i))**2
      tmax=max(tz(i),tmax)
      tmin=min(tz(i),tmin)
  100 continue
      l=1
      d=sqrt(d)
c     contr - convergence control parameter:  decrease to tighten
c      convergence limits & vice-versa
      cnumnp=numnp
      convv=sqrt(cnumnp)*log10(cnumnp)*contr
      if(d.le.convv) l=0
c   determine maximum value of individual temperature changes.
      d1=0.0
      do120i=1,numnp
      if(abs(tz(i)-tc(i)).gt.d1)d1=abs(tz(i)-tc(i))
      tc(i)=tz(i)
120   continue
      if(d1.gt.eps1)l=1
c     output convergence information only if requested
      if (io .eq. 1) write (output,1000) d, convv
 1000  format (/10x,'d from check=',1p,g12.4,5x,6hconvv=,g12.4)
      return
      end
*endif
