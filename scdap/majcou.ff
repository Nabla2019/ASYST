*mlist
      subroutine majcou
c
c  Provides major edits for couple.
c
c  Cognizant engineer: rjw (gaj).
c
       implicit none
       include 'cpmdat.h'
       include 'coupl.h'
       include 'alcm.h'
       include 'iparm.h'
       include 'parm.h'
       include 'scddat.h'
       include 'scntl.h'
       include 'slumpv.h'
       include 'tblsp.h'
       include 'ufiles.h'
       include 'hardpn.h'
       include 'chcons.h'
c
       real avgthk,delz,theta,tmpnn1,tmpnn2,tmpnn3,tmpnn4,tmpnn5,tmpnn6,
     & toteox,toth2r,totmas,totthk,v,vr,vz
       real dumb(50),dumb1(500),dumb2(500)
       integer i,i1,idyn,j,j1,jcor,jj,jjj,kcor,kk,l,n,ne,nj,nn1,nn2,
     & nn3,nn4,nn5,nn6
       integer idumb(500)
       character*4 chxx
c
       do mcp = 1,maxcpm
c
         if (icoup(mcp) .lt. 1) cycle
         call gpcoup (1)
         call titl
         write (output,
     & "('0  time =',f12.5,'    last couple dt =',es11.4,4x,
     & 'step =',i8,'    debris bed depth and mass =',f12.4,f9.1)")
     &   time,dtold,istep,hgtdeb(mcp),wtmdeb(mcp)
c
         if (nslphs(mcp) .ne. -1) then
           write (output,
     & "('0    Constituent       Slumped Mass (kg)   Atomic Fraction'/)"
     & )
           do i = 1,maxcon
             if (wst(i,mcp) .gt. 0.0)
     &       write (output,"(i3,2x,a16,es14.5,6x,es14.5)")
     &       i,chcons(i),wst(i,mcp),afrdeb(i,mcp)
           enddo
         endif
c
         if (ifluid .ne. 0) then
           do jjj = 1,2
             call titl
             write (output,
     & "('0  Velocity solution for couple mesh,'i3//)") mcp
             if (jjj .eq. 1) write (output,
     & "(3x, 5('element        v',    9x))")
             if (jjj .eq. 2) write (output,
     & "(3x, 5('element   theta ',    9x))")
c
             do jj = 1,numel,5
               j = jj + 4
               if (j .gt. numel) j = numel
               nj = 0
               if (jjj .ne. 2) then
                 do n = jj,j
                   vr = a(n+m8-1)
                   vz = a(n+m9-1)
                   v = sqrt(vr*vr+vz*vz)
                   nj = nj + 1
                   dumb(nj) = v
                 enddo
               else
                 do n = jj,j
                   vr = a(n+m8-1)
                   vz = a(n+m9-1)
                   v = sqrt(vr*vr+vz*vz)
                   theta = 0.
                   if (v .ne. 0.0) theta = atan2(vz,vr)
c  beta is calc. in couple.
                   theta = theta*57.29578
                   nj = nj + 1
                   dumb(nj) = theta
                 enddo
               endif
               write (output,"(5(i6,2x,1p,es11.4,6x))")
     &         (n,dumb(n-jj+1),n=jj,j)
             enddo
           enddo
           call titl
         endif
         write (output,1300) mcp
 1300  format ('0  Heat Conduction solution for couple mesh', i3 //
     & 3x, 5('node   temperature',  7x))
         write (output,"(5(i6,2x,1p,es11.4,6x))")
     &   (n,a(i22+n-1),n=1,numnp)
         write (output,1350) tmpdmx(mcp), ntmpdm(mcp), twalmx(mcp),
     &   ntwalm(mcp), tmpdav(mcp), twalav(mcp)
 1350  format ('0  max. temp. =', es13.5, ' , at node', i5,
     & ' max. temp. of structure element=', es13.5, ' , element', i5 /
     & '   ave. temp. of debris  =', es13.5,
     & '     ave. structure temp. =', es13.5)
c
      write (output,1351)thkcer(1)
1351  format('0Total mass of liquefied debris in lower head =',
     & es12.4,' kg')
      write(output,1353)thkcer(2)
1353  format(' Mass of stainless steel in liquefied debris =',es12.4,
     & ' kg')
       write(output,1355)thkcer(3)
1355   format(' Mass of zircaloy in liquefied debris =',es12.4,
     & ' kg')
       write(output,1357)thkcer(4)
1357   format(' Mass of silver in liquefied debris =',es12.4,
     & ' kg')
      write(output,1359)thkcer(5)
1359   format(' Mass of UO2 in liquefied debris =',es12.4,
     & ' kg')
      write(output,1361)thkcer(6)
1361   format(' Mass of ZrO2 in liquefied debris =',es12.4,
     & ' kg')
      call titl
      write(output,1403)mcp,pdbtot(mcp)
1403  format(' COUPLE mesh #',i3,' total power in debris =',es12.4,
     & ' W')
       write(output,1405)thkcer(12)
1405   format(' Total rate of heat transfer by convection from',
     & ' COUPLE mesh material to RELAP5 fluid =',es12.4,' W')
       write(output,1408)thkcer(10)
1408   format(' Total rate of heat transfer by convection from',
     & ' top surface of debris in lower head =',es12.4,' W')
       write(output,1406)thkcer(8)
1406   format(' Total internal energy in debris =',es12.6,' J')
       write(output,1421)thkcer(13)
1421   format(' Total internal energy in',
     & ' structural material =',es12.6,' J')
       write(output,1423)thkcer(14)
1423   format(' Total mass of structural material =',
     & es12.4,' kg')
       write(output,1461)thkcer(15)
1461   format(' Integral with respect to time of debris power =',
     & es12.6,' J')
          write(output,1463)thkcer(16)
1463   format(' Integral with respect to time of heat loss to fluid =',
     & es12.4,' J')
         write (output,1400) mcp
 1400 format ('0  Power Densities (W/m3) for couple mesh', i3//
     1        3x, 5('node   power density',5x))
         write (output,"(5(i6,2x,1p,es11.4,6x))")
     &  (n,a(i27+n-1),n=1,numnp)
         write (output,1450) powdmx(mcp), npowdm(mcp)
 1450 format ('0  max. power density =', es13.5, ' , at node', i5)
c
c  Pool data for molten or partially molten elements (max = 500).
c
         if (ncld .eq. 0) then
           i = 0
           do j = 1,numel
             if (a(iptkfz+j-1).gt.0.1 .or. a(iptkfr+j-1).ge.0.1) then
               i = i + 1
               idumb(i) = j
               dumb1(i) = a(iptkfz+j-1)
               dumb2(i) = a(iptkfr+j-1)
             endif
             if (i .ge. 500) exit
           enddo
           if (i .ge. 1) then
             write(output,1549)cnpool
 1549  format('0thermal conductivity of molten material =',es12.4,
     & ' W/m.K')
            write (output,1550)
 1550 format (/,' conductivity of elements partially or',
     & ' completely melted (maximum of 500 printed)')
            write(output,1551)
1551  format(' conductivity values of order 1.e6 apply to',
     & ' elements completely melted and thus are',    
     & ' part of well-mixed molten pool')
            write(output,1553)
1553  format(' variables keffz and keffr represent element',
     &  ' conductivities in axial and radial directions,',
     &  ' respectively')
            write (output,1555)
 1555 format ('  elem    keffz(W/m-K)  keffr(W/m-K)       elem',
     &  '    keffz(W/m-K)  keffr(W/m-K)      elem    keffz(W/',
     &  'm-K)  keffr(W/m-K)')
            write (output,1560) (idumb(j),dumb1(j),dumb2(j),j=1,i)
 1560 format (3(i6,3x,1p,es11.4,3x,1p,es11.4,6x))
         endif
      endif
c
         i = 0
         do j = 1,numel
           if (a(i113+j-1) .gt. 0.1) then
             i = i + 1
             idumb(i) = j
             dumb1(i) = a(i113+j-1)
             if (i .ge. 500) exit
            endif
         enddo
         if (i .ge. 1) then
            write(output,1571)depth
1571   format(/,' depth (hemisphere equivalent) of molten pool',
     &      ' in lower head =',es12.4,' m')
            write(output,1582)tlqpol
1582   format(' liquidus temperature of molten pool =',es12.4,' K')
            write(output,1573)tpool
1573   format(' average temperature of molten pool =',es12.4,' K')
            write(output,1574)thkcer(9)
1574   format(' average power density in molten pool =',es12.4,
     & ' W/m3')
cljs add statement of which Rayleigh number is being used;
cljs chngno(3)=0=steady state, chngno(3)=1 transient
            write(output,1575)rass
1575   format(' steady state Rayleigh number of molten pool =',
     &      es12.4)
            write(output,1577)rap
1577   format(' transient Rayleigh number =',es12.4)
            write (output,1562)
            write (output,1564)
            write (output,1566) (idumb(j),dumb1(j),j=1,i)
         endif
c
 1562  format (/,'  natural convection heat transfer coefficients',
     & ' normal to liquid-solid interface (W/m**2.K)'
     & ' (max. of 500 printed)',/)
 1564 format ('  elem    htc (W/m2.K)                    elem',
     &  '     htc (W/m2.K)                   elem     htc (W/',
     &  'm2.K)              ')
 1566 format (3(i6,3x,1p,es11.4,11x,3x,6x))
c    print thickness of frozen material normal to direction of melting
c    or solidification for each element.
         i = 0
         do j = 1,numel
           if (a(iptfml+j-1) .gt. 1.e-10) then
             i = i + 1
             idumb(i) = j
             dumb1(i) = a(iptfml+j-1)
             if (i .ge. 500) exit
           endif
         enddo
         if(i.ge.1)then
         write(output,1572)
1572     format(/,' thickness of frozen material in element (m) ',
     &   ' (thickness in direction normal to boundary of molten',
     &   ' pool)',/)
         write(output,1578)
1578     format('  elem    thickness(m)                    elem',
     &   '     thickness(m)                   elem     thickne',
     &   'ss(m)')
         write (output,1576) (idumb(j),dumb1(j),j=1,i)
1576     format (3(i6,3x,1p,es11.4,11x,3x,6x))
         endif
c
c  Output the fission product - aerosol mass inventory for each element.
c
c***   Index error in printout of species mass, so eliminate printout
c***   until index error corrected.
c***   Also, so locations in printed array are not defined.
c***   if (nspdeb .eq. 0) go to 320
       if(nspdeb.ne.99999999)go to 320
       write (output,1500) nspdeb
         do i = 1,nspdeb
           kk   = iafp(iptspl + i - 1)
           chxx = chaidx(kk)
           write (output,1505) chxx
           write (output,1507)
           write (output,1510) (j,a(iptspd+j-1 + (i-1)*numel),j=1,numel)
         enddo
c
 1500  format (/,'  fission product - aerosol mass inventory',
     *           ' per element for ',i3,' species')
 1505  format (/'  for species "',a4,'" mass in each debris element ',
     *          '(kg) is '/)
 1507  format (/,'  elem   specie mass      elem   specie mass     ',
     *           ' elem   specie mass      elem   specie mass     ',
     *           ' elem   specie mass')
 1510  format (5(i6,2x,1p,es11.4,5x))
  320  continue
c
c      write output for couple debris bed aluminum oxidation model
c      if aluminum fraction of debris > 0.3
c
       if (afrdeb(8,mcp) .lt. 0.3) go to 350
       if (scntrl(13) .or. neltop.eq.0) go to 350
       write (output,1520)
       write (output,1522)
       avgthk = 0.0
       do 340 l = 1,neltop
       n  = iafp(idetop+l-1)
       i1 = iafp(iptiel+n-1)
       j1 = iafp(iptjel+n-1)
       totthk = 0.0
       totmas = 0.0
       toteox = 0.0
       toth2r = 0.0
          do 330 jj = j1,1,-1
          if (jj .eq. j1) then
             ne = n
          else
             idyn = (maxj-1)*i1 + jj
             ne   = iafp(ipteij+idyn-1)
          endif
          totthk = totthk + a(ipoxth+ne-1)
          totmas = totmas + a(ipwxl2+ne-1)
          toteox = toteox + a(ipexlm+ne-1)
          toth2r = toth2r + a(iph2lm+ne-1)
          jcor = iafp(i8 + 5*(ne-1) + 1)
          kcor = iafp(i8 + 5*(ne-1) + 2)
          delz = a(i7+kcor-1) - a(i7+jcor-1)
          if (a(ipoxth+ne-1) .gt. delz) then
             go to 330
          else
             go to 335
          endif
  330     continue
  335     continue
       write (output,1525) l, n, totthk, totmas, toteox, toth2r
       avgthk = avgthk + totthk
  340  continue
       avgthk = avgthk/neltop
       write (output,1527) avgthk
  350  continue
c
 1520  format (/,2x,'couple debris bed aluminum oxidation model',
     & ' output',/,2x,'oxide thickness computed for stacks of',
     & ' couple elements',/)
 1522  format (5x,'  stack   top element   oxide thickness     ',
     & 'mass aluminum      energy of          hydrogen',/
     & 5x,' number    of debris         (m)             ',
     & ' reacted (kg)     reaction (w)     released (kg/s)')
 1525  format (7x,i3,9x,i3,9x,es12.5,7x,es12.5,5x,es12.5,6x,es12.5)
 1527  format (/,'    average aluminum oxide thickness for couple ',
     &         'debris bed = ',es12.5,' (m)',/)
c
c  Write output for ATR configuration: layer, elements, and height of
c  debris bed.
c
       if (natrop.eq.1) then
         i = ncrlay - 1
         write (output,1600) ncrlay,
     &   (iafp(j),j=ilayer+(i*25),ilayer+(i*25)+iafp(inelms+i)-1)
 1600  format (/,'0Slumping debris is currently filling layer number '
     & ,i2,', comprising elements ',25i5)
         write(output,1610) hgtdeb(mcp)
 1610  format ('0The depth of the debris in the stack of elements ',
     & 'currently being filled is ',f11.8,/)
       endif
c
       call couprt(a(i40), a(i51), a(ihtcto), a(itsink),
     & a(ivcnpt),a(iptmet),a(i44),a(i41),a(i22))
       enddo
       return
       end
