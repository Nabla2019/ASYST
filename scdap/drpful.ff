*mlist
*if def,selap
       subroutine drpful (ntop,nlow,j,mz,tzr,tzro,oxdhc,qfoxt,unuc,
     * effgen,effk,effcp)
c
c  drpful drops all axial zones above a voided region down one zone.
c
c  Cognizant engineer: ewc.
c
       implicit none
*call scddat
*call nrcom
*call uoxcom
*call intcom
*call scdout
*call scdcom
*call tblsp
*call comctl
*call fast
*call voldat
       integer ntop,nlow,j,mz
       real tzr(ndax),tzro(ndax),oxdhc(ndax),qfoxt(ndax,ndcomp),
     + unuc(ndax),effgen(ndrd,ndax),effk(ndrd,ndax),effcp(ndrd,ndax)
       integer in1,in2,ir,k,nsj
       real tinner,touter
c
      do 40 k=nlow,ntop-1
* outer clad mass
        mascdo(k,j) = mascdo(k+1,j)
* fuel mass
        masful(k,j) = masful(k+1,j)
        masfa(k,j)  = masfa (k+1,j)
* inner clad mass
        mascdi(k,j) = mascdi(k+1,j)
* inner alpha mass
        mascai(k,j) = mascai(k+1,j)
* inner oxide mass
        mascoi(k,j) = mascoi(k+1,j)
* outer alpha mass
        mascao(k,j) = mascao(k+1,j)
* outer oxide mass
        mascoo(k,j) = mascoo(k+1,j)
* fuel oxide ????
        masfao(k,j) = masfao(k+1,j)
* uranium fuel mass
        masfu(k,j) =  masfu(k+1,j)
* uranium oxide mass
        masfuo(k,j) = masfuo(k+1,j)
        mscdmo(k,j) = mscdmo(k+1,j)
        mscdmi(k,j) = mscdmi(k+1,j)
        msfulm(k,j) = msfulm(k+1,j)
* fuel thickness
        uthick(k,j) = uthick(k+1,j)
* outer oxide thickness
        oxdeoo(k,j) = oxdeoo(k+1,j)
* inner oxide thickness
        oxdeo(mz+k-1) = oxdeo(mz+k)
* outer clad thickness
        tzro(k) = tzro(k+1)
* inner clad thickness
        tzr(k) = tzr(k+1)
* oxide wt gain in inner clad
        oxdwc(mz+k-1) = oxdwc(mz+k)
* oxide wt gain in outer clad
        oxdwco(k,j) = oxdwco(k+1,j)
        oxdwai(k,j) = oxdwai(k+1,j)
        oxdwao(k,j) = oxdwao(k+1,j)
        uwgi(k,j) = uwgi(k+1,j)
        uwgo(k,j) = uwgo(k+1,j)
* outer clad oxidation heat generation
        oxdhco(k,j) = oxdhco(k+1,j)
* inner clad oxidation heat generation
        oxdhc(k) = oxdhc(k+1)
        qfoxt(k,j) = qfoxt(k+1,j)
        unuc(k) = unuc(k+1)
        uoxfi(k,j) = uoxfi(k+1,j)
        uoxfo(k,j) = uoxfo(k+1,j)
* area of fuel
        afuel(mz+k-1) = afuel(mz+k)
* effective heat generation, conductivity, and specific heat
        do 20 ir = 1,numelm(mz+k-1)
          effgen(ir,k) = effgen(ir,k+1)
          effk(ir,k) = effk(ir,k+1)
          effcp(ir,k) = effcp(ir,k+1)
   20   continue
* radial mesh
        do 30 ir = 1,numelm(mz+k-1)+1
          xcond3(ir,k,j) = xcond3(ir,k+1,j)
          tcond3(ir,k,j) = tcond3(ir,k+1,j)
   30   continue
   40 continue
      mascdo(ntop,j) = 0.0
      masful(ntop,j) = 0.0
      mascdi(ntop,j) = 0.0
      mascai(ntop,j) = 0.0
      mascoi(ntop,j) = 0.0
      mascao(ntop,j) = 0.0
      mascoo(ntop,j) = 0.0
      masfa(ntop,j) = 0.0
      masfao(ntop,j) = 0.0
      masfu(ntop,j) = 0.0
      masfuo(ntop,j) = 0.0
      mscdmo(ntop,j) = 0.0
      mscdmi(ntop,j) = 0.0
      msfulm(ntop,j) = 0.0
      uthick(ntop,j) = 0.0
      oxdeoo(ntop,j) = 0.0
      oxdeo(mz+ntop-1) = 0.0
      tzro(ntop) = 0.0
      tzr(ntop) = 0.0
      oxdwc(mz+ntop-1) = 0.0
      oxdwco(ntop,j) = 0.0
      oxdwai(ntop,j) = 0.0
      oxdwao(ntop,j) = 0.0
      uwgi(ntop,j) = 0.0
      uwgo(ntop,j) = 0.0
      oxdhco(ntop,j) = 0.0
      oxdhc(ntop) = 0.0
      qfoxt(ntop,j) = 0.0
      unuc(ntop) = 0.0
      uoxfi(ntop,j) = 0.0
      uoxfo(ntop,j) = 0.0
      sroxd(mz+ntop-1) = 0.0
      sroxdo(ntop,j) = 0.0
      h2oxd(mz+ntop-1) = 0.0
      h2oxdo(ntop,j) = 0.0
      afuel(mz+ntop-1) = 0.0
      do 50 ir = 1,numelm(mz+ntop-1)
        effgen(ir,ntop) = 0.0
        effk(ir,ntop) = 0.0
        effcp(ir,ntop) = 0.0
   50 continue
      do 60 ir = 1,numelm(mz+ntop-1)+1
        xcond3(ir,ntop,j) = 0.0
   60 continue
      in1=nvad((  j-1)*ndax+1)+filndx(4)
      nsj=nsout(j)
      in2=nvad((nsj-1)*ndax+1)+filndx(4)
      tinner = satt(in1)
      if (voidf(in1).le.0.0001) tinner = tempg(in1)
      if (voidf(in1).ge.0.9999) tinner = tempf(in1)
      touter = satt(in2)
      if (voidf(in2).le.0.0001) touter = tempg(in2)
      if (voidf(in2).le.0.9999) touter = tempf(in2)
      tcond3(1,ntop,j) = tinner
      tcond3(2,ntop,j) = tinner
      tcond3(3,ntop,j) = 0.5*(touter+tinner)
      tcond3(4,ntop,j) = touter
      tcond3(5,ntop,j) = touter
      return
      end
*endif
