*mlist
       subroutine trupt
c
c
c  trupt gets the arguments to pass to the ruptur subroutine for both
c  the couple wall and the relap heat structures.
c
c  Cognizant engineer: ewc (gaj).
c
c  Called by tran.
c
c  Modified 1/5/94 by C. A. Dobbe using updates supplied by L. J.
c  Siefken to recalculate offset to heat transfer data every call
c  to trupt.  This eliminates errors if a heat structure is deleted
c  on restart.  The offset was originally only computed when the
c  creep rupture input was processed in irupt.
c
       implicit none
*call comctl
*call contrl
*call fast
*call htsrcm
*call scddat
*call cpmdat
*call ufiles
*call voldat
*call rupt
*call slumpv
*call alcm
*call iparm
*call parm
c
c  Local variables.
       integer i,igm,imt,iv,j,m,ntdum,k
       real dtr,dtrup,pri,pro,radi,rado,tbar,tdum
       external caltav,ruptur
c
c  Data statements.
      data dtrup/5.0/
c
      dtr = timehy - timrcl
      if (dtr .lt. dtrup) go to 1000
      timrcl = timrcl + dtrup
c
c  Do any required couple wall rupture calculations.
      if (nrlc .le. 0) go to 300
      pri = p(filndx(4) + inv)
      if (ncnvol .gt. 0) then
        pro = p(filndx(4) + incn)
      else
        pro = pext
      end if
      igm = 3
      radi = alhir
      rado = radi + dh
      do 200 i=1,nrlcmx
      if (nel(i) .eq. 0) go to 200
      if (dcrepc(i) .ge. 1.0) go to 200
      call caltav (a(i8), a(i108), a(i100), a(i22),
     1         nel(i), nelem(1,i), numel, tbar, ntdum, tdum, tdum,
     # a(iptmlt),a(i74),a(i76),a(i78),a(i80),a(i82),a(i84),a(i86),
     # a(iptalf),a(iptlif),a(iptcdf),a(iptsif),a(i6),a(i7),a(i105))
      if (tbar .lt. 900.0) go to 200
      call ruptur (igm,imat,radi,rado,pri,pro,tbar,dtr,dcrepc(i))
      if (dcrepc(i) .ge. 1.0) then
        write (output,150) i, timehy
  150   format (/,' trupt ####### Couple wall location',
     1  i3, ' has ruptured at event time =', g18.10)
        dcrepc(i) = 1.0
      end if
  200 continue
  300 continue
c
c  Do any required heat structure rupture calculations.
c
      if (nrlh .le. 0) go to 1000
      do 500 i=1,nrlhmx
      if (nhs(i) .eq. 0) go to 500
      if (dcreph(i) .ge. 1.0) go to 500
c
c  Beginning of 1/5/94 updates
c
      k = filndx(8)
      do 505 m = 1, nhtstr(k)
      j = ihtptr(k) + filndx(8)
      if ( htstno(j) .eq. nhs(i) ) go to 506
      k = k + 1
  505 continue
      write (output,901) nhs(i)
  901     format ('0******** heat str.', i8, ' requested for creep',
     1       ' rupture calc. not found.')
      fail = .true.
  506 nhsord(i) = m
c
c  End of 1/5/94 updates
c
      m = filndx(8) + nhsord(i) - 1
      j = ihtptr(m) + filndx(8)
      if (htvatp(j) .lt. 900.0) go to 500
      if (prihs(i) .gt. 0.0) then
        pri = prihs(i)
      else
        iv = htbvo(j)
        pri = p(iv)
      end if
      if (prohs(i) .gt. 0.0) then
        pro = prohs(i)
      else
        iv = htbvo(j+1)
        pro = p(iv)
      end if
      igm = ishft(htopt(j),-24)
      imt = imaths(i)
      radi = htrado(j)
      rado = htradn(j)
      tbar = htvatp(j)
      call ruptur (igm,imt,radi,rado,pri,pro,tbar,dtr,dcreph(i))
      if (dcreph(i) .ge. 1.0) then
        write (output,450) nhs(i), timehy
  450 format(/,' trupt ####### Heat structure', i10,' has ruptured',
     1          ' at event time =', g18.10)
        dcreph(i) = 1.0
      end if
  500 continue
 1000 continue
      return
      end
