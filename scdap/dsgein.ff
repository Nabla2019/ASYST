*mlist
*if def,selap
      subroutine dsgein (yh, nyh, n, t, h, nq, hu, uround, tn, k,
     *                   dky, info)
c
c  Descriptive sentence goes here.
c
c  Cognizant engineer: ljs.
c
       implicit none
c
      integer nyh, n, nq, k, info
      real yh(nyh,1), t, h, hu, uround, tn, dky(1)
       integer ii
c
c  ...1...  function / purpose  .......
c       computes interpolated values of the k-th derivative of the
c       dependent variable vector y, and stores it in dky.
c  ...2...  arguments / parameters / constants  .......
c     ..a..  input arguments  .....
c          yh  r:nyh,nq+1 - nordseick history array
c          nyh  i:1  - leading dimension of yh
c          n  i:1  - number of first order ode's
c          t  r:1  - current internal mesh point
c          h  r:1  - current step size
c          nq  i:1  - current order
c          hu  r:1  - step size last used successfully
c          uround  r:1  - unit roundoff for the present machine
c          tn  r:1  - desired value of independent variable for
c              interpolation
c          k  i:1  - order of the desired derivative of the dependent
c              variable y
c     ..b..  output arguments  .....
c          dky  r:n  - interpolated value of the k-th derivative
c          info  i:1  - error condition / message
c               =  0, normal completion
c               = 41, illegal value of (i1)/k
c               = 42, illegal value of tn;
c                     must be between (r1)/tp and (r2)/t
c     ..c..  internal / local variables  .....
      integer i, ic, j, jb, jb2, jj, jj1, jp1, l, ni, nr
      real c, r, s, tp
c     ..d..  external / subprogram references  .....
c          minerva subroutine - ulemsg
       external ulemsg
       save
c     ..e..  constants  .....
c  ...3...  notes / remarks  .......
c     ..a..  usage  .....
c          called by ds//dr with k = 0 and tn = tout, but may also be
c          called by the user for any k up to the current order.
c     ..b..  algorithm  .....
c          the computed values in dky are obtained by interpolation
c          using the nordsieck history array yh.  this array
c          corresponds uniquely to a vector-valued polynomial of degree
c          nq or less, and dky is set to the k-th derivative of this
c          polynomial at t.
c          the formula for dky is..
c                    q
c          dky(i) = sum  c(j,k) * (tn - t)**(j-k) * h**(-j) * yh(i,j+1)
c                   j=k
c          where  c(j,k) = j*(j-1)*...*(j-k+1), q = nq, t = tc, h = hc.
c          the above sum is done in reverse order.
c     ..c..  portability  .....
c          ansi 66 - nonstandard character constant in ulemsg call
c     ..d..  references  .....
c          see dsgedr
c     ..e..  history  .....
c          origin - intdy, a.c. hindmarsh, lsode, 3/6/80
c          modified - header, structure - e.s. marwil, 4 may 81
c
      info = 0
      ni = 0
      nr = 0
      if (0 .le. k .and. k .le. nq) go to 10
         info = 41
         ni = 1
         go to 100
c        ---------
   10 continue
      tp = t - hu*(1.0e0 + 100.0e0*uround)
      if ((t-tn)*(tn-tp) .ge. 0.0e0) go to 20
         info = 42
         nr = 2
         go to 100
c        ---------
   20 continue
      l = nq + 1
      s = (tn - t) / h
      ic = 1
      if (k .eq. 0) go to 40
         jj1 = l - k
         do 30 jj = jj1, nq
            ic = ic * jj
   30       continue
   40 continue
      c = float(ic)
      do 50 i = 1,n
         dky(i) = c * yh(i,l)
   50    continue
      if (k .eq. nq) go to 90
c                    --------
         jb2 = nq - k
         do 80 jb = 1, jb2
            j = nq - jb
            jp1 = j + 1
            ic = 1
            if (k .eq. 0) go to 70
               jj1 = jp1 - k
               do 60 jj = jj1, j
                  ic = ic * jj
   60             continue
   70       continue
            c = float(ic)
            do 72 ii = 1,n
              dky(ii) = s*dky(ii) + c*yh(ii,jp1)
   72       continue
   80       continue
         if (k .eq. 0) go to 100
c ------------         ---------
   90 continue
       r = h**(-k)
       do 91 ii = 1,n
         dky(ii) = r*dky(ii)
   91  continue
c
  100 continue
      if (info .ne. 0) call ulemsg (info, 'dsgein', ni,k,0, nr,tp,t)
      return
      end
*endif
