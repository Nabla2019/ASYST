*mlist
*if def,selap
       function conmat(im,t,zloc1)
!  Compute thermal conductivity by interpolation of user specified
!  tables ttemp (=temperature) and tk (=thermal conductivity).
!
!  Cognizant engineer: ewc.
!
!  Calling subroutines:  fnk.
!     input variables   description
!        im             material indicator
!        t              temperature ( k )
!        zloc1          elevation being analyzed (m)
!
       use gentblc
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
!
       real(kr) conmat
       real(kr) t
       real(kr) zloc1
       integer im
!
       include 'ufiles.h'
       include 'contrl.h'
       include 'matdat.h'
!
       real(kr) dr(1)
       integer i,jknt,k
       logical err
!
       if (im .le. 12) then
         jknt = im - 8
       else
         jknt = im - 45
       endif
!
       if (umgntno(1,jknt) .gt. 0) then
!  Evaluate material from general tables.
         k = umgntni(3,jknt)
         if (t .ne. gen(k)%gtarg) then
           call gtpolat (gen(k)%gtinfo,gtptr(k)%gtbl,t,dr(1:1),err)
           gen(k)%gtarg = t
           gen(k)%gtval(1) = dr(1)
         else
           dr(1) = gen(k)%gtval(1)
         endif
         conmat = dr(1)
       else
!  Evaluate material from fixed temperature tables.
         if (t .ge. ttemp(markmx(jknt),jknt)) then
           conmat = tk(markmx(jknt),jknt)
         elseif (t .le. ttemp(1,jknt)) then
           conmat = tk(1,jknt)
         else
           i = 1
           do
             if (t.ge.ttemp(i,jknt) .and. t.le.ttemp(i+1,jknt)) then
               conmat = tk(i,jknt) +
     &         (tk(i+1,jknt) - tk(i,jknt))*(t - ttemp(i,jknt))/
     &         (ttemp(i+1,jknt) - ttemp(i,jknt))
               exit
             endif
             i = i + 1
           enddo
         endif
       endif
         if (im.eq.imshrd .and. ifshrd.eq.1 .and. zloc1.ge.zfshrd) then
         conmat = fmshrd*conmat
         end if
       return
       end
*endif
