*mlist
*if def,selap
       subroutine upsmov
c
c  this subroutine moves upper plenum structure variables from
c  new to old (old to new) time values if a time advancement is
c  successful (unsuccessful)
c
c  Cognizant engineer: ljs (fpg).
c
       implicit none
*call contrl
*call scddat
*call upccon
*call upcvar
c
c  local variables (must be defined every call)
c
c  is      index that represents current upper plenum structure number
c  iax     index that represents current upper plenum axial level number
c  icn     index that represents current upper plenum conduction node
c          number
c  iox     index that represents current upper plenum oxide species
       integer is, iax, icn, iox
c
       if (succes .ne. 0) then
c  advancement is unsuccessful, move vars. from old to new time values
         do 10 is=1,ntups
           mluph(is) = mlzph(is)
           do 20 iox=1,7
             mxluph(iox,is) = mxlzph(iox,is)
   20      continue
           do 30 iax=0,ntupax(is)
c  note that iax initial value =0 for these arrays
             mlupl(iax,is) = mlzpl(iax,is)
             mlupr(iax,is) = mlzpr(iax,is)
             do 40 iox=1,7
               mxlupl(iox,iax,is) = mxlzpl(iox,iax,is)
               mxlupr(iox,iax,is) = mxlzpr(iox,iax,is)
   40        continue
   30      continue
           do 50 iax=1,ntupax(is)
             mmgupl(iax,is) = mmgzpl(iax,is)
             mmgupr(iax,is) = mmgzpr(iax,is)
             lxupls(iax,is) = lxzpls(iax,is)
             lxuprs(iax,is) = lxzprs(iax,is)
             qrupls(iax,is) = qrzpls(iax,is)
             qruprs(iax,is) = qrzprs(iax,is)
             qoupls(iax,is) = qozpls(iax,is)
             qouprs(iax,is) = qozprs(iax,is)
             qsupls(iax,is) = qszpls(iax,is)
             qsuprs(iax,is) = qszprs(iax,is)
             etlupl(iax,is) = etlzpl(iax,is)
             eblupl(iax,is) = eblzpl(iax,is)
             etlupr(iax,is) = etlzpr(iax,is)
             eblupr(iax,is) = eblzpr(iax,is)
             fstmul(iax,is) = fstmzl(iax,is)
             fstmur(iax,is) = fstmzr(iax,is)
             htcful(iax,is) = htcfzl(iax,is)
             htcfur(iax,is) = htcfzr(iax,is)
             htcgul(iax,is) = htcgzl(iax,is)
             htcgur(iax,is) = htcgzr(iax,is)
             htctul(iax,is) = htctzl(iax,is)
             htctur(iax,is) = htctzr(iax,is)
             tsnkul(iax,is) = tsnkzl(iax,is)
             tsnkur(iax,is) = tsnkzr(iax,is)
             qupl(iax,is)   = qzpl(iax,is)
             qupr(iax,is)   = qzpr(iax,is)
             qwgupl(iax,is) = qwgzpl(iax,is)
             qwgupr(iax,is) = qwgzpr(iax,is)
             gamupl(iax,is) = gamzpl(iax,is)
             gamupr(iax,is) = gamzpr(iax,is)
             iupls(iax,is)  = izpls(iax,is)
             iuprs(iax,is)  = izprs(iax,is)
             do 60 icn=1,ntupcn(iax,is)
               tups(icn,iax,is)  = tzps(icn,iax,is)
               mmups(icn,iax,is) = mmzps(icn,iax,is)
               lups(icn,iax,is)  = lzps(icn,iax,is)
   60        continue
             do 70 iox=1,7
               mxupls(iox,iax,is) = mxzpls(iox,iax,is)
               mxuprs(iox,iax,is) = mxzprs(iox,iax,is)
   70        continue
   50      continue
   10    continue
       else
c  advancement is successful, move vars. from new to old time values
         do 110 is=1,ntups
           mlzph(is) = mluph(is)
           do 120 iox=1,7
             mxlzph(iox,is) = mxluph(iox,is)
  120      continue
           do 130 iax=0,ntupax(is)
c  note that iax initial value =0 for these arrays
             mlzpl(iax,is) = mlupl(iax,is)
             mlzpr(iax,is) = mlupr(iax,is)
             do 140 iox=1,7
               mxlzpl(iox,iax,is) = mxlupl(iox,iax,is)
               mxlzpr(iox,iax,is) = mxlupr(iox,iax,is)
  140        continue
  130      continue
           do 150 iax=1,ntupax(is)
             mmgzpl(iax,is) = mmgupl(iax,is)
             mmgzpr(iax,is) = mmgupr(iax,is)
             lxzpls(iax,is) = lxupls(iax,is)
             lxzprs(iax,is) = lxuprs(iax,is)
             qrzpls(iax,is) = qrupls(iax,is)
             qrzprs(iax,is) = qruprs(iax,is)
             qozpls(iax,is) = qoupls(iax,is)
             qozprs(iax,is) = qouprs(iax,is)
             qszpls(iax,is) = qsupls(iax,is)
             qszprs(iax,is) = qsuprs(iax,is)
             etlzpl(iax,is) = etlupl(iax,is)
             eblzpl(iax,is) = eblupl(iax,is)
             etlzpr(iax,is) = etlupr(iax,is)
             eblzpr(iax,is) = eblupr(iax,is)
             fstmzl(iax,is) = fstmul(iax,is)
             fstmzr(iax,is) = fstmur(iax,is)
             htcfzl(iax,is) = htcful(iax,is)
             htcfzr(iax,is) = htcfur(iax,is)
             htcgzl(iax,is) = htcgul(iax,is)
             htcgzr(iax,is) = htcgur(iax,is)
             htctzl(iax,is) = htctul(iax,is)
             htctzr(iax,is) = htctur(iax,is)
             tsnkzl(iax,is) = tsnkul(iax,is)
             tsnkzr(iax,is) = tsnkur(iax,is)
             qzpl(iax,is)   = qupl(iax,is)
             qzpr(iax,is)   = qupr(iax,is)
             qwgzpl(iax,is) = qwgupl(iax,is)
             qwgzpr(iax,is) = qwgupr(iax,is)
             gamzpl(iax,is) = gamupl(iax,is)
             gamzpr(iax,is) = gamupr(iax,is)
             izpls(iax,is)  = iupls(iax,is)
             izprs(iax,is)  = iuprs(iax,is)
             do 160 icn=1,ntupcn(iax,is)
               tzps(icn,iax,is)  = tups(icn,iax,is)
               mmzps(icn,iax,is) = mmups(icn,iax,is)
               lzps(icn,iax,is)  = lups(icn,iax,is)
  160        continue
             do 170 iox=1,7
               mxzpls(iox,iax,is) = mxupls(iox,iax,is)
               mxzprs(iox,iax,is) = mxuprs(iox,iax,is)
  170        continue
  150      continue
  110    continue
       endif
       return
       end
*endif
