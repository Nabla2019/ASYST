/******************************************************************************

	    COPYRIGHT (c) 2005, 2017 by Reprise Software, Inc.
	This software has been provided pursuant to a License Agreement
	containing restrictions on its use.  This software contains
	valuable trade secrets and proprietary information of 
	Reprise Software Inc and is protected by law.  It may not be 
	copied or distributed in any form or medium, disclosed to third 
	parties, reverse engineered or used in any manner not provided 
	for in said License Agreement except with the prior written 
	authorization from Reprise Software Inc.

 *****************************************************************************/
/*	
 *	Description: 	Test client for LM system
 *
 *	Usage:		% sampleclient [product [count [version]]]
 *
 *	Return:		None
 *
 *	M. Christiano
 *	11/27/05
 *
 *	$Id: sampleclient.c,v 1.33 2017/02/15 19:29:06 matt Exp $
 */

#include "license.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifndef _WIN32
#include <unistd.h>
#include <strings.h>
#endif /* _WIN32 */

//static void printstat(RLM_HANDLE, RLM_LICENSE, const char *);

void
CP(int *expDy, char *expDt, int *stat, char *errstring, char *prd, char *ver)
{
  RLM_HANDLE rh;
  RLM_LICENSE lic = (RLM_LICENSE) NULL;
  int x;
  char *product, p[RLM_MAX_PRODUCT+1];
  int count = 1;
  const char *version = "1.0";
//  product = "rh6_test";
  product = "RedHat6_Test";

        strcpy(ver, version);
        strcpy(prd, product);
  	rh = rlm_init(".", NULL, (char *) NULL);
	*stat = rlm_stat(rh);
	if (*stat)
	{
	  char errstring[RLM_ERRSTRING_MAX];

//		(void) printf("Error initializing license system\n");
//		(void) printf("%s\n", rlm_errstring((RLM_LICENSE) NULL, rh, 
//								errstring));
//		exit(1);
  		rlm_errstring((RLM_LICENSE) NULL, rh, errstring);
		return;
	}
	else
	{
		lic = rlm_checkout(rh, product, version, count);
	//	printstat(rh, lic, product);
	        *stat = rlm_license_stat(lic);
                if (*stat != 0) 
		{
			rlm_errstring(lic, rh, errstring);
			return;
		}
	}

//	(void) printf("Enter <CR> to continue: ");
//	x = fgetc(stdin);

	if (lic) 
	{
/*
 *		rlm_checkin() isn't necessary if you aren't going
 *		to do anything else on the handle (other than check
 *		in licenses).   If you are using a handle created
 *		with rlm_init(), then rlm_checkin() doesn't hurt
 *		anything.  But if you use a handle created with
 *		rlm_init_disconn(), then rlm_checkin() causes an extra,
 *		unnecessary network connection to the license server.
 */
		*expDy = rlm_license_exp_days(lic);
		strcpy(expDt, rlm_license_exp(lic));
		rlm_checkin(lic);
		rlm_close(rh);
	}
	return;
}

/*
static
void
printstat(RLM_HANDLE rh, RLM_LICENSE lic, const char *name)
{
  int stat;
  char errstring[RLM_ERRSTRING_MAX];

	stat = rlm_license_stat(lic);
  	if (stat == 0)
  		(void) printf("Checkout of %s OK.\n", name);
  	else if (stat == RLM_EL_INQUEUE)
  		(void) printf("Queued for %s license\n", name);
  	else
  	{
  		(void) printf("Error checking out %s license\n", name);
  		(void) printf("%s\n", rlm_errstring(lic, rh, errstring));
  	}
	(void) printf("%i\n", stat);
        if (stat != 0) rlm_errstring(lic, rh, errstring);
}
*/
