*mlist
       subroutine rstrip
!  Process input data for strip option.
!
!  Cognizant engineer: rjw.
!
*in32 info
*in32end
       use scrtch
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'ufiles.h'
!
!  Local variables.
       integer(8), allocatable :: ibufn(:)
       character(8), allocatable :: ibufa(:)
       integer i,ii,inp8,ix,j,l3a(8),info(3),len,n3,n4,mm,mp
       real rnfo(3)
       equivalence (rnfo(1),info(1))
       logical nogof,hout
       character chwrd*8,mname*17(100)
!
       data l3a/1001,0,1,2,0,1,-1,0/
       data hout/.false./
!
!  Process restart input file card and strip output file card.
       call srestf (nogof)
       fail = fail .or. nogof
!  Process strip variable request cards.
       allocate (plin(2997))
       j = 0
       l3a(1) = 1001
       do
         call inplnk (l3a(1),ix,n3,n4,fa(filndx(1)))
         if (n4 .ne. 0) then
           l3a(6) = 1
           call inp2 (fa(filndx(1)),rnfo,l3a)
           if (l3a(6) .gt. 0) then
             j = j + 1
             write (plin(j)%a,"(a8)") rnfo(1)
             if (l3a(6) .gt. 1) then 
               plin(j)%n = info(2)
             else
               plin(j)%n = 0
             endif
             plin(j)%l = l3a(1)
             if (.not.hout) then
               hout = .true.
               write (output,"('0',9x,'Strip variable requests'/
     & ' req.num.    variable code    parameter')")
             endif
             write (output,"(i9,4x,a10,i16)") plin(j)%l, plin(j)%a,
     &       plin(j)%n
           endif
         endif
         if (ix.eq.-1 .or. ix.ge.2000) exit
         l3a(1) = ix
       enddo
       if (j .le. 0) then
         write (output,"('0******** No valid strip variable request card
     &s entered.')")
         fail = .true.
       endif
       fail = fail .or. inp8(1,fa(filndx(1))).ne.0
       if (fail) go to 100
!  Check if number of strip requests exceeds 98 when strip output is 
!  formatted.
       if (iand(print,15).ne.0 .and. j.gt.98) j = 98
       chwrd = 'plotinf'
       read (chwrd,'(a8)') rnfo(1)
       info(2) = j + 2
       info(3) = 0
       if (iand(print,15).ne.0 .and. j.gt.98) j = 98
       allocate (ibufa(j+2),ibufn(j+2))
!  If no error, write id records on stripf file.
       if (iand(print,15) .ne. 0) then
         write (stripf,"(a10,2i10)") rnfo(1),(info(ii),ii=2,3)
       else
         len = 3
         write (stripf) len,rnfo(1),rnfo(2),rnfo(3)
       endif
       chwrd = 'plotalf'
       read (chwrd,'(a8)') ibufa(1)
       chwrd = 'time'
       read (chwrd,'(a8)') ibufa(2)
       chwrd = 'plotnum'
       read (chwrd,'(a8)') ibufn(1)
       ibufn(2) = 0
!dir$ ivdep
       do i = 1,j
         ibufa(i+2) = plin(i)%a
         ibufn(i+2) = plin(i)%n
       enddo
       if (iand(print,15) .ne. 0) then
         mname = ' '
         write (mname(1)(1:17),"(' ',a7,'-',a7)") ibufa(1),ibufn(1)
         do mp = 1,j+1
           write (mname(mp+1)(1:8),'(a8)') ibufa(mp+1)
           mm = len_trim(mname(mp+1))
           write (mname(mp+1)(mm+1:17),'(i9.9)') ibufn(mp+1)
         enddo
         if (print .eq. 1) then
           write (stripf,"(100(a17,1x))") mname(1:j+2)
         elseif (print .eq. 4) then
           write (stripf,"(100(a17,','))") mname(2:j+2)
         endif
       else
         write (stripf) info(2),info(2),ibufa(:)
         write (stripf) info(2),info(2),ibufn(:)
       endif
!
  100  nstrip = j
       if (allocated (ibufa)) deallocate (ibufa,ibufn)
       iroute = 5
       return
       end
