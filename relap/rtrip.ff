*mlist
       subroutine rtrip
c
c
c  Process trip input data cards.
c
c  Cognizant engineer: rjw.
c
c
*in32 iscr
*in32end
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'trpblk.h'
       include 'ufiles.h'
c
c  Local variables.
       integer l3a(7),l3b(14),l3c(11),l3d(8),iscr(8)
       integer i,iend,inp10,isfdes,itr,ix,j,l,lcntgs,lcontg,lp,
     & lx,m,ms,n3,n4,ntl,ntv
       real ftbnid,scr(8)
       equivalence (iscr(1),scr(1))
       logical byp,tfail,exp
       character ctab1(6)*2,ctab2(3)*3,icncl(2)*7,chwrd*8
c  Data statements.
       data l3a/0,0,0,1,0,1,-1/
       data l3b/0,0,1,8,0,1,-1,0,-1,-1,0,1,-1,1/
       data l3c/0,0,2,5,0,1,0,-1,0,-1,1/
       data l3d/600,0,0,2,0,1,0,0/
       data icncl/'discard','reset'/
       data ctab1/'eq','ne','gt','ge','lt','le'/
       data ctab2/'or','and','xor'/
c
c  Get filid.
       if (filid(18) .eq. 0.0) then
c  Get space for inew file.
         filid(18) = ftbnid(2)
         m = lcontg(1)
         if (m .le. 9) go to 201
         call ftbrsv (filid(18),m,-1,l)
         filsiz(18) = 8
         ntv = 0
         ntl = 0
         ntrps1(l) = 0
         ntrps1(l+1) = 0
         ntrps2(l) = 0
         ntrps2(l+1) = 0
         byp = .true.
         exp = .false.
       else
c  Old file exists.
         m = lcntgs(filid(18),1)
         call ftbsft (filid(18),m,2,filndx(18))
         l = filndx(18)
         ntv = ntrpnv(l)
         ntl = ntrpnl(l)
         byp = .false.
         exp = ntrpff(l) .ne. 0
         if (ntv .ne. 0) then
           lp = l
           do j = 1,ntv
             ntrpop(lp) = iand(ntrpop(lp),not(1))
             lp = lp + ntvskp
           enddo
         endif
         if (ntl .ne. 0) then
           lp = lp + ntv*ntvskp
           do i = 1,ntl
             ntrpop(lp) = iand(ntrpop(lp),not(1))
             lp = lp + ntlskp
           enddo
         endif
       endif
c  Set up listing title and process card 400 if it is entered.
       l3a(1) = 400
       call inplnk (l3a(1),ix,n3,n4,fa(filndx(1)))
       if (n4 .eq. 0) go to 14
       l3a(6) = 1
       call inp2 (fa(filndx(1)),iscr,l3a)
       if (l3a(6) .lt. 0) go to 13
       if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2006) scr(1)
 2006  format ('0Card 400: ',a8,'.')
       write (chwrd,'(a8)') scr(1)
       if (chwrd .eq. icncl(1)) go to 15
       write (output,2001)
 2001  format ('0******** Command on card 400 is not discard.')
   13  write (output,2002)
 2002  format ('0******** Previous trip data will be discarded since a 5
     &00 card was entered.')
       fail = .true.
   15  if (.not.byp) go to 16
       write (output,2005)
 2005  format ('0******** Card 400 (discard) entered either for a new pr
     &oblem or for restart problem with no trips.')
       fail = .true.
       go to 14
   16  if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2003)
 2003  format ('0Previous trip data is being discarded.')
       filsiz(18) = 8
       ntv = 0
       ntl = 0
       ntrps1(l) = 0
       ntrps1(l+1) = 0
       ntrps2(l) = 0
       ntrps2(l+1) = 0
       byp = .true.
c  Process 20600000 card.
   14  l3a(1) = 20600000
       l3a(6) = 1
       call inp2 (fa(filndx(1)),iscr,l3a)
       if (l3a(6)) 12,17,18
   18  write (chwrd,'(a8)') scr(1)
       if (chwrd .eq. 'expanded') go to 25
       write (output,2016)
 2016  format ('0******** Command on card 20600000 is not expanded.')
   12  write (output,2017)
 2017  format ('0******** Assuming expanded card format since card 20600
     &000 entered.')
       fail = .true.
   25  exp = .true.
c  Process 401-599 or 20600010-20610000 cards depending on expanded
c  flag.
   17  if (.not.exp) then
         l3b(1) = 401
         iend = 599
       else
         l3b(1) = 20600010
         iend = 20610000
       endif
   20  call inplnk (l3b(1),ix,n3,n4,fa(filndx(1)))
       if (n4 .eq. 0) go to 30
       l3b(2) = 0
       l3b(6) = 1
       call inp2 (fa(filndx(1)),iscr,l3b)
       if (l3b(6) .lt. 0) go to 29
       itr = l3b(1)
       if (exp) itr = (l3b(1) - 20600000)/10
       if (l3b(6) .gt. 1) go to 21
       write (chwrd,'(a8)') scr(1)
       do i = 1,2
         if (chwrd .eq. icncl(i)) go to 23
       enddo
       write (output,2004) scr(1),l3b(1)
 2004  format ('0******** ',a8,' is not an allowed command on card',i9,
     &'.')
       go to 29
   23  if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2007) scr(1),itr
 2007  format ('0',a7,' Trip no.',i5,'.')
       if (byp) go to 31
       lp = l
       do 24 j = 1,ntv
         if (itr - ntrpno(lp)) 31,26,27
   27    lp = lp + ntvskp
   24  continue
       byp = .true.
   31  write (output,2008)
 2008  format ('0******** Command entered either for a new problem or fo
     &r a nonexistent trip on a restart problem.')
       go to 29
   26  if (i .ne. 1) go to 32
   45  ntv = ntv - 1
       ms = l + filsiz(18) - lp - 8
       filsiz(18) = filsiz(18) - ntvskp
       if (ms .eq. 0) go to 30
       call ftbmov (trptim(lp+ntvskp),trptim(lp),ms)
       go to 30
   32  trptim(lp) = -1.0
       go to 30
   21  if (l3b(6) .ge. 7) go to 33
       write (output,2013) l3b(1)
 2013  format ('0******** Incorrect number of words entered on card',i9,
     &'.')
   29  fail = .true.
       go to 30
   33  tfail = .false.
       if (iscr(2).le.1000000000 .and. iscr(5).le.1000000000) go to 34
       write (output,2009) l3b(1)
 2009  format ('0******** Parameter value on card',i9,' is out of range.
     &')
       tfail = .true.
   34  write (chwrd,'(a8)') scr(3)
       do i = 1,6
         if (chwrd .eq. ctab1(i)) go to 36
       enddo
       write (output,2010) l3b(1)
 2010  format ('0******** Comparison code on card',i9,' is incorrect.')
       tfail = .true.
   36  iscr(3) = 0
       write (chwrd,'(a8)') scr(7)
       if (chwrd .eq. 'n') go to 37
       if (chwrd .eq. 'l') go to 38
       write (output,2011) l3b(1)
 2011  format ('0******** Latch code on card',i9,' is incorrect.')
       fail = .true.
   38  iscr(3) = 2
   37  if (l3b(6) .ne. 8) go to 52
       if (scr(8) .eq. -1.0) go to 51
       if (scr(8) .ge. 0.0) then
         if (scr(8) .lt. timehy + 1.0e-5) then
           scr(8) = min(scr(8),timehy)
           go to 51
         endif
       endif
       write (output,2019) l3b(1)
 2019  format ('0******** Trip time value on card',i9,' is not equal to
     &-1.0 or is greater current time.')
       fail = .true.
   52  scr(8) = -1.0
   51  if (byp) go to 39
       lp = l
       do 40 j = 1,ntv
         if (itr - ntrpno(lp)) 46,42,43
   43    lp = lp + ntvskp
   40  continue
       byp = .true.
   46  if (tfail) go to 29
       ntv = ntv + 1
       ms = l + filsiz(18) - lp - 8
       filsiz(18) = filsiz(18) + ntvskp
       if (m .lt. filsiz(18)) go to 202
       if (ms .eq. 0) go to 44
       call ftbmov (trptim(lp),trptim(lp+ntvskp),-ms)
       go to 44
   39    lp = ntv*ntvskp + l
       go to 46
   42  fail = fail .or. tfail
       if (tfail) go to 45
   44  trptim(lp) = scr(8)
       ntrcv1(lp) = scr(1)
       ntrcv2(lp) = scr(4)
       ntrnv1(lp) = iscr(2)
       ntrnv2(lp) = iscr(5)
       ntrpno(lp) = itr
       ntrpop(lp) = ior(ior(ishft(i,24),iscr(3)),1)
       trpcon(lp) = scr(6)
   30  if (ix.eq.-1 .or. ix.gt.iend) go to 50
       l3b(1) = ix
       if (exp) l3b(1) = ((l3b(1)+9)/10)*10
       go to 20
c  Process 601-799 or 20610010-20620000 cards depending on expanded
c  flag.
   50  byp = .false.
       if (ntl .eq. 0) byp = .true.
       lx = l + ntv*ntvskp
       if (exp) go to 53
       l3c(1) = 601
       iend = 799
       go to 60
   53  l3c(1) = 20610010
       iend = 20620000
   60  call inplnk (l3c(1),ix,n3,n4,fa(filndx(1)))
       if (n4 .eq. 0) go to 70
       l3c(2) = 0
       l3c(6) = 1
       call inp2 (fa(filndx(1)),iscr,l3c)
       if (l3c(6) .lt. 0) go to 69
       itr = l3c(1)
       if (exp) itr = (itr-20600000)/10
       if (l3c(6) .gt. 2) go to 61
       write (chwrd,'(a8)') scr(2)
       do i = 1,2
         if (chwrd .eq. icncl(i)) go to 63
       enddo
       if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2004) scr(2),l3c(1)
       go to 69
   63  if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2007) scr(2),itr
       if (byp) go to 71
       lp = lx
       do 64 j = 1,ntl
         if (itr - ntrpno(lp)) 71,66,67
   67    lp = lp + ntlskp
   64  continue
       byp = .true.
   71  write (output,2008)
       go to 69
   66  if (i .ne. 1) go to 72
   85  ntl = ntl - 1
       ms = l + filsiz(18) - lp - 8
       if (ms .eq. 0) go to 70
       call ftbmov (trptim(lp+ntlskp),trptim(lp),ms)
       go to 70
   72  trptim(lp) = -1.0
       go to 70
   61  if (l3c(6) .ge. 4) go to 73
       write (output,2013) l3c(1)
   69  fail = .true.
       go to 70
   73  tfail = .false.
       iscr(6) = abs(iscr(1))
       iscr(7) = abs(iscr(3))
       if (iscr(6).le.2000 .and. iscr(7).le.2000) go to 74
       write (output,2012) l3c(1)
 2012  format ('0******** Trip number on card',i9,' is out of range.')
       tfail = .true.
   74  write (chwrd,'(a8)') scr(2)
       do i = 1,3
         if (chwrd .eq. ctab2(i)) go to 76
       enddo
       write (output,2010) l3c(1)
       tfail = .true.
   76  iscr(8) = 0
       write (chwrd,'(a8)') scr(4)
       if (chwrd .eq. 'n') go to 77
       if (chwrd .eq. 'l') go to 78
       write (output,2011) l3c(1)
       tfail = .true.
   78  iscr(8) = 2
   77  if (l3c(6) .ne. 5) go to 98
       if (scr(5) .eq. -1.0) go to 81
       if (scr(5) .ge. 0.0) then
         if (scr(5) .lt. timehy + 1.0e-5) then
           scr(5) = min(scr(5),timehy)
           go to 81
         endif
       endif
       write (output,2019) l3c(1)
       fail = .true.
   98  scr(5) = -1.0
   81  if (byp) go to 79
       lp = lx
       do 80 j = 1,ntl
         if (itr - ntrpno(lp)) 86,82,83
   83    lp = lp + ntlskp
   80  continue
       byp = .true.
   86  if (tfail) go to 69
       ntl = ntl + 1
       ms = l + filsiz(18) - lp - 8
       filsiz(18) = filsiz(18) + ntlskp
       if (m .lt. filsiz(18)) go to 202
       if (ms .eq. 0) go to 84
       call ftbmov (trptim(lp),trptim(lp+ntlskp),-ms)
       go to 84
   79  lp = ntl*ntlskp + lx
       go to 86
   82  fail = fail .or. tfail
       if (tfail) go to 85
   84  trptim(lp) = scr(5)
       ntrpno(lp) = itr
       ntrtr1(lp) = iscr(6)
       ntrtr2(lp) = iscr(7)
       ntrpop(lp) = ior(ior(ishft(i,24),iscr(8)),1)
       if (iscr(1) .lt. 0) ntrpop(lp) = ior(ntrpop(lp),16)
       if (iscr(3) .lt. 0) ntrpop(lp) = ior(ntrpop(lp),32)
   70  if (ix.ne.-1 .and. ix.le.iend) then
         l3c(1) = ix
         if (exp) l3c(1) = ((l3c(1)+9)/10)*10
         go to 60
       endif
c  Process card 600.
       l3d(6) = 1
       iscr(2) = 0
       call inp2 (fa(filndx(1)),iscr,l3d)
       if (l3d(6) .ne. 0) then
         if (l3d(6) .lt. 0) then
           ntrps1(l) = 0
           ntrps1(l+1) = 0
           ntrps2(l) = 0
           ntrps2(l+1) = 0
           fail = .true.
         else
           tfail = .false.
           if (iscr(1) .gt. 2000) then
             iscr(1) = 0
             tfail = .true.
           endif
           if (l3d(6) .ne. 1) then
             if (iscr(2) .gt. 2000) then
               iscr(2) = 0
               tfail = .true.
             endif
           endif
           if (tfail) then
             write (output,2012) l3d(1)
             fail = .true.
           endif
           ntrps1(l) = iscr(1)
           ntrps2(l) = iscr(2)
         endif
       endif
       if (ntv + ntl .eq. 0) then
         if (ntrps1(l).ne.0 .or. ntrps2(l).ne.0) then
           write (output,2014)
 2014  format ('0******** Trip stops entered but no trips entered.')
           fail = .true.
         endif
         call ftbdel (filid(18))
         filid(18) = 0.0
         filsiz(18) = 0
         filndx(18) = 1
       else
         ntrpof(l) = lx - l
         ntrpnv(l) = ntv
         ntrpnl(l) = ntl
         ntrpff(l) = 0
         if (exp) ntrpff(l) = 1
         call ftbsft (filid(18),filsiz(18),2,filndx(18))
       endif
  100  call fmvlwr
       go to 1000
c
  201  tfail = .true.
       go to 205
  202  tfail = .false.
  205  write (output,2015)
 2015  format ('0******** Insufficient space for trip data processing.')
       fail = .true.
       filsiz(1) = inp10(fa(filndx(1)),500,699)
       call ftbsft (2.0,filsiz(1),1,filndx(1))
       if (.not.tfail) call ftbdel (filid(18))
 1000  return
       end
