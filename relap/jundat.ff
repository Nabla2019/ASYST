       module jundat
!  Holds hydrodynamic junction quantities.
!
!  Cognizant engineer: rjw.
!
       implicit none
       integer, parameter, private :: kr=selected_real_kind(12,200)
!
       type jund
         integer junnewold,junno
       end type jund
!  junnewold  Index to ftb oriented variables.
!  junno      Junction number.
!
       integer njunsj
!  njunsj  Number of junctions.
       type (jund), allocatable :: jun(:)
!  jun        Hydrodynamic junction quantities.
!
       contains
!
       subroutine junclear
!  Deallocate junction space.
       implicit none
!
       if (allocated(jun)) deallocate (jun)
       return
       end subroutine junclear
!
       subroutine junspread (fl)
!  Reads junction data from restart records, obtaining space if
!  necessary.
!
       implicit none
       logical fl
       include 'ufiles.h'
       integer iwrd,len,lent
       character*8 filname
!
       read (rstplt) len,iwrd
       inquire (iolength=lent) filname,njunsj
       read (rstplt) filname,njunsj
       if (fl) then
         if (allocated(jun)) deallocate (jun)
         allocate (jun(njunsj))
       endif
       read (rstplt) len,iwrd
       inquire (iolength=lent) jun
       read (rstplt) jun
       return
       end subroutine junspread
!
       subroutine junspwrite
!  Writes junction data from restart records.
!
       implicit none
       include 'comctl.h'
       include 'ufiles.h'
       integer :: iwrd=1,len
       character*8 :: filname='jundat'
!
       inquire (iolength=len) filname,njunsj
       write (rstplt) len,iwrd
       write (rstplt) filname,njunsj
       inquire (iolength=len) jun
       write (rstplt) len,iwrd
       write (rstplt) jun
       return
       end subroutine junspwrite
!
       end module jundat
