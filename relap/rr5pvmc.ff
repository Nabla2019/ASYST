*mlist
       subroutine rr5pvmc
c
c
c  Processes coupling data for linking relap5 with other codes.
c  Original mission was to link with CONTAIN (Sandia, 1990)
c
c  Cognizant engineer: rjw (rxm).
c
*if def,pvmcoupl
c
c  Cognizant Engineer: Robert Martin, THCDA, Nov. 1992
c
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'ufiles.h'
       include 'r5pvmcp.h'
       integer inp10,inp9,isfdes,ix,j,l,l3s(13),l3a(13),l3b(13),lcontg,
     & n3,n4,num,nvar,nvar1,nvar2,nvar3,idx,i
       real ftbnid
       logical fold
c
c  l3a(1) = 1st card #;  l3(2) = last card #;
c  l3a(3) = min. # of words on card; l3a(4) = max. # of words on card;
c  l3a(5) = min. # of words to skip; l3a(6) = index of lst word in block
c  l3a(7,8,9,...) = format control, -1, alpha; 0, integer; 1, float
c
c  l3s - is used only for card 20900000
c
       data l3s/2*0,1,5,0,1,-1,-1,-1,-1,-1/
       data l3a/2*0,1,3,0,1,1,1/
       data l3b/2*0,1,7,0,1,-1,0,-1,0,-1,0,0/
c
c  Set up for beginning of card scan.
       nvar = 0
       nvar1 = 0
       nvar2 = 0
       nvar3 = 0
       j = 0
c
c  Card 20900000 will have the name and path of the other code
c  Card 20900001-2090999 will have communication frequency information
c  Cards 20901001-20901999 will be R5 to other code data
c  Cards 20902001-20902999 will be other code to R5 data
c  Cards 20903000-> are flagged as an error
c
       l3s(1) = 20900000
c
c  Get next file ident for building file 31.
c
       fold=.false.
c
c  inplnk searches fa(filndx(1)) for card l3s(1).  The subroutine
c  returns ix = next card # or -1, if no card
c          n4 = error field; n4 = 0, no card; n4 < 0, format error
c               n4 > 0, number of words following card #
c          n3 = words are stored in fa(n3) to fa(n3+n4-1)
c
       call inplnk (l3s(1),ix,n3,n4,fa(filndx(1)))
       if (filid(31) .ne. 0.0) then
c
c  If block 31 is not empty, this must be a restart
c
c  For restarts, R5 will require that all links be reestablished
c  if there is going to be a change
c  if there is a 209000000 card, delete old block info
c
         if (n4.ne.0) then
           call ftbdel (filid(31))
         else
           return
         endif
       else
         filid(31) = ftbnid(1)
       endif
c
c  If no card 20900000, no work is necessary
c
       if (n4.eq.0) then
         if (n4.eq.0 .and. ix.ne.-1 .and. ix.lt.20910000) then
           write(output, 35)
   35  format ('0******** Card 20900000 is missing.')
           filsiz(1) = inp10(fa(filndx(1)),20900000,20909999)
           fail=.true.
           go to  150
         endif
         write(output,28) n4
   28  format('No card 20900000 has been found: n4 = ',i4)
         filid(31) = 0.0
         return
       endif
c
c  Card 20900000 has been found, put the info in its place
c
       write(output,29)
   29  format('Card 20900000 has been found')
c  Get space and check for cards 20900001-20909999.
       if (lcontg(1) .lt. 50001) then
c
c  Not enough space, tell user and clean up
c
         write(output,30)
   30  format ('0******** Insufficient space to process user requested r
     &stplt variables -- cards 2090xxxx.')
         filsiz(1) = inp10(fa(filndx(1)),20900000,20909999)
         fail=.true.
         go to  150
       endif
c
c  If everything is OK, reserve the space.  'l' is returned with
c  starting point
c
       l3s(6) = 1
       call ftbrsv (filid(31),50001,1,l)
       call inp2 (fa(filndx(1)),ar5cnm(l),l3s)
       if (l3s(6) .lt. 0) then
c  No data moved
         fail=.true.
         go to 120
       else if(l3s(6) .ne. 5) then
          do 55 i=l3s(6),4
             ar5cnm(l+i) = "        "
  55      continue
       endif
c
c  Need code to put blanks into character array?
c
       write (output,60)
   60  format('0  Coupling Option Selected'/
     & ' Code to Link')
       write (output,62) ar5cnm(l+j),ar5cnm(l+j+1)
   62  format(1x,a40,a10)
       write (output,64)
   64  format(4x,'Send/Receive Freq.',5x,'Until Time')
c
c  Start Looping through Frequency Data
c
       l3a(1) = ix
   40  call inplnk (l3a(1),ix,n3,n4,fa(filndx(1)))
c  Check status of card search.
       if (n4 .ne. 0) then
c  Read card 2090xxxx.
c  l = constant
c  First time through j = 0
c
         l3a(6) = j+1
c  j+1 is the word following the card number
c
c  Move everything, equivalences put them into correct place
c
         call inp2 (fa(filndx(1)),fr5cfq(l),l3a)
         if (l3a(6) .le. 0) then
c  No data moved
           fail=.true.
           go to 120
         endif
c
c  Test for goodness of frequency data
c
c  If frequency is 0.0, then send every time step
c
       if (fr5cfq(l+j) .lt. 0.0) then
         write (output,37) fr5cfq(l+j)
   37  format('0********  Bad frequency data given:',f8.4)
         fail=.true.
         go to 150
       endif
c
c   Echo Frequency Data to Output
c
       write (output,65) fr5cfq(l+j),fr5cfq(l+j+1)
   65  format(f8.4,17x,f8.4)
c  Increment file pointer and variable counter.
           nvar3 = nvar3 + 1
c
c  Each line has 2 items
c
           j = j + 2
       endif
c  Check for last card.
  110  if (ix .ne. -1) then
         if (ix .le. 20900999) then
           l3a(1) = ix
c
c  Everything is good for another card, do it again
c
           go to 40
         endif
       endif
       nr5ccp(l+2) = (nvar3-1)*2
       j = j - 2
c
c  Write Headings
c
       write (output,70)
   70  format('0  Coupling variables entered'/
     & ' req.num.',4x,'variable code',5x,'parameter',4x,
     & 'variable code',5x,'parameter',4x,
     & 'variable code',5x,'parameter',4x,'message tag')
c
       l3b(1) = ix
c
c
c  Start Looping through Coupling Data
c
   50  call inplnk (l3b(1),ix,n3,n4,fa(filndx(1)))
c  Check status of card search.
       if (n4 .ne. 0) then
c  Read card 2090xxxx.
c  l = constant
c
         l3b(6) = j+1
c
c  Move everything, equivalences put them into correct place
c
         call inp2 (fa(filndx(1)),ar5ctb(l),l3b)
         if (l3b(6) .le. 0) then
c  No data moved
           fail=.true.
           go to 120
         endif
c  If numeric value not entered on request, set to zero.
c  l3b(6) = index following point where data has been moved
c
         if (l3b(6) .eq. 1) nr5ctb(l+j) = 0
c
c  Write variable to output
c
         write (output,90) l3b(1),ar5ctb(l+j),nr5ctb(l+j),
     &   ar5ctb(l+j+2),nr5ctb(l+j+2),ar5ctb(l+j+4),nr5ctb(l+j+4),
     &   nr5cmt(l+j)
   90  format(i9,4x,a10,1x,i16,a10,1x,i16,a10,1x,i16,1x,i16)
c  Check size of word 2 and save card number.
         if (nr5ctb(l+j) .gt. 1000000000) then
           write(output,100) l3b(1)
  100 format('0******** Number on user-variable request',i8,
     & ' is out of range.')
           fail=.true.
           go to 120
         endif
         num=l3b(1)-20900000
c
c  First list item is card number - 20900001
c
         nr5cnm(l+j) = num
c  Increment file pointer and variable counter.
         if (num .lt. 1999) then
           nvar1 = nvar1 + 1
         else if (num .lt. 2999) then
           nvar2 = nvar2 + 1
         else
           write(output, 75)
   75  format ('0******** Cards greater than 20902999.')
           fail=.true.
           go to  150
         endif
c
c  Each variable has 10 items
c
         j = j + 10
       endif
c  Check for last card.
  120  if (ix .ne. -1) then
         if (ix .le. 20902999) then
           l3b(1) = ix
c
c  Everything is good for another card, do it again
c
           go to 50
         endif
       endif
       nvar = nvar1 + nvar2
c  If no input cards, do not write file to disk.
       if (nvar .gt. 0) then
         nr5ccp(l) = nvar1
         nr5ccp(l+1) = nvar2
         filsiz(31) = j + 130
c  Reserve space and write file to disk.
         fold = .true.
         call ftbsft (filid(31),filsiz(31),2,filndx(31))
       endif
c  Delete cards and return space.
       filsiz(1)=inp9(fa(filndx(1)))
       call ftbsft(2.0,filsiz(1),1,filndx(1))
  150  if (.not.fold) then
         if (isfdes(filid(31)) .ne. 0) call ftbdel (filid(31))
         filid(31) = 0.0
         filsiz(31) = 0
         filndx(31) = 0
       endif
       call fmvlwr
       idx = filndx(31)
*endif
       return
       end
