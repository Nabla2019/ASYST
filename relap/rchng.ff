*mlist
       subroutine rchng
*in32 chngin
*in32end
!
!  Process option controls that are entered by "secret" input.  These
!  options are not part of the official code and are undergoing testing.
!
!  Cognizant engineer: rjw.
!
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'ufiles.h'
       include 'wwer.h'
!
       integer i,ix,j,mm,num,l3a(9),chngin(1)
       real chngix(90)
       equivalence (chngix(1),chngin(1))
       logical fnd,prtall
!
       data l3a/1,0,0,90,0,1,-2,0,0/
!
!  Read card 1 data.
       prtall = .false.
       fnd = .false.
       l3a(6) = 1
       call inp2 (fa(filndx(1)),chngix,l3a)
       if (l3a(6) .lt. 0) then
         fail = .true.
       else
         if (l3a(6) .ne. 0) then
           fnd = .true.
!  Print, check, and process option controls.
           if (iand(ihlppr(2),ishft(1,22)).ne.0)
     &     write (output,2001) (chngin(i),i=1,l3a(6))
 2001  format ('0Option control numbers entered are:'/(20i5))
           do i = 1,l3a(6)
             num = abs(chngin(i))
             if (num .eq. 0) then
               prtall = .true.
             elseif (num .gt. 90) then
               write (output,2002) 'Option number is greater than 90.'
               fail=.true.
 2002  format ('0******** ',a)
             else
               chngno(num) = chngin(i) .gt. 0
             endif
             chngin(i) = num
             mm = i - 1
             if (mm .gt. 0) then
               do j = 1,mm
                 if (chngin(j) .eq. num) then
                   write (output,2002) 'Option number is duplicated.'
                   fail = .true.
                   exit
                 endif
               enddo
             endif
           enddo
         endif
       endif
!  Check if any options on.
       fnd = fnd .or. any(chngno)
!  Print options if any on or any input entered.
       if (iand(ihlppr(2),ishft(1,22)).ne.0) then
!         if (fnd) write (output,2004) (i,chngno(i),i=1,90)
! 2004  format ('0Current change options:'/(10(i5,l3)))
!        if (prtall ) write (output,3000)
! 3000  format ('0Option 0 prints all option descriptions.')
         if (chngno(1)) write (output,3001)
 3001  format ('0Option 1 adds explicit viscous-like term for 2-step.')
         if (chngno(2)) write (output,3002)
 3002  format ('0Option 2 sets interfacial mass transfer to zero.')
         if (chngno(3)) write (output,3003)
 3003  format ('0Option 3 sets molten pool natural circulation.')
         if (chngno(8)) write (output,3008)
 3008  format ('0Option 8 are SR reactor changes.')
         if (chngno(9)) write (output,3009)
 3009  format ('0Option 9 are N reactor changes.')
         if (chngno(10)) write (output,3010)
 3010  format ('0Option 10 is added time step control based on pressure
     & changes.')
         if (chngno(11)) write (output,3011)
 3011  format ('0Option 11 changes oxidation and growth constants for zi
     &caloy in matpro functions, coxthk and coxwtk.')
         if (chngno(12)) write (output,3012)
 3012  format ('0Option 12 is the N-reactor water packer separated from 
     &option 8.')
         if (chngno(13)) write (output,3013)
 3013  format ('0Option 13 adds vertical stratification changes.')
         if (chngno(14)) write (output,3014)
 3014  format ('0Option 14 turns off constitutive relations.')
         if (chngno(15)) write (output,3015)
 3015  format ('0Option 15 allows no violation of Courant limit.')
         if (chngno(16)) write (output,
     & "('0Option 16 uses velocity flip/flop for the nearly implicit tim
     &e advancement.')")
         if (chngno(17)) write (output,3017)
 3017  format ('0Option 17 modifies time step control for mass error, wa
     &ter property error, etc.')
         if (chngno(18)) write (output,3018)
 3018  format ('0Option 18 adds sharp interface and reverse void profile
     & logic.')
         if (chngno(19)) write (output,3019)
 3019  format ('0Option 19 uses Bestion correlation for bundles.')
         if (chngno(21)) write (output,3021)
 3021  format ('0Option 21 uses experimental numerical techniques.')
         if (chngno(23)) write (output,3023)
 3023  format ('0Option 23 uses the Godunov method for boron transport f
     &or one dimensional flow.')
         if (chngno(24)) write (output,3024)
 3024  format ('0Option 24 uses SRL subcooled boiling model.')
         if (chngno(25)) write (output,3025)
 3025  format ('0Option 25 linearizes the interfacial heat transfer for
     & nealy-implicit scheme.')
!        if (chngno(30)) write (output,3030)
!3030  format ('0Option 30 adds implicit coupling between scdap radiatio
!    &n and hydro.')
         if (chngno(32)) write (output,3032)
 3032  format ('0Option 32 uses stretch logic in packer subroutine.')
$if def,ma28,2
         if (chngno(33)) write (output,3033)
 3033  format ('0Option 33 selects ma28 simultaneous equation solver.')
!  Option 35 at one time controlled use of an overrelaxation iterative
!  solver. It no longer appears in any coding except this subroutine
!  and here it is set to be illegal to activate it. It is still used
!  in logic that allows only one of the solver options to be selected
!  at one time.
!        if (chngno(35)) write (output,3035)
!3035  format ('0Option 35 uses an overrelaxation iterative solver inste
!    &ad of direct sparse matrix routines.')
         if (chngno(36)) write (output,3036)
 3036  format ('0Option 36 limits metastable extrapolation to 50 K.')
         if (chngno(37)) write (output,3037)
 3037  format ('0Option 37 turns off umbrella model.')
         if (chngno(41)) write (output,3041)
 3041  format ('0Option 41 includes energy dissipation due to form loss.
     &')
         if (chngno(42)) write (output,3042)
 3042  format ('0Option 42 applies a stronger criteria for critical flow
     &.')
         if (chngno(43)) write (output,3043)
 3043  format ('0Option 43 uses iteration to calculate the hydrodynamic
     & conditions for critical flow.')
         if (chngno(45)) write (output,3045)
 3045  format ('0Option 45 uses newly developed model for condensing int
     &erphase heat transfer.')
         if (chngno(47)) write (output,3047)
 3047  format ('0Option 47 deactivate linear implicit drags and implicit
     & gravity in nearly, activiate linear implicit fi drag in semi.')
         if (chngno(48)) write (output,3048)
 3048  format ('0Option 48 user request the use of level model when varg
     &rav flag is turned on.')
         if (chngno(51)) write (output,3051)
 3051  format ('0Option 51 turns off water packing in all volumes.')
         if (chngno(52)) write (output,3052)
 3052  format ('0Option 52 turns off choking at all junctions.')
         if (chngno(53)) write (output,3053)
 3053  format ('0Option 53 invokes the modified Henry-Fauske critical fl
     &ow model.')
         if (chngno(54)) write (output,3054)
 3054  format ('0Option 54 reduces voidf truncation in eqfinl (smaller m
     &ass error).')
         if (chngno(55)) write (output,3055)
 3055  format ('0Option 55 uses newly developed changes to phantv for an
     &nular mist, and map transitions, and Lahey suboil.')
         if (chngno(56)) write (output,3056)
 3056  format ('0Option 56 enforces vg = vf at alpha = 1 in fidis2.F.')
         if (chngno(57)) write (output,3057)
 3057  format ('0Option 57 uses new annular wall friction model.')
         if (chngno(58)) write (output,3058)
 3058  format ('0Option 58 changes the interploation between  subcooled 
     &and superheated liquid in HIFBUB.')
         if (chngno(60)) write (output,3060)
 3060  format ('0Option 60 modifies time step control for Courant limit.
     &')
         if (chngno(61)) write (output,3061)
 3061  format ('0Option 61 uses newly developed changes to phantv hifbub
     & for bubbly slug and vertical strat.')
         if (chngno(62)) write (output,3062)
 3062  format ('0Option 62 uses newly developed changes to Chen f factor
     & in prednb.')
         if (chngno(64)) write (output,3064)
 3064  format ('0Option 64 uses the old halving and doubling of the time
     & step but the new courant limit.')
         if (chngno(65)) write (output,3065)
 3065  format ('0Option 65 uses Cathar changes to subcooled boiling.')
         if (chngno(66)) write (output,3066)
 3066  format ('0Option 66 implements donor/acceptor differencing in ver
     &tical stratification volumes.')
         if (chngno(67)) write (output,3067)
 3067  format ('0Option 67 implements velocity squared instead of veloci
     &ty*velocity-donored for momentum flux.')
         if (chngno(68)) write (output,3068)
 3068  format ('0Option 68 implements velocity-j times (velocity-L - vel
     &ocity-K) instead of velocity*velocity-donored for momentum flux.')
         if (chngno(69)) write (output,3069)
 3069  format ('0Option 69 uses momentum flux with a donored velocity ca
     &lculated using the actual donored void fraction in the numerator i
     &nstead of a floored value.')
         if (chngno(70)) write (output,3070)
 3070  format ('0Option 70 selects Russian Kurchatov Institute modificat
     &ions of matpro subroutines.')
         if (chngno(71)) write (output,3071)
 3071  format ('0Option 71 sets iwwer option in Russian Kurchatov Instit
     &ute modification to 1 from default 0.')
         if (chngno(72)) write (output,3072)
 3072  format ('0Option 72 sets iwwer option in Russian Kurchatov Instit
     &ute modification to 2 from default 0.')
         if (chngno(73)) write (output,3073)
 3073  format ('0Option 73 sets imodel option in Russian Kurchatov Insti
     &tute modification to 1 from default 0.')
$if def,newnrc,3
         if (chngno(74)) write (output,3074)
 3074  format ('0Option 74 is to turn on the new interphase mass transfe
     &r model QF'.)
         if (chngno(75)) write (output,3075)
 3075  format ('0Option 75 introduces the implicit numerical viscosity t
     &o the nearly implicit scheme.')
         if (chngno(76)) write (output,3076)
 3076  format ('0Option 76 uses a modified momentum difference eq. that 
     &has been cleared by voidga*voidfa*rhoga*rhofa.')
         if (chngno(77)) write (output,3077)
 3077  format ('0Option 77 introduces the new geometric restriction on h
     &se model.')
         if (chngno(78)) write (output,3078)
 3078  format ('0Option 78 uses a modified C-infinity definition that is
     & dependent on Reynolds number and void fraction.')
       endif
       if (chngno(67) .and. chngno(68)) then
         write (output,7776)
 7776  format ('0******** More than one option for momentum flux specifi
     &ed. Only option 67 or 68 is allowed.')
         fail = .true.
       endif
       if ((chngno(34).and.chngno(35)) .or. (chngno(33) .and.
     & ((chngno(34).and..not.chngno(35)) .or.
     & (.not.chngno(34).and.chngno(35))))) then
         write (output,7777)
 7777  format ('0******** More than one option for type of solver specif
     &ied.')
        fail = .true.
       endif
$if -def,newnrc
       if (chngno(74)) then
         write (output,"('0******** Option 74 is not currently allowed.
     &')")
         fail = .true.
       endif
$endif
       if (fnd) then
         fnd = any(chngno(4:7)) .or. chngno(20) .or.
     &   chngno(22) .or. any(chngno(26:31)) .or. any(chngno(34:35)) .or.
     &   any(chngno(38:40)) .or. chngno(44) .or. chngno(46) .or.
     &   any(chngno(49:50)) .or. chngno(59) .or. chngno(63) .or.
     &   any(chngno(79:90))
$if -def,ma28,1
         fnd = fnd .or. chngno(33)
         if (fnd) then
           write (output,"('0******** One or more undefined option numbe
     &rs have been entered.')")
           fail = .true.
         endif
       endif
       iwwer = 0; imodel = 0
       if (chngno(71)) iwwer = 1
       if (chngno(72)) iwwer = 2
       if (chngno(73)) imodel = 1
       return
       end
