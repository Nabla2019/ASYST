*mlist
       subroutine chfkut
c
c
c This subroutine calculates the critical heat flux using the
c Kutateladze chf correlation with the Folkin-Goldberg void multiplier.
c And Ivey Morris subcooling multiplier.
c
c Cognizant engineer: ras.
c
*in32 is
*in32 ls
*in32 end
c***
c  Called by HTRC1.
c***
       implicit none
       include 'contrl.h'
       include 'fast.h'
       include 'htrcom.h'
       include 'stcblk.h'
       include 'stcom.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables.
       real s(36)
       real rhofs,rhogs,sigmas,dum
       integer iones(2)
       logical err
       data  iones /1,1/
c  s( 1) = temperature
c   ( 2) = pressure
c   ( 3) = specific volume
c   ( 4) = specific internal energy
c   ( 5) = specific enthalpy
c   ( 6) = single phase beta
c   ( 7) = single phase kappa
c   ( 8) = single phase csubp
c   ( 9) = quality if two-phase
c   (10) = saturation presure
c   (11) = liquid specific volume
c   (12) = vapor  specific volume
c   (13) = liquid specific internal energy
c   (14) = vapor  specific internal energy
c   (15) = liquid specific enthalpy
c   (16) = vapor  specific enthalpy
c   (17) = liquid beta
c   (18) = vapor  beta
c   (19) = liquid kappa
c   (20) = vapor  kappa
c   (21) = liquid csubp
c   (22) = vapor  csubp
c   (23) = indexs
c   (24) = specific entropy
c   (25) = liquid entropy
c   (26) = vapor entropy
c
      if((tsatt(iv) - tempf(iv)) .lt. 1.) then
        chf  = 0.14*hfgp*sqrt(rhog(iv)*sqrt(gravcn*sigma(iv)
     &        *(rhof(iv)-rhog(iv))))
        chfmul = 1.0
      else
        s(2) = p(iv)
        s(9) = 0.0
        if (nfluid .eq. 1) then
          call sth2x2 (fa(ndxstd),s,err)
        elseif (nfluid .eq. 2) then
          call std2x2 (fa(ndxstd),s,err)
        else
          call strpx (fa(ndxstd),s,err)
        endif
        if (err) call fabend
        call  surftn (nfluid,iones,1,1,tsatt(iv),sigmas,err)
        rhofs = 1./s(11)
        rhogs = 1./s(12)
        cps= s(21)
        call thcond (nfluid,iones,iones,dum,1,1,
     &             tsatt(iv),p(iv),rhofs,'liquid',thcons,err)
        chf  = 0.14*hfgp*sqrt(rhogs*sqrt(gravcn*sigmas
     &        *(rhofs-rhogs)))
c               Ivey-Morris subcooling multiplier
        chfmul = 1.0 + 0.1*(rhofs/rhogs)**0.75
     &        *(cps*(tsatt(iv) - tempf(iv)))/hfgp
      endif
c               Folkin-Goldberg
      chfmul = chfmul*max(0.,(1.0 - 1.175*voidg(iv)))
      if (irwt .ne. 0) chfmul = chfmul*voidf(iv)
      chf  = chf*chfmul
      if (help .ne. 0) then
       write (output,402) chf,irwt,voidg(iv),chfmul
  402 format(3x,'Kutadeladze chf = ',1pe13.3,5x,'irwt,voidg,chfmul,= '
     &,i5,2e13.6)
       endif
       return
       end
