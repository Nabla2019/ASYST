*mlist
       subroutine cramer (lj,xaray,srho,aa)
c
c
c  cramer solves a set of symultaneous equations by cramers rule.
c
c  Cognizant engineer: dmk
c
       implicit none
       include 'ufiles.h'
c
       real a(4,4),aa(1),bb(4),cc(9),result,srho(1),test,xaray(4,1)
       integer icol,irow,irowp1,itest,j,jcoef,jj,jq,jrow,lj,mcoef
c
  103 format(1h0,38x,43hbasic determinant= 0., aa(j) indeterminant.)
      j          = lj
      jq         = j + 1
      if (j .le. 0) go to 13
       do irow = 1, j
         do icol = 1, j
           a(irow, icol) = 0.0
         enddo
       enddo
      do 4 mcoef = 1, jq
        jcoef      = mcoef - 1
        do 5 irow = 1, j
          do 6 icol = 1, j
            if (icol .eq. jcoef) go to 7
            a(irow, icol) = xaray(irow, icol)
            go to 6
    7       a(irow, icol) = srho(irow)
    6     continue
    5   continue
        call detmnt(j, a, result)
        if (mcoef .gt. 1) go to 8
        if (a(1, 1) .eq. 0.0) go to 12
        do 3 irow = 1, j
          bb(irow)   = 1.0 / a(irow, 1)
    3   continue
        go to 4
    8   if (a(1, 1) .eq. 0.0) go to 16
        do 10 irow = 1, j
          cc(irow)     = a(irow, 1)
          cc(irow + j) = bb(irow)
   10   continue
        aa(jcoef)  = 1.0
        jj         = max(1, (j + j))
        do 20 irow = 1, jj
          test       = cc(irow)
          itest      = irow
          irowp1     = min(jj, (irow + 1))
          do 21 jrow = irowp1, jj
            if (abs(test) .le. abs(cc(jrow))) go to 21
            test       = cc(jrow)
            itest      = jrow
   21     continue
          cc(itest)  = cc(irow)
          cc(irow)   = test
          aa(jcoef)  = aa(jcoef) * test
   20   continue
        go to 4
   16   aa(jcoef)  = 0.0
    4 continue
      go to 13
   12 write (output, 103)
      lj         = -lj
   13 return
      end
