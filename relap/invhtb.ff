       module invhtb
!  Holds data for inverted heat structure data.
!
!  Cognizant engineer: rjw.
!
       implicit none
       integer, parameter, private :: kr=selected_real_kind(12,200)
       type invht
         real(kr) frahaw,frphpw
         integer inhtno,inhtns,insrft
       end type invht
!
!  frahaw  Ratio of heat structure surface area to total surface area
!          of all heat strutures attached to volume.
!  frphpw  Ratio of volume hydraulic diameter to heat structure heated
!          hydraulic diameter.
!  inhtno  Index to heat structure data.
!  inhtns  Index to heat structure data plus 0 or 1 for left or right
!          side.
!  insrft  Index to surface temperature.
!
       type (invht), allocatable :: invh(:)
!  Array of inverted heat structure data, one for each surface of a
!  heat structure attached to a volume.
       integer invhno,invhos
!   invhno  Number of elements in invh.
!   invhos  Index of heat structures when offsets were placed in data.
!
       contains
!
       subroutine invhtbclear
!  Deallocates inverted heat structure table.
       implicit none
!
       if (allocated(invh)) deallocate (invh)
       return
       end subroutine invhtbclear
!
       subroutine invhtbread (fl)
!  Reads inverted heat structure data from restart records, obtaining
!  space if necessary.
!
       implicit none
       logical fl
       include 'ufiles.h'
!
       integer iwrd,len,lent
!
       read (rstplt) len,iwrd
       inquire (iolength=lent) invhno,invhos
       read (rstplt) invhno,invhos
       if (fl) then
         if (allocated(invh)) deallocate (invh)
         allocate (invh(invhno))
       endif
       if (invhno .ne. 0) then
         read (rstplt) len,iwrd
         inquire (iolength=lent) invh
         read (rstplt) invh
       endif
       return
       end subroutine invhtbread
!
       subroutine invhtbwrite
!  Writes inverted heat structure data from restart records.
!
       implicit none
       include 'ufiles.h'
!
       integer :: iwrd=1,len
!
       inquire (iolength=len) invhno,invhos
       write (rstplt) len,iwrd
       write (rstplt) invhno,invhos
       if (invhno .ne. 0) then
         inquire (iolength=len) invh
         write (rstplt) len,iwrd
         write (rstplt) invh
       endif
       return
       end subroutine invhtbwrite
!
       end module invhtb
