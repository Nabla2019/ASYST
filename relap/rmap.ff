*mlist
       subroutine rmap
$if def,makemap
*in32 ixxx
*in32end
c
c
c  Processes input data for surface maps for phantv, phantj, htcond
c  Reads card 89 = maptyp, targcn, target
c  Where maptyp = 'phantv', 'phantj', or 'htcond'
c        targmp =  1      ,  2      ,     3
c        targcn = ncount at which the map is desired
c        target = target volume # (phantv),
c                 target junction # (phantj), or
c                 target heat structure # (htcond)
c
c  Cognizant engineer: gam.
c
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'makmap.h'
       include 'fast.h'
       include 'ufiles.h'
c
c  Local variables.
       integer l3a(9),i,ixxx(3)
       real xxx(3)
       equivalence (xxx(1),ixxx(1))
       character*8 cmapnm
c  Data statements for one cards
c               crdstrt,crdend,min,max,nskip,nstrt,alpha,int,int
       data l3a/ 000089,     0,  0,  3,    0,    1,   -1,  0,  0/
c
c  Process variables on (89) card.
c        set default values
c  Reads card 89 = maptyp, targcn, target
       targmp = 0
       targcn = 1
       target = 0
       do 10 i = 1, 3
         ixxx(i) = 0
   10  continue
       call inp2 (fa(filndx(1)),ixxx,l3a)
       if (l3a(6) .lt. 0) then
         fail = .true.
       elseif (l3a(6) .gt. 0) then
         write (cmapnm,'(a8)') xxx(1)
         if (cmapnm .eq. 'phantj') then
           targmp = 1
         elseif (cmapnm .eq. 'phantv') then
           targmp = 2
         elseif (cmapnm .eq. 'htcond') then
           targmp = 3
         else
           fail = .true.
           targmp = 4
         endif
         targcn = ixxx(2)
         target = ixxx(3)
         write (output,2000) cmapnm, targcn, target
 2000  format (' Surface map input:',/,
     &     ' Map-Type      count    target ',/,2x,a8,2i10)
       endif
       if (targmp .eq. 4) then
         write (output,2005) cmapnm
 2005  format ('0******** Map-Type is not = to phantv, phantj, '
     & ,' or htcond. Map-Type=',a8)
       endif
c
$endif
       return
       end
