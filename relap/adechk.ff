*mlist
       subroutine adechk
c
c  Define variable and library version number edits.
c
c  Cognizant engineer: rjw (gls).
c
c    Print a table of the define values and whether they are on or off.
c    Print the version numbers of the libraries being used.
c
       implicit none
       include 'ufiles.h'
c
c  Local variables.
       integer idefs
       parameter (idefs=100)
       integer i,j
       character dnames(idefs)*8,istates(idefs)*3
       character versn*8
c
c  Get environmental library version number.
       call aaetit (versn)
       write (output,2001) versn
 2001  format ('0Environmental library version number is: ',a8,'.')
c
c  Get material properties library version number.
$if def,selap,4
       call aamtit (versn)
       write (output,2002) versn
 2002  format ('0Material properties library version number is: ',a8,'.'
     & )
c
c  Print define values.
       do 10 i = 1,idefs
         istates(i) = 'off'
   10  continue
       i = 0
c
       i = i + 1
       dnames(i) = 'blkdta'
$if def,blkdta,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'cdccra'
$if def,cdccra,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'cray'
$if def,cray,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'debth'
$if def,debth,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'decalp90'
$if def,decalp90,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'decalpha'
$if def,decalpha,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'decrisc'
$if def,decrisc,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'decrisc2'
$if def,decrisc2,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'erf'
$if def,erf,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'extjun'
$if def,extjun,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'extj20'
$if def,extj20,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'extvol'
$if def,extvol,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'extv20'
$if def,extv20,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'extv100'
$if def,extv100,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'fourbyt'
$if def,fourbyt,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'hp'
$if def,hp,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'ibm'
$if def,ibm,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'ibmrisc'
$if def,ibmrisc,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'ifortc'
$if def,ifortc,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'in32'
$if def,in32,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'laheyf77'
$if def,laheyf77,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'lcm'
$if def,lcm,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'makemap'
$if def,makemap,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'mmfld'
$if def,mmfld,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'nanscr'
$if def,nanscr,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'npa'
$if def,npa,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'nreac'
$if def,nreac,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'ploc'
$if def,ploc,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'pvmcoupl'
$if def,pvmcoupl,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'readnonb'
$if def,readnonb,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'selap'
$if def,selap,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'sgi'
$if def,sgi,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'sun'
$if def,sun,1
       istates(i) = 'on'
c
       i = i + 1
       dnames(i) = 'vax'
$if def,vax,1
       istates(i) = 'on'
c
       if (i .gt. idefs) write (output,2003)
 2003  format ('0$$$$$$$$ Number of define exceeds programmed limit, rep
     &ort to Relap5 staff.')
c
c  Print table of define values.
       write (output,'(''0Table of update define values'')')
       write (output,'(5(1x,a8,1x,a3,8x))')
     & (dnames(j),istates(j),j=1,i)
       return
       end
