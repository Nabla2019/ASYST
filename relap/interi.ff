*mlist
       subroutine interi
c
c  Process interactive input data from npa.
c
c  Cognizant engineer: rjw.
c
       use intrac
       use lpdatc
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'npacom.h'
       include 'ufiles.h'
c
c  Local variables.
       integer i,iwait,l,ll,m,mm,nbr,nwr
$if def,npa,2
$if def,in32,1
       real*4 time4
       character chwrd*8,chwrd2*8,cbuf*80
       external cvic
$if def,npa,1
       external fmessg,fquery
$if def,readnonb,1
       external clearnb,readnonb,setnb
c
       iwait = 0
       ll = ixpc + iplotlen
$if -def,npa,2
$if -def,readnonb,1
   11  continue
$if def,npa
   11  if (iand(print,32) .ne. 0) then
$if -def,in32,1
         call fquery (nbr,iwait,timehy,cbuf)
$if def,in32,2
         time4 = timehy
         call fquery (nbr,iwait,time4,cbuf)
         if (nbr .eq. 0) return
         if (nbr .gt. 0) then
           write (tty,2002) nbr
 2002  format (' Error number',i5,' returned from NPA query routine.')
           done = -7
           return
         else if (nbr .eq. -1) then
           done = -7
           return
         endif
$endif
$if def,readnonb,5
$if def,npa,2
       else
         call setnb (0,nbr)
$if -def,npa,1
   11    call setnb (0,nbr)
$if def,npa,1
       endif
$if def,readnonb
$if def,npa,1
       if (iand(print,32) .eq. 0) then
         call readnonb (0,fa(ll),80,nbr)
         if (nbr .le. 0) then
           call clearnb (0,nbr)
           return
         endif
         write (cbuf,'(10a8)') (fa(i+ll),i=0,9)
         cbuf(nbr:80) = ' '
$if def,npa,1
       endif
$endif
   12  iwait = 1
       write (output,2000) cbuf
 2000  format ('0&&&&&&&& ',a)
       write (tty,2000) cbuf
       l = ll
       nbr = 1
       call cvic (cbuf,fa(l+11),fa(l+51),nwr,nbr)
       if (nbr .ne. 0) go to 61
       if (nwr .le. 0) go to 11
       do i = 1,nwr
         if (ia(i+l+50) .lt. 0) then
           write (output,7761) ia(i+l+50),fa(i+l+10)
 7761  format (' #### ',i10,5x,a8)
         else if (ia(i+l+50) .eq. 2) then
           write (output,7762) ia(i+l+50),fa(i+l+10)
 7762  format (' #### ',i10,1p,g17.6)
         else
           write (output,7763) ia(i+l+50),ia(i+l+10)
 7763  format (' #### ',2i10)
         endif
 7760  enddo
   20  if (nwr .le. 0) go to 11
       if (ia(l+51) .ge. 0) go to 61
       write (chwrd,'(a8)') fa(l+11)
       if (chwrd .eq. '&stop') then
         done = -7
$if def,readnonb
$if def,npa,1
         if (iand(print,32) .eq. 0) call clearnb (0,nbr)
$if -def,npa,1
           call clearnb (0,nbr)
$endif
         return
       else if (chwrd .eq. '&value') then
         nwr = nwr - 1
         if (nwr .le. 0) go to 61
         l = l + 1
         if (ia(l+51) .ge. 0) go to 61
         write (chwrd,'(a8)') fa(l+11)
       endif
       if (chwrd .eq. ' ') go to 61
       if (intrno .eq. 0) go to 62
       if (nwr .lt. 2) go to 63
       do i = 1,intrno
         if (chwrd .eq. intra(i)%intrla) go to 45
       enddo
       go to 64
   45  if (ia(l+52) .lt. 0) go to 61
       if (ia(l+52) .ne. 2) fa(l+12) = ia(l+12)
       if (intra(i)%intrcv .ge. 0.0) then
         intra(i)%intrva = fa(l+12)*intra(i)%intrcv
       else
         intra(i)%intrva = fa(l+12)/1.8 - intra(i)%intrcv
       endif
       write (output,2001) timehy,intra(i)%intrla,intra(i)%intrva
 2001  format ('0&&&&&&&& time =',1p,g14.6,5x,a10,'=',g14.6)
       nwr = nwr - 2
       l = l + 2
       go to 20
   61  m = 1
       go to 70
   62  m = 2
       go to 70
   63  m = 3
       go to 70
   64  m = 4
$if def,npa
$if -def,readnonb,1
   70  continue
$if def,readnonb,1
   70  if (iand(print,32) .ne. 0) then
$if -def,in32,1
         call fmessg (nbr,3,timehy,npamsg(m))
$if def,in32,2
         time4 = timehy
         call fmessg (nbr,3,time4,npamsg(m))
         if (nbr .ne. 0) then
           write (tty,2009) nbr
 2009  format (' Error number',i5,' returned from NPA message routine.')
           go to 11
         endif
$if def,readnonb,1
       else
$endif
$if -def,npa,1
   70    continue
$if def,readnonb
         write (tty,'(a)') npamsg(m)
         call clearnb (0,nbr)
         read (5,'(a)') cbuf
         call setnb (0,nbr)
         go to 12
$endif
$if def,npa,2
$if def,readnonb,1
       endif
       end
