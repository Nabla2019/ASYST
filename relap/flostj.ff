*mlist
       subroutine flostj
c
c
c  Sets junction flags for the variable gravity option.
c
c  Cognizant engineer: rjw.
c
       implicit none
       include 'fast.h'
       include 'cmpdat.h'
       include 'contrl.h'
       include 'comctl.h'
       include 'jundat.h'
       include 'separ.h'
       include 'statec.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables.
       integer i,jx,k,kc,kc2,l,lc,lc2,n,nj,nx
       real celvck(3), celvcl(3), celvec(3), grvvec(3)
       real varang, celmag, grvmag
c
       i = filndx(5)
       n = filndx(3)
c  Outer component loop.
       do 2000 nx=1,ncmps(n)
         if (cmptyp(n) .ne. 0) then
           nj = njc(n)
           if (nj .ne. 0) then
c  Loop over junctions.
             do 1000 jx=1,nj
               if (iand(jc(i),128) .ne. 0) then
c  Get cell index of volumes connected to junction.
                 k = max(ij1vn(i)-1,0)*ivskp + filndx(4)
                 kc = iand(ishft(jcex(i),-12),7)
                 kc2 = k + kc
                 kc = k + ishft(kc,-1)
                 l = max(ij2vn(i)-1,0)*ivskp + filndx(4)
                 lc = iand(ishft(jcex(i),-9),7)
                 lc2 = l + lc
                 lc = l + ishft(lc,-1)
                 if (cmptyp(n) .ne. 8) then
                   grvvec(1) = gravv(k  ) + gravv(l  )
                   grvvec(2) = gravv(k+1) + gravv(l+1)
                   grvvec(3) = gravv(k+2) + gravv(l+2)
                   grvmag = sqrt(grvvec(1)**2+grvvec(2)**2
     &                                       +grvvec(3)**2)
                   jc(i) = iand(jc(i),not(ishft(3,26)))
                   if (grvmag .ne. 0.0) then
                     celvck(1) = hydxc(kc2)
                     celvck(2) = hydyc(kc2)
                     celvck(3) = hydzc(kc2)
                     if (iand(jc(i),4) .ne. 0) then
                       celvck(1) = -celvck(1)
                       celvck(2) = -celvck(2)
                       celvck(3) = -celvck(3)
                     endif
                     celvcl(1) = hydxc(lc2)
                     celvcl(2) = hydyc(lc2)
                     celvcl(3) = hydzc(lc2)
                     if (iand(jc(i),8) .ne. 0) then
                       celvcl(1) = -celvcl(1)
                       celvcl(2) = -celvcl(2)
                       celvcl(3) = -celvcl(3)
                     endif
                     celvec(1) = celvck(1) + celvcl(1)
                     celvec(2) = celvck(2) + celvcl(2)
                     celvec(3) = celvck(3) + celvcl(3)
                     celmag = sqrt(celvec(1)**2+celvec(2)**2
     &                                         +celvec(3)**2)
                     if (celmag .ne. 0.0) then
                       varang = (celvec(1)*grvvec(1)
     &                         + celvec(2)*grvvec(2)
     &                         + celvec(3)*grvvec(3))
     &                 / (celmag*grvmag)
                       if (varang .gt. 0.0) then
                         jc(i) = ior(jc(i),ishft(1,27))
                       endif
c
c  0.707106781 is cos(45 deg).
c
                       if (abs(varang) .gt. 0.707106781) then
                           jc(i) = ior(jc(i),ishft(1,26))
                       endif
                     endif
                   endif
                 endif
               endif
               i = i + ijskp
 1000        continue
           endif
         endif
         n = n + cmplen(n)
 2000  continue
       return
       end
