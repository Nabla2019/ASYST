*mlist
       subroutine flostv
c
c  Sets the volume flags for the variable gravity option.
c
c  Cognizant engineer: rjw.
c
       implicit none
       include 'fast.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'jundat.h'
       include 'mxnfcd.h'
       include 'pumpblk.h'
       include 'statec.h'
       include 'stcblk.h'
       include 'stcom.h'
       include 'ufiles.h'
       include 'ufilef.h'
       include 'voldat.h'
c
c  Local variables
       integer i,i2,ii,j,k,kk,m,mm
       real celmag,celvec(3),grvmag
       logical domap
c
c  Compute sinb for vertical orientationa and set imap for flow regime
c  map.
       k = filndx(3)
       i = filndx(4)
       do 15 kk = 1,ncmps(k)
         if (cmptyp(k).ne.0) then
           if (nvc(k) .ne. 0) then
             domap = cmptyp(k).ne.4 .and. cmptyp(k).ne.7 .and.
     &       cmptyp(k).ne.15
             do 10 m = 1,nvc(k)
               sinb(i) = 0.0
               sinb(i+1) = 0.0
               sinb(i+2) = 0.0
               grvmag = sqrt(gravv(i)**2 + gravv(i+1)**2 +
     &         gravv(i+2)**2)
               if (grvmag .ne. 0.0) then
                 ii = i
                 i2 = i
                 do mm = 1,3
                   if (iand(imap(ii),16384).ne.0) then
                     if (dl(ii) .ne. 0.0) then
                       celvec(1) = hydxc(i2) + hydxc(i2+1)
                       celvec(2) = hydyc(i2) + hydyc(i2+1)
                       celvec(3) = hydzc(i2) + hydzc(i2+1)
                       celmag = sqrt(celvec(1)**2 + celvec(2)**2 +
     &                 celvec(3)**2)
                       if (celmag .ne. 0.0) sinb(ii) =
     &                 (-celvec(1)*gravv(i) - celvec(2)*gravv(i+1) -
     &                 celvec(3)*gravv(i+2))/(celmag*grvmag)
                     endif
                   endif
                   ii = ii + 1
                   i2 = i2 + 2
                 enddo
               endif
c
               if (domap) then
                 j = iand(imap(i),63)
                 if (j.ge.3 .and. j.le.5) then
                   ii = i
                   do mm = 1,3
                     if (iand(imap(ii),16384) .ne. 0) imap(ii) =
     &               ior(iand(imap(ii),not(1)),2)
c  0.707106781 is cos(45 deg).
                     if (abs(sinb(ii)) .gt. 0.707106781) imap(ii) =
     &               imap(ii) - 1
                     ii = ii + 1
                   enddo
                 endif
               endif
               i = i + ivskp
   10        continue
           endif
         endif
         k = k + cmplen(k)
   15  continue
       return
       end
