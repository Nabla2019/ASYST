       subroutine fhnumbers
$if def,gui
!  Create new window for presenting volume or junction number menu.
!
$if -def,ifortc,2
       use opengl_glut
       use opengl_gl
$if def,ifortc,2
       use ifopngl
       use opengl_glut
       use hynmod
       use lpdatc
$if def,rk3d,1
       use rkinc
       use scdmod
       use vreqsd
       implicit none
       include 'fast.h'
       include 'scddat.h'
       include 'alcm.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'convarc.h'
       include 'htsrcm.h'
       include 'iparm.h'
       include 'jundat.h'
       include 'ndxara.h'
       include 'rupt.h'
       include 'scntl.h'
       include 'trpblk.h'
       include 'voldat.h'
!
       interface
!
       subroutine displayw3
       end subroutine displayw3
!
       recursive subroutine guirun
       end subroutine guirun
!
       subroutine handlemenu3 (value)
       integer value
       end subroutine handlemenu3
!
       subroutine reshapew3 (w,h)
       integer, intent(inout) :: w, h
       end subroutine reshapew3
!
       end interface
!
       integer i,i1,is,j,jx,k
       integer, allocatable :: snum(:)
       logical sw,anysw
       character vno*10,vnoc*15
       character*17 :: titlev='Volume numbers-  '
       character*19 :: titlev2='Volume variables-  '
       character*19 :: titlej='Junction numbers-  '
       character*25 :: titleh='Heat structure numbers-  '
       character*33 :: titleh2='Heat structure surface numbers-  '
       character*30 :: titleh3='Heat structure mesh numbers-  '
       character*33 :: titlec='Hydrodynamic component numbers-  '
       character*27 :: titles='Scdap component numbers-  '
       character*32 :: titles1='Scdap component-axial numbers-  '
       character*37 :: titles2='Scdap component-axial-mesh numbers-  '
       character*32 :: titles3='Scdap component-specie numbers-  '
       character*35 :: titler1='Couple creep rupture calculation-  '
       character*35 :: titler2='Relap5 creep rupture calculation-  '
       character*22 :: titlel1='Couple node numbers-  '
       character*33 :: titlel2='Couple fission product numbers-  '
       character*25 :: titlel3='Couple element numbers-  '
       character*31 :: titlel4='Couple heat transfer numbers-  '
       character*30 :: titlec2='Control variable numbers=<    '
       character*17 :: titlep1='Guitrip number-  '
       character*22 :: titlep2='Guitrip operation code'
       character*20 :: titlep3='Guitrip operand type'
       character*21 :: titlep4='Relap5 trip number-  '
!
       call glutIdleFunc (glutNullFunc)
       call glutInitWindowPosition (100,100)
       call glutInitWindowSize (500,60)
       call glutInitDisplayMode (ior(GLUT_DOUBLE,GLUT_RGB))
       winno(3) = glutCreateWindow ('Menu extensions'C)
       call fglClearColor(1.0_4,1.0_4,1.0_4,1.0_4)
       call fglShadeModel (GL_FLAT)
       call glutDisplayFunc (displayw3)
       call glutReshapeFunc (reshapew3)
!
       fhsnum2 = 0
       if (allocated(fhsmenu)) deallocate (fhsmenu)
       select case (fhoption)
!  Get numbers for find or highlight command for volumes.
       case (29,31)
         fhsnum = (lpdat(isq)%livn + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = lpdat(isq)%liv
         j = 1
         lp1: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i10.9)") volno(2,jx)
             call glutAddMenuEntry (vno,j)
             if (j .ge. lpdat(isq)%livn) exit lp1
             jx = jx + ivskp
             j = j + 1
           enddo
         enddo lp1
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlev(16:17),"(i2)") i
           call glutAddSubMenu (titlev,fhsmenu(i))
         enddo
!  Get numbers for find or highlight command for junctions.
       case (30,32)
         fhsnum = (lpdat(isq)%lijn + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = lpdat(isq)%lij
         j = 1
         lp2: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i10.9)") junno(2,jx)
             call glutAddMenuEntry (vno,j)
             if (j .ge. lpdat(isq)%lijn) exit lp2
             jx = jx + ijskp
             j = j + 1
           enddo
         enddo lp2
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlej(18:19),"(i2)") i
           call glutAddSubMenu (titlej,fhsmenu(i))
         enddo
!  Get numbers for a delete guitrip.
       case (52)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         if (ngtrips .eq. 0) then
           call glutAddMenuEntry ('none',1)
         else
           do i1 = 1,ngtrips
             write (vnoc(1:10),"('delete',i4)") gtrp(i1)%gtrpnum
             call glutAddMenuEntry (vnoc(1:10),gtrp(i1)%gtrpnum)
           enddo
         endif
!  Get numbers for a new or modified guitrip.
       case (53,61,64,71,74)
         fhsnum = (999 + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = 1
         j = 1
         lp30: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vnoc(1:3),"(i3)") j
             sw = .false.
             if (jx .le. ngtrips) then
               if (j .eq. gtrp(jx)%gtrpnum) then
                 sw = .true.
                 jx = jx + 1
               endif
             endif
             if (sw) then
               vnoc(4:15) = '  in use'
             else
               vnoc(4:15) = '  not in use'
             endif
             call glutAddMenuEntry (vnoc(1:15),j)
             if (j .ge. 999) exit lp30
             j = j + 1
           enddo
         enddo lp30
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlep1(16:17),"(i2)") i
           call glutAddSubMenu (titlep1,fhsmenu(i))
         enddo
!  Select operation code for new or modified guitrip.
       case (56)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i1 = 1,9
           write (vnoc(1:3),"(a3)") chop(i1)
           call glutAddMenuEntry (vnoc(1:3),i1)
         enddo
!  Select what variable for gui variable trip.
       case (60,63)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         call glutAddMenuEntry ('sucess-all systems',2)
         call glutAddMenuEntry ('sucess, system',6)
         call glutAddMenuEntry ('gtimeof',3)
         call glutAddMenuEntry ('timeof',4)
         call glutAddMenuEntry ('General quantities',7)
         call glutAddMenuEntry ('Component quantities',8)
         call glutAddMenuEntry ('Volume quantities',9)
         call glutAddMenuEntry ('Junction quantities',10)
         if (filid(8) .ne. 0.0) 
     &   call glutAddMenuEntry ('Heat structure quantities',11)
         if (filid(32) .ne. 0.0)
     &   call glutAddMenuEntry ('Reflood related quantities',12)
$if -def,rk3d,2
         if (filid(21) .ne. 0.0)
     &   call glutAddMenuEntry ('Reactor kinetics quantities',13)
$if def,rk3d
         if (filid(21) .ne. 0.0) then
           if (.not. pt3dflag) then
             call glutAddMenuEntry ('Reactor kinetics quantities',13)
           endif
         endif
$endif
         if (filid(27) .ne. 0.0)
     &   call glutAddMenuEntry ('Control system quantities',14)
         if (scntrl(1)) then
           call glutAddMenuEntry ('Scdap bundle quantities',15)
           call glutAddMenuEntry ('Scdap component quantities',16)
         endif
         if (cplmaxnp .ne. 0)
     &   call glutAddMenuEntry ('Lower plenum quantities',17)
         if (fhoption .eq. 63) call glutAddMenuEntry ('null 0',5)
!  Select whether Relap5 trip or gui trip and whether normal or
!  complement.
       case (70,73)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         call glutAddMenuEntry ('Guitrip--normal',1)
         call glutAddMenuEntry ('Guitrip--complement',2)
         if (ntrpnv(2,filndx(18)) + ntrpnl(2,filndx(18)) .ne. 0) then
           call glutAddMenuEntry ('Relap5 trip--normal',3)
           call glutAddMenuEntry ('Relap5 trip--complement',4)
         endif
         if (fhoption .eq. 73) call glutAddMenuEntry ('null 0',5)
!  Select Relap5 trip number.
       case (62,65,72,75)
         fhsnum = (ntrpnv(2,filndx(18)) + ntrpnl(2,filndx(18)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = filndx(18)
         sw = .true.
         j = 1
         lp31: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i5)") ntrpno(2,jx)*fholdi
             call glutAddMenuEntry (vno,ntrpno(2,jx))
             if (sw) then
               if (j .lt. ntrpnv(2,filndx(18))) then
                 jx = jx + ntvskp
                 j = j + 1
               else
                 sw = .false.
                 jx = filndx(18) + ntrpof(2,filndx(18))
                 j = 1
                 if (j .gt. ntrpnl(2,filndx(18))) exit lp31
               endif
             else
               if (j .ge. ntrpnl(2,filndx(18))) exit lp31
               jx = jx + ntlskp
               j = j + 1
             endif
           enddo
         enddo lp31
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlep4(19:21),"(i2)") i
           call glutAddSubMenu (titlep4,fhsmenu(i))
         enddo
!  Get constant.
       case (80)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
           call glutAddMenuEntry ('Constant = 0',1)
           call glutAddMenuEntry ('User defined constant',2)
!  Get general quantities.
       case (87)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         j = 1
         do i = 1,10
           if (i .ne. 6) call glutAddMenuEntry (t1(i),j)
           j = j + 1
         enddo
         do i = 1,2
           call glutAddMenuEntry (t11(i),j)
           j = j + 1
         enddo
!  Get hydrodynamic component quantities.
       case (88)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,36
           call glutAddMenuEntry (t5(i),i)
         enddo
!  Get volume quantities.
       case (89)
         fhsnum = (71 + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp51: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             call glutAddMenuEntry (t2(j),j)
             if (j .ge. 71) exit lp51
             j = j + 1
           enddo
         enddo lp51
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlev2(18:19),"(i2)") i
           call glutAddSubMenu (titlev2,fhsmenu(i))
         enddo
!  Get junction quantities.
       case (90)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,26
           call glutAddMenuEntry (t3(i),i)
         enddo
!  Get heat structure quantities.
       case (91)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,10
           call glutAddMenuEntry (t4(i),i)
         enddo
!  Get reflood related quantities.
       case (92)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,5
           call glutAddMenuEntry (t8(i),i)
         enddo
!  Get reactor kinetic quantities.
       case (93)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,7
           call glutAddMenuEntry (t6(i),i)
         enddo
!  Get Scdap bundle quantities.
       case (95)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,14
           call glutAddMenuEntry (t9a(i),i)
         enddo
!  Get Scdap component quantities.
       case (96)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         j = 1
         do i = 1,7
           call glutAddMenuEntry (t9b(i),j)
           j = j + 1
         enddo
         do i = 1,27
           call glutAddMenuEntry (t9c(i),j)
           j = j + 1
         enddo
         call glutAddMenuEntry (t9d,j)
         j = j + 1
         do i = 1,2
           call glutAddMenuEntry (t9e(i),j)
           j = j + 1
         enddo
!  Get Couple quantities.
       case (97)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         j = 1
         do i = 1,28
           call glutAddMenuEntry (t10a(i),j)
           j = j + 1
         enddo
         do i = 1,10
           if (i.ne.2 .or. nspdeb.ne.0) 
     &     call glutAddMenuEntry (t10b(i),j)
           j = j + 1
         enddo
!  Get latch and stop options.
       case (99)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         call glutAddMenuEntry ('No latch, no stop',1)
         call glutAddMenuEntry ('No latch, stop',2)
         call glutAddMenuEntry ('Latch, no stop',3)
         call glutAddMenuEntry ('Latch, stop',4)
!  Define menu to allow entry of characters for constant.
       case (100)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         j = ichar('0')
         do i = 1,10
           call glutAddMenuEntry (char(j),j)
           j = j + 1
         enddo
         j = ichar('+')
         call glutAddMenuEntry ('+',j)
         j = ichar('-')
         call glutAddMenuEntry ('-',j)
         j = ichar('.')
         call glutAddMenuEntry ('.',j)
         j = ichar('e')
         call glutAddMenuEntry ('e',j)
         call glutAddMenuEntry ('Enter',13)
         call glutAddMenuEntry ('Backspace',8)
!  Get numbers for watch command for testda quantities.
       case (260)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i1 = 1,20
           write (vno,"(i3.2)") i1
           call glutAddMenuEntry (vno(1:3),i1)
         enddo
!  Get numbers for watch command for sysmer and systms quantities.
       case (66,67,261:262)
         fhsnum = 0
         allocate (fhsmenu(0:0))
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i1 = 1,nloops
           write (vno,"(i3.2)") i1
           call glutAddMenuEntry (vno(1:3),i1)
         enddo
!  Get numbers for watch command for volume data.
       case (401:471)
         fhsnum = (nvols(2,filndx(4)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = filndx(4)
         j = 1
         lp3: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i10.9)") volno(2,jx)
             call glutAddMenuEntry (vno,j)
             if (j .ge. nvols(2,filndx(4))) exit lp3
             jx = jx + ivskp
             j = j + 1
           enddo
         enddo lp3
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlev(16:17),"(i2)") i
           call glutAddSubMenu (titlev,fhsmenu(i))
         enddo
!  Get numbers for watch command for junction data.
       case (501:526)
         fhsnum = (njuns(2,filndx(5)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = filndx(5)
         j = 1
         lp4: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i10.9)") junno(2,jx)
             call glutAddMenuEntry (vno,j)
             if (j .ge. njuns(2,filndx(5))) exit lp4
             jx = jx + ijskp
             j = j + 1
           enddo
         enddo lp4
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlej(18:19),"(i2)") i
           call glutAddSubMenu (titlej,fhsmenu(i))
         enddo
!  Get numbers for watch command for heat structures.
       case (551,571:575)
         fhsnum = (nhtstr(2,filndx(8)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = filndx(8)
         j = 1
         lp5: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             is = ihtptr(2,jx) + filndx(8)
             write (vno,"(i8.7)") htstno(2,is)
             call glutAddMenuEntry (vno(1:8),j)
             if (j .ge. nhtstr(2,filndx(8))) exit lp5
             jx = jx + 1
             j = j + 1
           enddo
         enddo lp5
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titleh(24:25),"(i2)") i
           call glutAddSubMenu (titleh,fhsmenu(i))
         enddo
!  Get numbers for watch command for heat structure surfaces.
       case (552:554,556:560)
         fhsnum = (2*nhtstr(2,filndx(8)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = filndx(8)
         j = 1
         i = 1
         lp6: do
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           i1 = 1
           do
             is = ihtptr(2,jx) + filndx(8)
             do k = 0,1
               if (htbntr(2,is+k) .eq. 0) then
                 write (vno,"(i10.9)") 100*htstno(2,is) + k
                 call glutAddMenuEntry (vno(1:10),2*j + k)
                 i1 = i1 + 1
               endif
             enddo
             if (j .ge. nhtstr(2,filndx(8))) exit lp6
             jx = jx + 1
             j = j + 1
             if (i1 .ge. 39) exit
           enddo
         i = i + 1
         enddo lp6
         fhsnum = i
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titleh2(32:33),"(i2)") i
           call glutAddSubMenu (titleh2,fhsmenu(i))
         enddo
!  Heat structure mesh temperatures--first menu.
       case (555)
         fhsnum = (nhtstr(2,filndx(8)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         jx = filndx(8)
         j = 1
         lp7: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             is = ihtptr(2,jx) + filndx(8)
             write (vno,"(i8.7,'nn')") htstno(2,is)
             call glutAddMenuEntry (vno(1:10),j)
             if (j .ge. nhtstr(2,filndx(8))) exit lp7
             jx = jx + 1
             j = j + 1
           enddo
         enddo lp7
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titleh(24:25),"(i2)") i
           call glutAddSubMenu (titleh,fhsmenu(i))
         enddo
!  Heat structure mesh temperatures--second menu.
       case (570)
         fhsnum = (nwmeshpts + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp8: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vnohold(9:10),"(i2.2)") j
             call glutAddMenuEntry (vnohold(1:10),j)
             if (j .ge. nwmeshpts) exit lp8
             j = j + 1
           enddo
         enddo lp8
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titleh3(29:30),"(i2)") i
           call glutAddSubMenu (titleh3,fhsmenu(i))
         enddo
!  Get numbers for watch command for hydrodynamic quantities.
       case (601:636)
         fhsnum = (ncmps(2,filndx(3)) + 39)/40
         allocate (fhsmenu(0:fhsnum))
         anysw = .false.
         jx = filndx(3)
         j = 1
         i = 1
         lp9: do
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           i1 = 1
           do
             select case (fhoption)
!  Accumulator.
             case (606:610,620:630)
               sw = cmptyp(2,jx) .eq. 13
!  Pressurizer.
             case (615)
               sw = cmptyp(2,jx) .eq. 17
!  Pump.
             case (601:603,616:617)
               sw = cmptyp(2,jx) .eq. 4
!  Separator.
             case (631:636)
               sw = cmptyp(2,jx) .eq. 8
!  Turbine.
             case (611:614)
               sw = cmptyp(2,jx) .eq. 14
!  Valve.
             case (604:605,618:619)
               sw = cmptyp(2,jx) .eq. 12
             case default
               sw = .false.
             end select
             if (sw) then
               write (vno(1:4),"(i4.3)") cmpnum(2,jx)
               call glutAddMenuEntry (vno(1:4),cmpnum(2,jx))
               i1 = i1 + 1
               anysw = .true.
             endif
             if (j .ge. ncmps(2,filndx(3))) exit lp9
             jx = jx + cmplen(2,jx)
             j = j + 1
             if (i1 .ge. 40) exit
           enddo
           i = i + 1
         enddo lp9
         fhsnum = i
         if (.not.anysw) call glutAddMenuEntry ('None',1000000)
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlec(31:33),"(i2)") i
           call glutAddSubMenu (titlec,fhsmenu(i))
         enddo
!  Scdap variables with jj (for component) parameters.
       case (701:707)
         fhsnum = (ncomp + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp10: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i3.2)") scd1(j)%cmpno
             call glutAddMenuEntry (vno(1:3),j)
             if (j .ge. ncomp) exit lp10
             j = j + 1
           enddo
         enddo lp10
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titles(26:27),"(i2)") i
           call glutAddSubMenu (titles,fhsmenu(i))
         enddo
!  Scdap variables with kkjj (for component/axial) parameters.
       case (708,710:734)
         fhsnum = (ncomp*naz + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         k = 1
         lp11: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             jx = scd1(j)%cmpno + 100*k
             write (vno,"(i5.4)") jx
             call glutAddMenuEntry (vno(1:5),jx)
             k = k + 1
             if (k .gt. naz) then
               if (j .ge. ncomp) exit lp11
               j = j + 1
               k = 1
             endif
           enddo
         enddo lp11
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titles1(31:32),"(i2)") i
           call glutAddSubMenu (titles1,fhsmenu(i))
         enddo
!  Scdap variables with kkjj (for component-specie) parameters.
       case (709)
         fhsnum = (ncomp*17 + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         k = 1
         lp12: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             jx = scd1(j)%cmpno + 100*k
             write (vno,"(i5.4)") jx
             call glutAddMenuEntry (vno(1:5),jx)
             k = k + 1
             if (k .gt. 17) then
               if (j .ge. ncomp) exit lp12
               j = j + 1
               k = 1
             endif
           enddo
         enddo lp12
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titles2(35:36),"(i2)") i
           call glutAddSubMenu (titles2,fhsmenu(i))
         enddo
!  Scdap variables with iikkjj (for component-axial-mesh) parameters.
       case (735)
         fhsnum = (ncomp*naz + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         k = 1
         lp13: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             jx = scd1(j)%cmpno + 100*k
             write (vno,"('ii',i5.4)") jx
             call glutAddMenuEntry (vno(1:7),jx)
             k = k + 1
             if (k .gt. naz) then
               if (j .ge. ncomp) exit lp13
               j = j + 1
               k = 1
             endif
           enddo
         enddo lp13
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titles2(35:36),"(i2)") i
           call glutAddSubMenu (titles2,fhsmenu(i))
         enddo
!  Get number data for watch command for Couple creep rupture.
       case (736)
         fhsnum = (nrlhmx + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp14: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             jx = scd1(j)%cmpno + 100*j
             write (vno,"(i3.2)") j
             call glutAddMenuEntry (vno(1:3),j)
             if (j .ge. nrlhmx) exit lp14
             j = j + 1
           enddo
         enddo lp14
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titler1(34:35),"(i2)") i
           call glutAddSubMenu (titler1,fhsmenu(i))
         enddo
!  Get number data for watch command for Relap5 creep rupture.
       case (737)
         fhsnum = (nrlcmx + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp15: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             jx = scd1(j)%cmpno + 100*j
             write (vno,"(i3.2)") j
             call glutAddMenuEntry (vno(1:3),j)
             if (j .ge. nrlcmx) exit lp15
             j = j + 1
           enddo
         enddo lp15
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titler2(34:35),"(i2)") i
           call glutAddSubMenu (titler1,fhsmenu(i))
         enddo
!  Get number data for watch command for Scdap component-axial-mesh
!  temperatures.
       case (799)
         fhsnum = (nwmeshpts + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp16: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vnohold(2:3),"(i2.2)") j
             call glutAddMenuEntry (vnohold(1:7),j)
             if (j .ge. nwmeshpts) exit lp16
             j = j + 1
           enddo
         enddo lp16
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titleh3(29:30),"(i2)") i
           call glutAddSubMenu (titleh3,fhsmenu(i))
         enddo
!  Get number data for watch command for Couple node oriented
!  quantities.
       case (829)
         fhsnum = (cplmaxnp + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp17: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i4.3)") j
             call glutAddMenuEntry (vno(1:4),j)
             if (j .ge. cplmaxnp) exit lp17
             j = j + 1
           enddo
         enddo lp17
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titler1(21:22),"(i2)") i
           call glutAddSubMenu (titlel1,fhsmenu(i))
         enddo
!  Get number data for fission product in Couple mesh--first menu.
       case (830)
         fhsnum = (nspdeb + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp18: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i3.2)") iafp(2,iptspl+j-1)
             call glutAddMenuEntry (vno(1:3),iafp(2,iptspl+j-1))
             if (j .ge. nspdeb) exit lp18
             j = j + 1
           enddo
         enddo lp18
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titler1(32:33),"(i2)") i
           call glutAddSubMenu (titlel2,fhsmenu(i))
         enddo
!  Get number data for watch command for Couple element oriented
!  quantities.
       case (831:836)
         fhsnum = (cplmaxnp + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp19: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vno,"(i3.2)") j
             call glutAddMenuEntry (vno(1:3),j)
             if (j .ge. cplmaxnp) exit lp19
             j = j + 1
           enddo
         enddo lp19
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titler1(24:25),"(i2)") i
           call glutAddSubMenu (titlel3,fhsmenu(i))
         enddo
       case (837:839)
         fhsnum = (ncev + 39)/40
         allocate (fhsmenu(0:fhsnum))
         anysw = .false.
         j = 1
         i = 1
         lp20: do
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           i1 = 1
           do
             if (iafp(2,iptihs+j-1) .eq. j) then
               if ((fhoption.eq.837 .and. iafp(2,i44+j-1).ge.0) .or.
     &         (fhoption.eq.838 .and. iafp(2,i44+j-1).lt.0)) then
                 write (vno(1:6),"(i6.5)") j*100 + 1
                 call glutAddMenuEntry (vno(1:6),j)
                 i1 = i1 + 1
                 anysw = .true.
               endif
             endif
             if (j .ge. ncev) exit lp20
             j = j + 1
             if (i1 .ge. 40) exit
           enddo
           i = i + 1
         enddo lp20
         fhsnum = i
         if (.not.anysw) call glutAddMenuEntry ('None',1000000)
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titlel4(30:31),"(i2)") i
           call glutAddSubMenu (titlel4,fhsmenu(i))
         enddo
!  Get number data for fission product in Couple mesh--second menu.
       case (899)
         fhsnum = (nwmeshpts + 39)/40
         allocate (fhsmenu(0:fhsnum))
         j = 1
         lp22: do i = 1,fhsnum
           fhsmenu(i) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vnohold(2:3),"(i2.2)") j
             call glutAddMenuEntry (vnohold(1:7),j)
             if (j .ge. nwmeshpts) exit lp22
             j = j + 1
           enddo
         enddo lp22
         fhsmenu(0) = glutCreateMenu (handlemenu3)
         do i = 1,fhsnum
           write (titleh3(29:30),"(i2)") i
           call glutAddSubMenu (titleh3,fhsmenu(i))
         enddo
       case (10000)
         j = 1
         jx = filndx(27)
         select case (cnvnum(2,jx))
         case (1:40)
           fhsnum = 0
           allocate (fhsmenu(0:0))
           fhsmenu(0) = glutCreateMenu (handlemenu3)
           do i1 = 1,40
             write (vnoc(1:15),"(i5.4,2x,a8)") cnvpnm(2,jx),
     &       cnvnam(jx)
             call glutAddMenuEntry (vnoc(1:15),cnvpnm(2,jx))
             if (j .ge. cnvnum(2,filndx(27))) exit
             j = j + 1
             jx = jx + cnvlen(2,jx)
           enddo
         case (41:1600)
           fhsnum = (cnvnum(2,jx) + 39)/40
           allocate (fhsmenu(0:fhsnum),snum(fhsnum))
           lp23: do i = 1,fhsnum
             fhsmenu(i) = glutCreateMenu (handlemenu3)
             do i1 = 1,40
               write (vnoc(1:15),"(i5.4,2x,a8)") cnvpnm(2,jx),
     &         cnvnam(jx)
               call glutAddMenuEntry (vnoc(1:15),cnvpnm(2,jx))
               snum(i) = cnvpnm(2,jx)
               if (j .ge. cnvnum(2,filndx(27))) exit lp23
               j = j + 1
               jx = jx + cnvlen(2,jx)
             enddo
           enddo lp23
           fhsmenu(0) = glutCreateMenu (handlemenu3)
           do i = 1,fhsnum
             write (titlec2(27:30),"(i4.4)") snum(i)
             call glutAddSubMenu (titlec2,fhsmenu(i))
           enddo
           deallocate (snum)
         case default
           fhsnum = (cnvnum(2,jx) + 39)/40
           fhsnum2 = (fhsnum + 39)/40
           allocate (fhsmenu(-fhsnum2:fhsnum),snum(fhsnum))
           lp24: do i = 1,fhsnum
             fhsmenu(i) = glutCreateMenu (handlemenu3)
             do i1 = 1,40
               write (vnoc(1:15),"(i5.4,2x,a8)") cnvpnm(2,jx),
     &         cnvnam(jx)
               call glutAddMenuEntry (vnoc(1:15),cnvpnm(2,jx))
               snum(i) = cnvpnm(2,jx)
               if (j .ge. cnvnum(2,filndx(27))) exit lp24
               j = j + 1
               jx = jx + cnvlen(2,jx)
             enddo
           enddo lp24
           j = 1
           lp25: do i = 1,fhsnum2
             fhsmenu(-i) = glutCreateMenu (handlemenu3)
             do i1 = 1,40
               write (titlec2(27:30),"(i4.4)") snum(j)
               call glutAddSubMenu (titlec2,fhsmenu(j))
               j = j + 1
               if (j .gt. fhsnum) exit lp25
             enddo
           enddo lp25
           fhsmenu(0) = glutCreateMenu (handlemenu3)
           j = 40
           do i = 1,fhsnum2
             write (titlec2(27:30),"(i4.4)") snum(j)
             call glutAddSubMenu (titlec2,fhsmenu(-i))
             j = min(j + 40,fhsnum)
           enddo
           deallocate (snum)
         end select
       end select
       call glutAttachMenu (GLUT_RIGHT_BUTTON)
       if (gtype) then
         if (runflg .eq. 1) call glutIdleFunc (guirun)
       endif
       return
       end subroutine fhnumbers
!
       subroutine reshapew3 (w,h)
$if -def,ifortc,2
       use opengl_glut
       use opengl_gl
$if def,ifortc,2
       use ifopngl
       use opengl_glut
       use hynmod
       implicit none
       integer w,h
!
       windw3w = w
       windw3h = h
       call fglViewPort (0,0,w,h)
       call glutPostRedisplay
       end subroutine reshapew3
$endif
$if -def,gui,1
       end subroutine fhnumbers
