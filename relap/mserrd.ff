       module mserrd
!  Set storage for debugging of mass error problem.
!
       integer, parameter, private :: kr=selected_real_kind(12,200)
       type masserr
         real(kr) drfdp(0:2),drfduf(0:2),drgdp(0:2),drgdug(0:2),
     &   dtdp(0:2),dtdug(0:2),dtdxa(0:2),dtfdp(0:2),dtfduf(0:2),
     &   dtgdp(0:2),dtgdug(0:2),dtgdxa(0:2),dttdp(0:2),p(0:2),pps(0:2),
     &   quala(0:2),rho(0:2),rhom(0:2),rhof(0:2),rhog(0:2),tempf(0:2),
     &   tempg(0:2),tsat(0:2),tsatt(0:2),uf(0:2),ug(0:2),voidf(0:2),
     &   voidg(0:2)
       end type masserr
       integer, parameter :: msdbvols=1
       type (masserr) ms(msdbvols)
       integer idbx
       integer volidxm(msdbvols),volnom(msdbvols),volsysm(msdbvols)
       logical :: msfind=.false.,msfindo=.false.
       data volnom/230010000/
       end module mserrd
