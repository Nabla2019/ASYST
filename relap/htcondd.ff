*mlist
       subroutine htcondd (hindex,index,initem,initnn,
     & time,dtime,probid)
$if def,makemap
c
c
c  This subroutine controls the iteration of the heat structure
c  calculation for generating the surface maps.
c
c  probid = heat structure number
c
c  Cognizant engineer: gam, ras
c
       implicit none
       include 'fast.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'htscr.h'
       include 'htsrcm.h'
       include 'htrcom.h'
       include 'jundat.h'
       include 'makmap.h'
       include 'statec.h'
       include 'stcblk.h'
       include 'stcom.h'
       include 'tsctlc.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables.
c
      integer NODOS
c      number nested do loops in this driver
      parameter(NODOS=9)
      integer probid,initem,initnn,index
      character*80 titl(9)
      real time,dtime
      integer iiht, iivol, check
      real tmeht
      real hfsubc, hgsatc
      integer jjj, nfix(NODOS)
      integer i, modtw
      integer ii1, ii2, ii3, ii4, ii5, ii6, ii7, ii8, ii9
      integer idie, zlabel
      integer hindex, leftrt
      real xstrt(NODOS), xstop(NODOS), xdelta(NODOS)
      real zout,zmin,zmax,enmix,envap,xflow
      real tsubvar,voidgtemp
      integer jj,nn
      integer ist, npts(2)
      real strstp(2,2)
      character*15 labels(2),names(NODOS+1)
      character*40 labelz, znames(36)
      data check /1/
      data tsubvar /0.0/
      data zmin /1.0e+30/, zmax /-1.0e+30/
      data names /'Press (MPa)',
     &            'void \a_g',
     &            'uf (J/kg)',
     &            'ug (J/kg)',
     &            'Xa',
     &            'velf (m/s)',
     &            'velg (m/s)',
     &            'T_f-T_s_a_t (K)',
     &            'T_w-T_s_a_t (K)',
     &            'T_w_a_l_l (K)'/
      data znames /'extv01', 'extv02', 'extv03', 'extv04', 'extv05',
     &             'extv06', 'extv07', 'extv08', 'extv09', 'extv10',
     &             'extv11', 'extv12', 'extv13', 'extv14', 'extv15',
     &             'extv16', 'extv17', 'extv18', 'extv19', 'extv20',
     &             'q_w_a_l_l(total) (MW/m^2)',
     &             'h total (W/m^2-K)',
     &             'h liq (W/m^2-K)',
     &             'h vap (W/m^2-K)',
     &             'htmode',
     &             'CHF (MW/m^2)',
     &             'CHF-mul',
     &             'gamma wall (kg/m^3-s)',
     &             'gamma wall mult f',
     &             'gamma wall mult g',
     &             'q_w_a_l_l(liq) (MW/m^2)',
     &             'q_w_a_l_l(gas) (MW/m^2)',
     &             'h liq ref-liq (W/m^2)',
     &             'h liq ref-tsatt (W/m^2)',
     &             'h gas ref-gas (W/m^2)',
     &             'h gas ref-satt (W/m^2)'/
c
c
c  get heat slab index, volume index, and two junction indices
        leftrt = target - 100*htstno(hindex)
c  Which wall temperature is the one we will vary?
        if (leftrt .eq. 0) then
          modtw = initem
        else
          modtw = initnn
        endif
        iivol = htbvo(hindex+leftrt)
        if (iivol .eq. 0) then
          print *,' No volume connected to heat slab, no map generated'
          go to 990
        endif
c  Assure proper steam tables are used.
        if (volmat(iivol) .ne. nfluid) call stcset (volmat(iivol))
c
$if def,extv20
c  initialize the extra variables
        extv01(iivol) = 0.0
        extv02(iivol) = 0.0
        extv03(iivol) = 0.0
        extv04(iivol) = 0.0
        extv05(iivol) = 0.0
        extv06(iivol) = 0.0
        extv07(iivol) = 0.0
        extv08(iivol) = 0.0
        extv09(iivol) = 0.0
        extv10(iivol) = 0.0
        extv11(iivol) = 0.0
        extv12(iivol) = 0.0
        extv13(iivol) = 0.0
        extv14(iivol) = 0.0
        extv15(iivol) = 0.0
        extv16(iivol) = 0.0
        extv17(iivol) = 0.0
        extv18(iivol) = 0.0
        extv19(iivol) = 0.0
        extv20(iivol) = 0.0
$endif
c  print out the initial values
        print *,'ncount    ',ncount        ,' timeht    ',tmeht
        print *,'targ ht st',htstno(hindex),' index     ',iiht
        print *,'targ vol  ',volno(iivol)  ,' index     ',iivol
        print *,'pressure  ',p(iivol)
        print *,'voidg     ',voidg(iivol)
        print *,'uf        ',uf(iivol)
        print *,'ug        ',ug(iivol)
        print *,'quala     ',quala(iivol)
        print *,'tempf     ',tempf(iivol)
        print *,'tempg     ',tempg(iivol)
        print *,'satt      ',satt(iivol)
        print *,'tsatt     ',tsatt(iivol)
crex    print *,'tempf-satt',(hvmix(iivol)-sathf(iivol))/csubpf(iivol)
        print *,'tempf-satt',tempf(iivol)-satt(iivol)
        print *,'hif       ',hif(iivol)
        print *,'hig       ',hig(iivol)
        print *,'velf in  ',velf(iivol)
        print *,'velg in  ',velg(iivol)
        print *,'qwall     ',htrnro(hindex+leftrt)
        print *,'hliq      ',htcffo(hindex+leftrt)
        print *,'hgas      ',htcfgo(hindex+leftrt)
        print *,'mode      ',htmod(hindex+leftrt)
c
        tw    =   httmp(modtw)
        print *,'tw        ',tw
c
      open (unit = 36,file='htmap.inp',status='old')
c
      do jjj = 1,NODOS
         read(36,*) nfix(jjj)
         read(36,*) xstrt(jjj)
         read(36,*) xstop(jjj)
      enddo
c
      read(36,*) zlabel
      read(36,*) idie
      close(36)
c
c  get the labels and limits for the plot
c  the first variable goes with the y-axis and second goes with x-axis
      ist = 0
      do 16 i = 1,NODOS
        if (nfix(i) .gt. 1) then
          ist = ist + 1
          labels(ist) = names(i)
          strstp(1,ist) = xstrt(i)
          strstp(2,ist) = xstop(i)
          npts(ist) = nfix(i)
          if (i .eq. 1) then
            strstp(1,ist) = xstrt(i)*1.e-6
            strstp(2,ist) = xstop(i)*1.e-6
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          endif
        elseif (nfix(i) .lt. 1) then
          ist = ist + 1
          labels(ist) = names(i)
          if (i .eq. 1) then
            strstp(1,ist) = max(0.0,xstrt(i)*p(iivol))*1.e-6
            strstp(2,ist) = xstop(i)*p(iivol)*1.e-6
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 2) then
            strstp(1,ist) = max(0.0,xstrt(i)*voidg(iivol))
            strstp(2,ist) = min(1.0,xstop(i)*voidg(iivol))
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 3) then
            strstp(1,ist) = max(0.0,xstrt(i)*uf(iivol))
            strstp(2,ist) = xstop(i)*uf(iivol)
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 4) then
            strstp(1,ist) = max(0.0,xstrt(i)*ug(iivol))
            strstp(2,ist) = xstop(i)*ug(iivol)
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 5) then
            strstp(1,ist) = max(0.0,xstrt(i)*quala(iivol))
            strstp(2,ist) = min(1.0,xstop(i)*quala(iivol))
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 6) then
            strstp(1,ist) = xstrt(i)*velf(iivol)
            strstp(2,ist) = xstop(i)*velf(iivol)
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 7) then
            strstp(1,ist) = xstrt(i)*velg(iivol)
            strstp(2,ist) = xstop(i)*velg(iivol)
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 8) then
            strstp(1,ist) = xstrt(i)
     &                    * (hvmix(iivol)-sathf(iivol))/csubpf(iivol)
            strstp(2,ist) = xstop(i)
     &                    * (hvmix(iivol)-sathf(iivol))/csubpf(iivol)
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          elseif (i .eq. 9) then
            strstp(1,ist) = xstrt(i)*tw
            strstp(2,ist) = xstop(i)*tw
            xstrt(i) = strstp(1,ist)
            xstop(i) = strstp(2,ist)
          endif
          nfix(i) = abs(nfix(i))
          npts(ist) = nfix(i)
        endif
        if (ist .eq. 2) go to 17
  16  continue
c
  17  continue
      if (nfix(9) .gt. 1) then
        if (nfix(1) .gt. 1 .or. nfix(5) .gt. 1)
     &        labels(2) = names(NODOS+1)
      endif
      labelz = znames(zlabel)
       print *,'zlabel =',zlabel
c
      open (unit = 36,file='map.dat',status='unknown')
c  write out axis label, min, max values and z axis label
c
        write(36,*) labels(2)
        if (nfix(9) .gt. 1 .and. nfix(1)*nfix(5) .eq. 1) then
          write(36,*) strstp(1,2) - satt(iivol)
          write(36,*) strstp(2,2) - satt(iivol)
        else
          write(36,*) strstp(1,2)
          write(36,*) strstp(2,2)
        endif
        write(36,*) npts(2)
        write(36,*) labels(1)
        write(36,*) strstp(1,1)
        write(36,*) strstp(2,1)
        write(36,*) npts(1)
c
      if (nfix(1) .gt. 1) then
         xdelta(1) = 1.e6*(xstop(1)-xstrt(1))/float(nfix(1)-1)
         p(iivol) = 1.e6*xstrt(1) - xdelta(1)
         po(iivol) = p(iivol)
      else
         xdelta(1) = 0.0
      endif
c
      do 80 ii1 = 1,nfix(1)
c
         p(iivol) = p(iivol) + xdelta(1)
         po(iivol) = p(iivol)
c
         if (nfix(2) .gt. 1) then
            xdelta(2) = (xstop(2)-xstrt(2))/float(nfix(2)-1)
            voidg(iivol) = xstrt(2) - xdelta(2)
            voidf(iivol) = 1.0 - voidg(iivol)
            voidgo(iivol) = voidg(iivol)
         else
            xdelta(2) = 0.0
         endif
c
         do 70 ii2 = 1,nfix(2)
c
            voidg(iivol) = voidg(iivol) + xdelta(2)
            voidf(iivol) = 1.0 - voidg(iivol)
            voidgo(iivol) = voidg(iivol)
c
            if (nfix(3) .gt. 1) then
               xdelta(3) = (xstop(3)-xstrt(3))/float(nfix(3)-1)
               uf(iivol) = xstrt(3) - xdelta(3)
               ufo(iivol) = uf(iivol)
            else
               xdelta(3) = 0.0
            endif
c
            do 60 ii3 = 1,nfix(3)
c
               uf(iivol) = uf(iivol) + xdelta(3)
               ufo(iivol) = uf(iivol)
c
               if (nfix(4) .gt. 1) then
                  xdelta(4) = (xstop(4)-xstrt(4))/float(nfix(4)-1)
                  ug(iivol) = xstrt(4) - xdelta(4)
                  ugo(iivol) = ug(iivol)
               else
                  xdelta(4) = 0.0
               endif
c
               do 50 ii4 = 1,nfix(4)
c
                  ug(iivol) = ug(iivol) + xdelta(4)
                  ugo(iivol) = ug(iivol)
c
                  if (nfix(5) .gt. 1) then
                     xdelta(5) =
     &                 (xstop(5)-xstrt(5))/float(nfix(5)-1)
                     quala(iivol) = xstrt(5) - xdelta(5)
                     qualao(iivol) = quala(iivol)
                  else
                     xdelta(5) = 0.0
                  endif
c
                  do 40 ii5 = 1,nfix(5)
c
                     if (noncn .eq. 0 .and. nfix(5) .gt. 1) then
                        stop 'htcondd-1, NC case. Add 110 card in R5 inp
     &ut deck.'
                     endif
                     quala(iivol) = quala(iivol) + xdelta(5)
                     qualao(iivol) = quala(iivol)
c
c  reset qualan and qualno in case the problem was not initialized
c  with air in the volume
c
                     nn = iivol
                     do 41 jj = 1,noncn
                       qualan(nn) = qn(jj)
                       qualno(nn) = qn(jj)
                       nn = nn + 1
   41                continue
c
                     if (nfix(6) .gt. 1) then
                        xdelta(6) =
     &                    (xstop(6)-xstrt(6))/float(nfix(6)-1)
                        velf(iivol) = xstrt(6) - xdelta(6)
                        velfo(iivol) = velf(iivol)
                     else
                        xdelta(6) = 0.0
                     endif
c
                     do 30 ii6 = 1,nfix(6)
c
                        velf(iivol) = velf(iivol) + xdelta(6)
                        velfo(iivol) = velf(iivol)
c
                        if (nfix(7) .gt. 1) then
                           xdelta(7) =
     &                       (xstop(7)-xstrt(7))/float(nfix(7)-1)
                           velg(iivol) = xstrt(7) - xdelta(7)
                           velgo(iivol) = velg(iivol)
                        else
                           xdelta(7) = 0.0
                        endif
c
                        do 20 ii7 = 1,nfix(7)
c
                           velg(iivol) = velg(iivol) + xdelta(7)
                           velgo(iivol) = velg(iivol)
c
                           if (nfix(8) .gt. 1) then
                              xdelta(8) =
     &                           (xstop(8)-xstrt(8))/float(nfix(8)-1)
                              tsubvar = xstrt(8) - xdelta(8)
                           else
                              xdelta(8) = 0.0
                           endif
c
                           do 10 ii8 = 1, nfix(8)
c
                             voidgtemp = voidg(iivol)
c
                             if (xdelta(8) .gt. 0.0) then
                               call stateq(iivol)
                               tsubvar = tsubvar + xdelta(8)
                               hfsubc = sathf(iivol) + csubpf(iivol)
     &                             *tsubvar
                               hgsatc  = sathg(iivol)
                               uf(iivol) = hfsubc - p(iivol)/rhof(iivol)
                               ufo(iivol) = uf(iivol)
                               ug(iivol) = hgsatc - p(iivol)/rhog(iivol)
                               ugo(iivol) = ug(iivol)
                             endif
c
                             call stateq(iivol)
c
c  restore voidg because stateq may be looking up liquid or gas
c  properties when there is a mixture present and reset voidg = 0 or 1
c
                             voidg(iivol) = voidgtemp
cgam
c
                        if (nfix(9) .gt. 1) then
                           xdelta(9) =
     &                       (xstop(9)-xstrt(9))/float(nfix(9)-1)
                           httmp(modtw) = xstrt(9) - xdelta(9)
                        else
                           xdelta(9) = 0.0
                        endif
c
                        do 5 ii9 = 1,nfix(9)
c
                           httmp(modtw) = httmp(modtw)
     &                                          +xdelta(9)
c
c       extv01(iivol) = iiht
c       extv02(iivol) = timeht
c       extv03(iivol) = dtht
c       extv04(iivol) = tempf(iivol)
c       extv05(iivol) = satt(iivol)
c       extv06(iivol) = sathf(iivol)
c       extv07(iivol) = sathg(iivol)
cgam
crex  Recalculate quale since many variables may have been changed recen
        enliq = uf(iivol) + p(iivol)/rhof(iivol)
c  Recalculate quale for CHFCAL based on total pressure.
c  Minimun velocity use 1 cm/sec to obtain flow quality.
c  Calculate flow quality first.
       ggas(iivol) = voidg(iivol)*rhog(iivol)*velg(iivol)
       gliq(iivol) = voidf(iivol)*rhof(iivol)*velf(iivol)
       ggasa = abs(ggas(iivol))
       ggasa = max(ggasa,0.001)
       gliqa = abs(gliq(iivol))
       gliqa = max(gliqa,0.001)
       xflow = (ggasa + 0.01*voidg(iivol)*rhog(iivol)*avol(iivol))/
     &             (ggasa + gliqa + 0.01*rho(iivol)*avol(iivol))
       envap = ug(iivol) + p(iivol)/rhog(iivol)
         if (p(iivol) .lt. pcrit) then
           enmix = enliq + xflow*(envap - enliq)
           quale(iivol) = (enmix - sathf(iivol))/(sathg(iivol) -
     &                                            sathf(iivol))
         else
           quale(iivol) = quals(iivol)
         endif
crex
            call htcond (hindex,index,initem,initnn,
     &                   time,dtime,probid)
        tw    =   httmp(modtw)
c
c
                             if (zlabel .eq. 1) then
                                zout = extv01(iivol)
                             elseif (zlabel .eq. 2) then
                                zout = extv02(iivol)
                             elseif (zlabel .eq. 3) then
                                zout = extv03(iivol)
                             elseif (zlabel .eq. 4) then
                                zout = extv04(iivol)
                             elseif (zlabel .eq. 5) then
                                zout = extv05(iivol)
                             elseif (zlabel .eq. 6) then
                                zout = extv06(iivol)
                             elseif (zlabel .eq. 7) then
                                zout = extv07(iivol)
                             elseif (zlabel .eq. 8) then
                                zout = extv08(iivol)
                             elseif (zlabel .eq. 9) then
                                zout = extv09(iivol)
                             elseif (zlabel .eq. 10) then
                                zout = extv10(iivol)
                             elseif (zlabel .eq. 11) then
                                zout = extv11(iivol)
                             elseif (zlabel .eq. 12) then
                                zout = extv12(iivol)
                             elseif (zlabel .eq. 13) then
                                zout = extv13(iivol)
                             elseif (zlabel .eq. 14) then
                                zout = extv14(iivol)
                             elseif (zlabel .eq. 15) then
                                zout = extv15(iivol)
                             elseif (zlabel .eq. 16) then
                                zout = extv16(iivol)
                             elseif (zlabel .eq. 17) then
                                zout = extv17(iivol)
                             elseif (zlabel .eq. 18) then
                                zout = extv18(iivol)
                             elseif (zlabel .eq. 19) then
                                zout = extv19(iivol)
                             elseif (zlabel .eq. 20) then
                                zout = extv20(iivol)
                             elseif (zlabel .eq. 21) then
                                zout = htbcco(hindex+leftrt)*1.e-6
                             elseif (zlabel .eq. 22) then
                                zout = htbcao(hindex+leftrt)
                             elseif (zlabel .eq. 23) then
                                zout = htcffo(hindex+leftrt)
                             elseif (zlabel .eq. 24) then
                                zout = htcfgo(hindex+leftrt)
                             elseif (zlabel .eq. 25) then
                                zout = htmod(hindex+leftrt)
                             elseif (zlabel .eq. 26) then
                                zout = htchfo(hindex+leftrt)*1.e-6
                             elseif (zlabel .eq. 27) then
                                zout = chfmuo(hindex+leftrt)
                             elseif (zlabel .eq. 28) then
                                zout = htrfno(hindex+leftrt)
                             elseif (zlabel .eq. 29) then
                                zout = htgsmf(index+leftrt)
                             elseif (zlabel .eq. 30) then
                                zout = htgsmg(index+leftrt)
                             elseif (zlabel .eq. 31) then
                                zout = htqosf(index+leftrt)*1.e-6
                             elseif (zlabel .eq. 32) then
                                zout = htqosg(index+leftrt)*1.e-6
                             elseif (zlabel .eq. 33) then
                                zout = hthhff(index+leftrt)
                             elseif (zlabel .eq. 33) then
                                zout = hthhft(index+leftrt)
                             elseif (zlabel .eq. 34) then
                                zout = hthhgp(index+leftrt)
                             endif
                             write(36,*) zout
                             zmax = max(zmax,zout)
                             zmin = min(zmin,zout)
c
    5                          continue
   10                        continue
   20                   continue
   30                continue
   40             continue
   50          continue
   60       continue
   70    continue
   80 continue
c
         titl(1) = ''
         titl(2) = ''
         titl(3) = ''
         titl(4) = ''
         titl(5) = ''
         titl(6) = ''
         titl(7) = ''
         titl(8) = ''
         titl(9) = ''
c
c  write out z axis label, min, and max values
         write(36,*) labelz
         write(36,*) zmin
         write(36,*) zmax
c
         ist = 0
         do i=1,9
           if (nfix(i) .gt. 1) then
             ist = ist + 1
             write(titl(ist),798)
     &          'Axis',ist,' start=',xstrt(i),
     &          ', delta=',xdelta(i),
     &          ', stop=',xstop(i)
  798        format(a,i2,3(a,g12.4))
             write(36,'(a80)') titl(ist)
           endif
         enddo
c
         write(titl(3),801)
     &       'ncount: ',targcn,
     &       ' ht str: ',target,
     &       ' zmin: ',zmin,
     &       ' zmax: ',zmax
  801    format(a,i5,a,i9,a,g10.4,a,g10.4)
         write(36,'(a80)') titl(3)
c
         if (nfix(9) .gt. 1 .and. nfix(1)*nfix(5) .eq. 1) then
          write(titl(4),802)
     &          'Stop data for ',
     &          labels(1),
     &          strstp(2,1),
     &          ' and ',
     &          labels(2),
     &          strstp(2,2) - satt(iivol)
         else
          write(titl(4),802)
     &          'Stop data for ',
     &          labels(1),
     &          strstp(2,1),
     &          ' and ',
     &          labels(2),
     &          strstp(2,2)
         endif
  802    format(2(2a,g12.4))
c
         write(36,'(a80)') titl(4)
c
         write(titl(5),803)
     &       'Tw:',tw,
     &       ', Tsatt:',tsatt(iivol),
     &       ', satT:',satt(iivol)
  803    format(3(a,f10.3))
         write(36,'(a80)') titl(5)
c
         dtsat = tw - satt(iivol)
         write(titl(6),804)
     &       'Tf:',tempf(iivol),
     &       ', Tg:',tempg(iivol),
     &       ', dTsat:',dtsat
  804    format(3(a,f10.3))
         write(36,'(a80)') titl(6)
c
         mode = htmod(hindex+leftrt)
         gabs = abs(ggas(iivol) + gliq(iivol))
         htdiam = hthdmo(hindex+leftrt)
         if (mode .ne. 9 .and. mode .ne. 29 .and. mode .ne. 49
     &                   .and. mode .ne. 69) then
           rey = gabs*htdiam/viscf(iivol)
           pr  = viscf(iivol)*csubpf(iivol)/thconf(iivol)
         else
           rey = gabs*htdiam/viscg(iivol)
           pr  = viscg(iivol)*csubpg(iivol)/thcong(iivol)
         endif
c
         write(titl(7),805)
     &       'velf:',velf(iivol),
     &       ', velg:',velg(iivol),
     &       ', gabs:',gabs,
     &       ', rey:',rey,
     &       ' pr: ',pr
  805    format(1p,5(a,g10.1))
         write(36,'(a80)') titl(7)
c
         htlenc = htlncf(hindex+leftrt)
         write(titl(8),806)
     &       'htdiam: ',htdiam,
     &       ', htlenc: ',htlenc,
     &       ', p: ',p(iivol),
     &       ', htmode: ',mode
  806    format(1p,3(a,g9.3),a,i3)
         write(36,'(a80)') titl(8)
c
         write(titl(9),807)
     &       'quala: ',quala(iivol),
     &       ', quale: ',quale(iivol),
     &       ', voidg: ',voidg(iivol)
  807    format(3(a,f10.3))
         write(36,'(a80)') titl(9)
c
         close(36)
c
  990    if (idie .eq. 1) then
            done = -7
         endif
c
  999  continue
$endif
       return
       end
