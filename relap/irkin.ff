*mlist
       subroutine irkin
c
c  Cognizant engineer: rjw wlw.
c
c  Complete checking of reactor kinetic input, set pointers, and compute
c  bias reactivity.
c
       use gentblc
       implicit none
       include 'fast.h'
       include 'scntl.h'
       include 'scddat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'convarc.h'
       include 'htsrcm.h'
       include 'machls.h'
       include 'ndxara.h'
       include 'rkinc.h'
       include 'k3all.h'
       include 'k3point.h'
       include 'k3cc.h'
       include 'scdpow.h'
       include 'cpmdat.h'
       include 'coupl.h'
       include 'trpblk.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables.
       logical tfail
       integer isv(4)
       real arg(15)
       integer i,j,jd,ji,jp,jpp,jx,k,l,l1,lx,n
$if def,selap,1
       integer j2,j3
       real dr(1),te1,te2
       logical lrhst,lrhst1,err
$if def,selap,1
       logical lshst,lshst1,lchst,lchst1
       external polat
       include 'machlf.h'
c
       if (iand(rkopt(filndx(21)),128) .ne. 0) go to 300
c
       tfail = .false.
c  Check scram table reference and set pointers.
       j = filndx(21)
       jp = j + rksptr(j)
       do i = 1,rknsc(j)
         if (rknscr(jp) .lt. 1000) then
           if (ngtbls .eq. 0) then
             write (output,
     & "('0******** Scram table',i6,' specified in reactor kinetics data
     & but no general tables are entered.')")
     &       rknscr(jp)
             tfail = .true.
             rknscr(jp) = 0
             go to 19
           endif
           do k = 1,ngtbls
             if (rknscr(jp) .eq. gtnum(k)) go to 18
           enddo
           write (output,
     & "('0******** Reactor kinetics scram reference refers to non-exist
     &ent table number',i4,'.')")
     &     rknscr(jp)
           tfail = .true.
           rknscr(jp) = 0
           go to 19
   18      if (gen(k)%gttyp .eq. 0) then
             tfail = .true.
             rknscr(jp) = 0
             go to 19
           endif
           if (gen(k)%gttyp .ne. 6) then
             write (output,
     & "('0******** Reactor kinetics scram reference refers to a table',
     & i4,' which is not a scram table.')")
     &       rknscr(jp)
             tfail = .true.
             rknscr(jp) = 0
             go to 19
           endif
           rknscr(jp+1) = k
           go to 19
         else
           l = rknscr(jp) - 10000
           if (l.le.0 .or. l.ge.10000) then
             write (output,
     & "('0********',i6,' is an illegal scram or control variable number
     & in reactor kinetics data.')")
     &       rknscr(jp)
             tfail = .true.
             rknscr(jp) = 0
             go to 19
           endif
           jx = filndx(27)
           do k = 1,cnvnum(jx)
             if (l .eq. cnvpnm(jx)) go to 29
             jx = jx + cnvlen(jx)
           enddo
           write (output,2014) rknscr(jp),l
 2014  format ('0******** Reactor kinetics data contains a control varia
     &ble code',i5,' referring to control variable',i4,' which is not de
     &fined.')
           tfail = .true.
           rknscr(jp) = 0
           go to 19
   29      rknscr(jp+1) = jx - filndx(27)
         endif
   19    jp = jp + 2
       enddo
c  Check volume references and set pointers.
       if (rknvfb(j) .ne. 0) then
         if (iand(rkopt(j),32) .eq. 0) then
           if (rkdnpt(j) .eq. 0) then
             write (output,2004)
 2004  format ('0******** Reactor kinetic volume feedback entered but de
     &nsity feedback table not entered.')
             tfail = .true.
           endif
         endif
         if (filid(4) .eq. 0.0) then
           write (output,2005)
 2005  format ('0******** Reactor kinetics volume feedback data entered
     &but no volume data present.')
           tfail = .true.
         else
           jp = j + rknvfb(j+1)
           do k = 1,rknvfb(j)
             i = filndx(4)
             do l = 1,nvols(i)
               if (rkvoln(jp) .eq. volno(i)) go to 25
               i = i + ivskp
             enddo
             write (output,2006) rkvoln(jp)
 2006  format ('0******** Volume',i10.9,' in reactor kinetics feedback h
     &as not been defined.')
             tfail = .true.
             go to 26
   25        rkvoln(jp+1) = i - filndx(4)
   26        jp = jp + 5
           enddo
         endif
       endif
c  Check heat structure references and set pointers.
       if (rknsfb(j) .ne. 0) then
         ji = 3
         if (iand(rkopt(j),32) .eq. 0) then
           ji = 4
           if (rkdppt(j) .eq. 0) then
             write (output,2007)
 2007  format ('0******** Reactor kinetics heat structure feedback enter
     &ed but Doppler feedback table not entered.')
             tfail = .true.
           endif
         endif
         lrhst = .true.
         lrhst1 = .true.
$if def,selap,4
         lshst = .true.
         lshst1 = .true.
         lchst  = .true.
         lchst1 = .true.
         jp = j + rknsfb(j+1)
         do k = 1,rknsfb(j)
$if def,selap,1
           if (rkhtno(jp) .ge. 10000) then
             if (lrhst) then
               if (lrhst1) then
                 lrhst1 = .false.
                 if (filid(8) .eq. 0.0) then
                   write (output,2008)
 2008  format ('0******** Reactor kinetics heat structure feedback enter
     &ed but no heat structures present.')
                   tfail = .true.
                   lrhst = .false.
                   go to 46
                 endif
               endif
               lx = filndx(8)
               do i = 1,nhtstr(lx)
                 l1 = ihtptr(lx) + filndx(8)
                 if (rkhtno(jp) .eq. htstno(l1)) go to 45
                 lx = lx + 1
               enddo
               write (output,2009) rkhtno(jp)
 2009  format ('0******** Heat structure ',i9.7,' in reactor kinetics fe
     &edback has not been defined.')
               tfail = .true.
               go to 46
   45          tfail = tfail .or. iand(htopt(l1),2) .ne. 0
               rkhtno(jp+1) = locf(htvatp(l1)) - locf(fa(1)) + 1
             endif
$if def,selap
           elseif (rkhtno(jp) .lt. 100) then
             if (lchst) then
               if (lchst1) then
                 lchst1 = .false.
                 if (ncpmsh .le. 0) then
                   write (output,2021)
 2021  format ('0******** Couple feedback entered but problem has no Cou
     &ple meshes.')
                   tfail = .true.
                   lchst = .false.
                   go to 46
                 endif
               endif
               j2 = rkhtno(jp)
               if (j2.gt.0 .and. j2.le.ncpmsh) then
                 rkhtno(jp+1) = locf(tmpdav(j2)) - locf(fa(1)) + 1
                 go to 46
               endif
               write (output,2022) j3,j2
 2022  format ('0******** Couple mesh',i3,' has not been defined.')
               tfail = .true.
             endif
           else
             if (lshst) then
               if (lshst1) then
                 lshst1 = .false.
                 if (.not.scntrl(1)) then
                   write (output,2015)
 2015  format ('0******** Scdap component feedback entered but problem h
     &as no Scdap components.')
                   tfail = .true.
                   lshst = .false.
                   go to 46
                 endif
               endif
               j2 = rkhtno(jp)/100
               j3 = rkhtno(jp) - j2*100
               if (j3.gt.0 .and. j3.le.ncomp) then
                 if (j2.gt.0 .and. j2.le.naz) then
                   rkhtno(jp+1) = locf(stemav(j2,j3)) - locf(fa(1)) + 1
                   go to 46
                 endif
               endif
               write (output,2012) j3,j2
 2012  format ('0******** Scdap component',i3,' and axial level',i3,
     & ' has not been defined.')
               tfail = .true.
             endif
           endif
$endif
   46      jp = jp + ji
         enddo
       endif
c  Compute bias reactivity.
       fail = fail .or. tfail
       if (iand(rkopt(j),64) .eq. 0) go to 100
       rkopt(j) = iand(rkopt(j),not(64))
       if (tfail) go to 100
       rkro(j) = 0.0
c  Do scram curves.
       jp = j + rksptr(j)
       do i = 1,rknsc(j)
         if (rknscr(jp) .ne. 0) then
           if (rknscr(jp) .lt. 1000) then
             k = rknscr(jp+1)
             arg(1) = timehy
             if (gen(k)%gttrp(1) .ne. 0) arg(1) = -1.0
             call gtpolat (gen(k)%gtinfo,gtptr(k)%gtbl,arg(1),dr(1:1),
     &       err)
           else
             k = rknscr(jp+1) + filndx(27)
             dr(1) = cnvarn(k)
           endif
           rkro(j)  = rkro(j) + dr(1)
         endif
         jp = jp + 2
       enddo
c  Check if separable feedback or table feedback.
       if (iand(rkopt(j),32) .ne. 0) go to 71
c  Separable feedback.
c  Do volume feedback.
       if (rknvfb(j) .ne. 0) then
         jp = j + rknvfb(j+1)
         l = j + rkdnpt(j)
         do i = 1,rknvfb(j)
           k = rkvoln(jp+1) + filndx(4)
           call polat (rkdenr(l-3),rkdenr(l),rho(k),dr(1),err)
           te1 = voidf(k)*rhof(k)
           te2 = voidg(k)*rhog(k)
           rkro(j) = rkro(j) + rkvwf(jp)*dr(1) +
     &     rkvta(jp)*(te1*tempf(k) + te2*tempg(k))/(te1 + te2) +
     &     rkvbf(jp)*boron(k)
           jp = jp + 5
         enddo
       endif
c  Do heat structure feedback.
       if (rknsfb(j) .eq. 0) go to 67
       jp = j +  rknsfb(j+1)
       l = j + rkdppt(j)
       do i = 1,rknsfb(j)
         arg(1) = fa(rkhtno(jp+1))
         call polat (rkdopr(l-3),rkdopr(l),arg(1),dr(1),err)
         rkro(j) = rkro(j) + rkfwf(jp)*dr(1) + rkfta(jp)*arg(1)
         jp = jp + 4
       enddo
       go to 67
c  Table feedback.
   71  arg(1) = 0.0
       arg(2) = 0.0
       arg(4) = 0.0
       arg(8) = 0.0
c  Do volume averaging.
       if (rknvfb(j) .eq. 0) go to 100
       jp = j + rknvfb(j+1)
       if (iand(rkopt(j),512) .eq. 0) then
         do i = 1,rknvfb(j)
           k = rkvoln(jp+1) + filndx(4)
           arg(1) = arg(1) + rho(k)*rkvwf(jp)
           te1 = voidf(k)*rhof(k)
           te2 = voidg(k)*rhog(k)
           arg(2) = arg(2) + rkvwf(jp)*(te1*tempf(k) + te2*tempg(k))/
     &     (te1 + te2)
           arg(8) = arg(8) + boron(k)*rkvwf(jp)
           jp = jp + 5
         enddo
       else
         do i = 1,rknvfb(j)
           k = rkvoln(jp+1) + filndx(4)
           arg(1) = arg(1) + voidg(k)*rkvwf(jp)
           arg(2) = arg(2) + tempf(k)*rkvwf(jp)
           arg(8) = arg(8) + boron(k)/rhof(k)*rkvwf(jp)
           jp = jp + 5
         enddo
       endif
c  Do heat structure averaging.
       if (rknsfb(j) .eq. 0) go to 100
       jp = j + rknsfb(j+1)
       do i = 1,rknsfb(j)
         arg(4) = arg(4) + fa(rkhtno(jp+1))*rkfwf(jp)
         jp = jp + 3
       enddo
c  Search coordinate tables.
       jp = rkdnpt(j) + j
       k = rkdeni(jp) + j
       n = iand(ishft(rkopt(j),-2),7)
       isv(4) = 0
       jpp = 1
       do 80 i = 1,n
         l1 = rkdeni(jp+1) - 1
         isv(i) = -1
   82    if (rkdenr(jp+isv(i)+1) .lt. arg(jpp)) then
           isv(i) = isv(i) + 1
           if (isv(i) .lt. l1) go to 82
           isv(i) = isv(i) - 1
           arg(jpp) = 1.0
         else
           if (isv(i) .lt. 0) then
             isv(i) = 0
             arg(jpp) = 0.0
           else
             arg(jpp) = (arg(jpp) - rkdenr(jp+isv(i)))/
     &       (rkdenr(jp+isv(i)+1) - rkdenr(jp+isv(i)))
           endif
         endif
         jpp = jpp + jpp
         jp = jp + l1 + 4
   80  continue
       n = ishft(1,n)
       jpp = k + n
       l1 = rkdppt(j) + j + isv(1) + isv(2)*rknden(jpp+2) +
     & isv(3)*rknden(jpp+4) + isv(4)*rknden(jpp+8)
       rkfdcd(jpp) = ior(ior(ior(ishft(isv(1),24),ishft(isv(2),16)),
     & ishft(isv(3),8)),isv(4))
c  Compute interpolation elements.
       rkcoef(k) = rktabl(l1)
       rkcoef(k+1) = rktabl(l1+1) - rkcoef(k)
       rkcoef(k+2) = rktabl(l1+rknden(jpp+2)) - rkcoef(k)
       rkcoef(k+4) = rktabl(l1+rknden(jpp+4)) - rkcoef(k)
       rkcoef(k+3) = rktabl(l1+rknden(jpp+3)) - rkcoef(k+2) -
     & rktabl(l1+1)
       rkcoef(k+5) = rktabl(l1+rknden(jpp+5)) - rkcoef(k+4) -
     & rktabl(l1+1)
       rkcoef(k+6) = rktabl(l1+rknden(jpp+6)) - rkcoef(k+4) -
     & rktabl(l1+rknden(jpp+2))
       rkcoef(k+7) = rktabl(l1+rknden(jpp+7)) - rkcoef(k+6) -
     & rktabl(l1+rknden(jpp+3)) - rktabl(l1+rknden(jpp+5)) +
     & rktabl(l1+1)
       if (iand(rkopt(j),16) .ne. 0) then
         rkcoef(k+8) = rktabl(l1+rknden(jpp+8)) - rkcoef(k)
         rkcoef(k+9) = rktabl(l1+rknden(jpp+9)) - rkcoef(k+8) -
     &   rktabl(l1+1)
         rkcoef(k+10) = rktabl(l1+rknden(jpp+10)) - rkcoef(k+8) -
     &   rktabl(l1+rknden(jpp+2))
         rkcoef(k+12) = rktabl(l1+rknden(jpp+12)) - rkcoef(k+8) -
     &   rktabl(l1+rknden(jpp+4))
         rkcoef(k+11) = rktabl(l1+rknden(jpp+11)) - rkcoef(k+10) -
     &   rktabl(l1+rknden(jpp+9)) - rktabl(l1+rknden(jpp+3)) +
     &   rktabl(l1+1)
         rkcoef(k+13) = rktabl(l1+rknden(jpp+13)) - rkcoef(k+12) -
     &   rktabl(l1+rknden(jpp+9)) - rktabl(l1+rknden(jpp+5)) +
     &   rktabl(l1+1)
         rkcoef(k+14) = rktabl(l1+rknden(jpp+14)) - rkcoef(k+12) -
     &   rktabl(l1+rknden(jpp+10)) - rktabl(l1+rknden(jpp+6)) +
     &   rktabl(l1+rknden(jpp+2))
         rkcoef(k+15) = rktabl(l1+rknden(jpp+15)) - rkcoef(k+14) -
     &   rktabl(l1+rknden(jpp+13)) - rktabl(l1+rknden(jpp+11)) +
     &   rktabl(l1+rknden(jpp+9)) - rktabl(l1+rknden(jpp+7)) +
     &   rktabl(l1+rknden(jpp+5)) + rktabl(l1+rknden(jpp+3)) -
     &   rktabl(l1+1)
       endif
c  Evaluate reactivity.
       arg(3) = arg(1)*arg(2)
       arg(5) = arg(4)*arg(1)
       arg(6) = arg(4)*arg(2)
       arg(7) = arg(6)*arg(1)
       if (iand(rkopt(j),16) .ne. 0) then
         arg(9) = arg(8)*arg(1)
         arg(10) = arg(8)*arg(2)
         arg(12) = arg(8)*arg(4)
         arg(11) = arg(8)*arg(3)
         arg(13) = arg(8)*arg(5)
         arg(14) = arg(8)*arg(6)
         arg(15) = arg(8)*arg(7)
       endif
       do i = 2,n
         rkro(j) = rkro(j) + rkcoef(k+i-1)*arg(i-1)
       enddo
       rkro(j) = rkro(j) + rkcoef(k)
c
   67  continue
       if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2010) rkro(j)
 2010  format ('0'/'0Bias reactivity =',1p,g13.5,' dollars.')
       rkro(j) = rkrn(j) - rkro(j)
c  Set up for first advancement.
       rkomeg(j) = 0.0
       rksum(j) = rkslob(j)
       jp = j + 9
       jd = jp + rkoffd(j)
       do i = jp,jd,9
         rksum(j) = rksum(j) + rkfi(i)*rkdepv(i)
       enddo
c  Set Relap5 heat structure indexes in doppler feedback data to
c  offsets by subtracting filndx(8).
  100  if (rknsfb(j) .ne. 0) then
         jpp = 3
         if (iand(rkopt(j),32) .eq. 0) jpp = 4
         jp = j + rknsfb(j+1)
         do 48 k = 1,rknsfb(j)
           if (rkhtno(jp) .ge. 10000) rkhtno(jp+1) = rkhtno(jp+1) -
     &     filndx(8)
           jp = jp + jpp
   48    continue
       endif
       return
  300  continue
       return
       end
