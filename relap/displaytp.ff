       subroutine displaytp
$if def,gui
!  Puts up display of time and pause information.
!
$if -def,ifortc,1
       use opengl_gl
$if def,ifortc,1
       use ifopngl
       use hynmod
       implicit none
!
       include 'contrl.h'
!
       real valy
       integer i,in
       logical lproj
       character flstru(2)*5,pbufh*94,runtyp(0:2)*9
!
       data runtyp/'paused','running','completed'/
       data flstru/'false','true'/
!
!  Set projection for print.
       call fglMatrixMode (GL_PROJECTION)
       call fglLoadIdentity
       call fgluOrtho2d (0.0,wx,0.0,hx)
!  Set model mode for print.
       call fglMatrixMode (GL_MODELVIEW)
       call fglLoadIdentity
!  Print advancement time.
       pbufh(1:32) = ' '
       write (pbufh(1:32),"('time:',es14.6,' s  ',a)") timehy,
     & runtyp(runflg)
       valy = hx - 20.0
       call prints (2.0,valy,pbufh(1:32),1)
       if (onestep) call prints (350.0,valy,'onestep',1)
       lproj = .false.
       if (gstop) then
         call fglColor3f (1.0_4,0.0_4,0.0_4)
         lproj = .true.
         call prints (450.0,valy,'gui trip stop',1)
       endif
       if (succes .ne. 0) then
         call fglColor3f (1.0_4,0.0_4,0.0_4)
         lproj = .true.
         write (pbufh(1:16),"('unsucessful (',i2,')')") succes
         call prints (650.0,valy,pbufh(1:16),1)
       endif
       if (lproj) call fglColor3f (0.0_4,0.0_4,0.0_4)
!  Print pause logic.
       if (intyp .eq. 2) then
         valy = hx - 40.0
         do i = 1,ngtrips
           call prints (52.0,valy,gtrp(i)%bcd,1)
           in = 1
           if (gtrp(i)%val) then
             in = 2
             if (iand(gtrp(i)%opt,1) .ne. 0)
     &       call fglColor3f (1.0_4,0.0_4,0.0_4)
           endif
           call prints (2.0,valy,flstru(in),1)
           if (iand(gtrp(i)%opt,1) .ne. 0)
     &     call fglColor3f (0.0_4,0.0_4,0.0_4)
           valy = valy - 20.0
         enddo
         call prints (2.0,10.0,bcd,1)
       endif
$endif
       return
       end subroutine displaytp
