*mlist
       subroutine majout
c
c  Prints the major edit of the transient and steady state results.
c
c  Cognizant engineer: rar ras rjw.
c
*in32 ipx
*in32end
c
       use invtbl
       use lpdatc
$if def,rk3d,1
       use rkinc
       use statcc
       use tstpctc
       implicit none
$if def,dll,1
!dec$ attributes dllexport :: majout
       include 'fast.h'
       include 'cmpalf.h'
       include 'cmpdac.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'convarc.h'
       include 'scddat.h'
       include 'scntl.h'
       include 'cpmdat.h'
       include 'coupl.h'
       include 'fpfast.h'
       include 'genrl.h'
       include 'htrflb.h'
       include 'htsrcm.h'
       include 'jundat.h'
       include 'przdat.h'
       include 'pumpblk.h'
       include 'radhtc.h'
       include 'rflhtc.h'
       include 'rkinc.h'
       include 'rupt.h'
       include 'rvoldt.h'
       include 'slumpv.h'
       include 'statec.h'
       include 'trpblk.h'
       include 'turbin.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables.
       include 'cnvtpa.h'
       real px(22)
       integer jfl,nset,istrt,jo,lx,ih,hindex
       integer ipx(22)
       integer knum,index,idx,inde,int3
       real sum,dlmesh,sumsou
       equivalence (px(1),ipx(1))
       integer i,i3,i4,i5,i6,i7,i8,i9,ie,ifin,ii,im,ir,is,iskp,
     & it,itl,itp,izr,j,jj,jk,jr,junit,jy,k,kdum,l,l1,l2,
     & linep1,lines,ll,loop,m,mx,n,n1,n2,nn,num
$if def,selap,1
       integer idam
       real ad1,ad2,asurf,btupsc,crsec,ctrq,cv2,
     & cv3,cvlb,degf1,degf2,den,eng,
     & ft,ft2,ft3,psia,qradlr,raddeg,
     & watts,xlb,xmdt
       real gconvr, gflux, hconvr, reygas, reyliq
       logical lhelp,title,lpvcmp,lpjcmp
       real pgas,pgasot
       real hygen,oxygen,ooxti,ooxto,outcld
       integer kk,icorr,icorro,ianymw,ihedpr,ifrst,icount,iburst
       integer idxo,lvol,irupt,irbv,jhed
$if def,selap,1
       character ch*1
       character nrg(27)*3,chwrd(2)*8
       character lb1a(2)*9,lb2a(2)*9,lb2b(2)*4,lb3a(2)*9,lb3b(2)*9,
     & lb4(2)*10,lb5(2)*10,lb6(2)*9,lb4a(2)*5,lb7(2)*4,lb8(2)*3,
     & lb9(2)*5,lb10(2)*6,lm(2)*4,lw(2)*7,lr(2)*5,lmg(2)*8,lbn(4)*8
       character ld(2)*10 , lmm(2)*10, ls(2)*10
       character inoyes(2)*10
       external ftbmov
$if def,selap,3
       integer i34,ibin,isp,isp1,ispn,ispsk,ispvk,isrf,isrf1,isrfk,
     & isrfn,isys,isys1,isysk,isysn,ivol,ivol1,ivolk,ivoln,ksp,nbin,
     & nsp,nsrf
       parameter (lines=59)
c
c  Data statements
       data ft/3.2808399/, ft2/10.763910/, ft3/35.314662/,
     & eng/4.2992261e-4/, psia/1.4503774e-4/, degf1/1.8/,
     & degf2/255.3722222222/, den/6.242796396e-2/
       data btupsc/9.478171200e-4/, xlb/2.204622622/
       data cv2/8.805509186e-5/, cv3/4.891949546e-5/
       data crsec/0.10471975511963/, raddeg/57.29577951/
       data ctrq/0.7375621495/
       data xmdt/6.242796057e-2/
       data lb4/' (rad/sec)',' (rev/min)'/, lb5/' (Pa)',' (lbf/in2)'/,
     & lb6/' (N-m)',' (lbf-ft)'/
       data lb1a/'(Watt)','(Btu/sec)'/,
     & lb2a/'(Watt/m2)','(Btu/sec-'/, lb2b/' ','ft2)'/,
     & lb3a/'(Watt/m2-','(Btu/sec-'/, lb3b/'       K)','ft2-degF)'/
       data cvlb/2.204622622/, lm/' kg,',' lb,'/,
     & lw/'m.rato=','m.ratn='/
       data   ld     /' (m)'     , ' (ft)'     /
       data   lmm    /' (kg)'    , ' (lb)'     /
       data   ls     /' inside'  , ' outside'  /
       data   inoyes /' no'      , ' yes'      /
       data lr/'left','right'/, lb4a/'(m2)','(ft2)'/
       data  lb7/'m3,','ft3,'/,lb8/'m,','ft,'/,lb9/'k,','degF,'/
       data lb10/'(K)','(degF)'/
       data lmg/'kg/m3-s','lb/ft3-s'/, lbn/'qual','mass','gen.rate',
     & 'dens'/
       data nrg/'x','ctb','ctt','ctm','bby','slg','anm','mpr',
     & 'ian','isl','mst','mpo','hst','vst','lev','jet','mwy','mwa',
     & 'mam','mms','mws','mwp','mpl','mps','msl','mpb','mbb'/
c  Flow regime symbols starting with mwy and ending with mbb are for the
c  eccmix component. mwy= wavy, mwa= wavy/annular, mam= annular/mist,
c  mms= mist, mws= wavy/slug, mwp= wavy/plug/slug, mpl= plug,
c  mps= plug/slug, msl= slug, mpb= plug/bubbly, mbb= bubbly.
       data hconvr/1.4910662e-5/
       data gconvr/0.2048/
c
       linep1 = lines + 1
       strdc1 = strdc1 + strdc2
       ipx(3) = ncount - stsatp
       stsatp = ncount
       ipx(4) = ncount - strdc1
       ipx(5) = ipx(3) - strdc2
       ipx(6) = nstsp - stsreq
       stsreq = nstsp
       px(7) = ipx(5)
       if (ipx(5) .ne. 0) px(7) = stsdta/px(7)
       px(8) = tmass
       px(9) = emass
       px(10) = tmasso
       j = 1
       if (tmasso .le. tmass) then
         px(10) = tmass
         j = 2
       endif
       px(10) = px(9)/px(10)
       l = 1
       if (.not.unito) then
         px(8) = px(8)*cvlb
         px(9) = px(9)*cvlb
         l = 2
       endif
       write(output,'(''1'',a)') ptitle
       write(output,'('' '',a)') ctitle
       write(output,2001) timehy,
     & ncount,ipx(3),stsdtn,dt,px(9),lm(l),
     & strdc1,strdc2,stsdtx,dtn,px(8),lm(l),
     & ipx(4),ipx(5),px(7),errmax,lw(j),px(10),
     & nstsp,ipx(6),dthy,stscpu,timehy
 2001  format ('0MAJOR EDIT !!!time=',1p,g15.6,' sec'
     & /'0 attempted adv: tot.=',i7,'   edit=',i7,3x,'min.dt=',
     & g15.6,' sec   last dt=',g15.6,' sec   ms.red=',g15.6,a3/
     & '   repeated adv: tot.=',i7,'   edit=',i7,3x,'max.dt=',g15.6,
     & ' sec   crnt.dt=',g15.6,' sec   tot.ms=',g15.6,a3/
     & ' successful adv: tot.=',i7,'   edit=',i7,3x,'avg.dt=',g15.6,
     & ' sec   err.est=',g15.6,7x,a7,g15.6/
     & '  requested adv: tot.=',i7,'   edit=',i7,3x,'req.dt=',g15.6,
     & ' sec',7x,'cpu=',g15.6,' sec',5x,'time=',g15.6,' sec')
       strdc2 = 0
       stsdtn = 1.0e75
       stsdtx = 0.0
       stsdta = 0.0
       if (nrepet .ne. 0) write (output,2003) succes
 2003  format (' ----Nonstandard major edit, not all values advanced to
     &the same time value, succes =',i2,'.')
c
       if (filid(18).ne.0.0 .and. iand(ihlppr(2),ishft(1,11)).ne.0) then
         l = filndx(18)
         write (output,"('0Trip number, trip time (sec)')")
         j = 1
         do
           jy = min(j+4,ntrpnv(filndx(18)))
           it = 0
           do i = j,jy
             it = it + 2
             ipx(it-1) = ntrpno(l)
             px(it) = trptim(l)
             l = l + ntvskp
           enddo
           write (output,2030) (ipx(i-1),px(i),i=2,it,2)
 2030  format(1p,5(i8,g15.7))
           j = jy + 1
           if (jy .ge. ntrpnv(filndx(18))) exit
         enddo
         if (ntrpnl(filndx(18)) .ne. 0) then
           j = 1
           do
             jy = min(j+4,ntrpnl(filndx(18)))
             it = 0
             do i = j,jy
               it = it + 2
               ipx(it-1) = ntrpno(l)
               px(it) = trptim(l)
               l = l + ntlskp
             enddo
             write (output,2030) (ipx(i-1),px(i),i=2,it,2)
             j = jy + 1
             if (jy .ge. ntrpnl(filndx(18))) exit
           enddo
         endif
       endif
c  Edit reactor kinetics information.
       if (filid(21) .ne. 0.0 .and.
     &     iand(ihlppr(2),ishft(1,12)).ne.0 ) then
$if def,rk3d,1
           if (.not. pt3dflag) then
           write (output,2004) rkpow(filndx(21)),rkpowf(filndx(21)),
     &     rkpowg(filndx(21)),rkrn(filndx(21)),rkomeg(filndx(21))
$if def,rk3d,1
           endif
 2004  format ('0',5x,'Total power',6x,'fission power    gamma power'
     & ,6x,'reactivity',7x,'rec. period'/
     & 6x,3('(Watts)',10x),'(dollars)',8x,'(sec-1)'/1p,5g17.5)
       endif
c  Edit volume information.
       if (filid(4) .eq. 0.0 .or.
     & iand(ihlppr(2),ishft(1,13)).eq. 0) go to 401
       n = filndx(3)
       j = filndx(4)
       do is = 1,nloops
         if (.not.unito) then
           px(1) = lpdat(is)%systms*xlb
           px(2) = lpdat(is)%sysmer*xlb
           write (output,2024) is,lpdat(is)%lsysnm,px(1),px(2),
     &     lpdat(is)%sysebt
 2024  format ('0System',i3,' ',a10,' mass=',1p,g13.5,' lb    mass error
     &=',g13.5,' lb    err.est.=',g13.5)
         else
           write (output,2025) is,lpdat(is)%lsysnm,lpdat(is)%systms,
     &     lpdat(is)%sysmer,lpdat(is)%sysebt
 2025  format ('0System',i3,' ',a10,' mass=',1p,g13.5,' kg    mass error
     &=',g13.5,' kg    err.est.=',g13.5)
         endif
         loop = lines
         do it = 1,lpdat(is)%licn
           if (nvc(n) .eq. 0) go to 25
           jj = j
           lpvcmp = .false.
           do m = 1,nvc(n)
             if (iand(vctrlx(jj),1) .ne. 0) then
               lpvcmp = .true.
               exit
             endif
             jj = jj + ivskp
           enddo
           if (lpvcmp) then
             loop = loop + 1
             if (loop .ge. linep1) then
               loop = 0
               write (output,2005)
 2005  format ('0    Vol.no.  pressure',6x,'voidf',
     & 8x,'voidg',8x,'quala',9x,'tempf',6x,'tempg',5x,'satt-part',
     & 3x,'uf',11x,'ug',7x,'vol-flag')
               if (.not.unito) then
                 write (output,2006)
 2006  format (12x,'  (psia) ',47x,'(degF)',5x,'(degF)',5x,
     & '(degF)',3x,'(Btu/lb)',5x,'(Btu/lb)',4x,'tlpvbfe')
               else
                 write (output,2007)
 2007  format (12x,'  (Pa)   ',48x,'(K)   ',5x,'(K)   ',5x,
     & '(K)   ',3x,'(J/kg)  ',5x,'(J/kg)  ',3x,'tlpvbfe')
               endif
             endif
             write (output,2031) cmpnam(n),cmpalf(cmptyp(n))
 2031  format (2(1x,a8))
             if (cmptyp(n) .eq. 4) then
               if (iand(vctrlx(j),1).ne.0) then
                 px(1) = pmpold(n)
                 px(2) = pmpthd(n)
                 px(3) = pmpttk(n)
                 px(4) = pmpmt(n)
                 ipx(5) = iand(ishft(cmpopt(n),-24),15)
                 l = 1
                 if (.not.unito) then
                   px(1) = px(1)/crsec
                   px(2) = px(2)*psia
                   px(3) = px(3)*ctrq
                   px(4) = px(4)*ctrq
                   l = 2
                 endif
                 write (output,2032) px(1),lb4(l),px(2),lb5(l),px(3),
     &           lb6(l),ipx(5),px(4),lb6(l)
 2032  format ('   rpm =',1p,g13.5,a10,5x,'head =',g13.5,a10,5x,'torque
     &=',g13.5,a10/'   octant =',i2,53x,'mtr.torque =',g13.5,a10)
                 loop = loop + 1
               endif
             elseif (cmptyp(n) .eq. 13) then
               if (iand(vctrlx(j),1).ne.0) then
                 px(1) = vliq(n)
                 px(2) = vliq(n)*rhof(j)
                 px(3) = vliq(n)/avol(j)
                 px(4) = ttank(n)
                 l = 1
                 if (.not.unito) then
                   px(1) =  px(1)*ft3
                   px(2) =  px(2)*xlb
                   px(3) =  px(3)*ft
                   px(4) = (px(4) - degf2)*degf1
                   l =  2
                 endif
                 write(output,2035) px(1),lb7(l),px(2),lm(l),px(3),
     &           lb8(l),px(4),lb9(l)
 2035   format(' liq. volume =',1p,g13.5,a10,'mass =',g13.5,a10,'level =
     &',g13.5,a10,'wall temp =',g13.5,a10)
                 loop = loop + 1
               endif
             elseif (cmptyp(n) .eq. 14) then
               if (iand(vctrlx(j),1) .ne. 0) then
                 px(1) = turpow(n)
                 px(2) = turtrq(n)
                 px(3) = turvel(n)
                 l = 1
                 if (.not.unito) then
                   px(1) = px(1)*btupsc
                   px(2) = px(2)*ctrq
                   px(3) = px(3)/crsec
                   l = 2
                 endif
                 write (output,2040) px(1),lb1a(l),px(2),lb6(l),px(3),
     &           lb4(l),tureff(n)
 2040  format (' power=',1p,g13.5,a10,5x,'torque=',g13.5,a10,5x,
     & 'speed=',g13.5,a10,5x,'efficiency=',g13.5)
                 loop = loop + 1
               endif
             elseif (cmptyp(n) .eq.17) then
               if (unito) then
                 px(1) = przlvl(n)
                 l = 1
               else
                 px(1) = przlvl(n)*ft
                 l = 2
               endif
               write(output,2045) px(1),ld(l)
 2045  format(' Gas Pressurizer level =',1pg13.5,a10)
               loop = loop + 1
             endif
           endif
           do l = 1,nvc(n)
             if (iand(vctrlx(j),1).ne.0) then
               loop = loop + 1
               ipx(1) = volno(j)/1000000
               ipx(2) = volno(j) - ipx(1)*1000000
               i = 1000000*iand(ishft(vctrl(j),-2),1) +
     &         100000*iand(ishft(imap(j),-28),1) +
     &         10000*iand(ishft(vctrl(j),-7),1) +
     &         1000*iand(ishft(imap(j),-9),1) +
     &         100*iand(ishft(vctrl(j),-30),1) +
     &         200*iand(ishft(imap(j),-27),1) +
     &         10*iand(ishft(imap(j),-13),1) +
     &         iand(ishft(vctrl(j),-1),1)
$if def,selap,1
               if (iand(vctrlx(j),4096) .ne. 0) ipx(1) = -ipx(1)
               if (.not.unito) then
                 px(3) = p(j)*psia
                 px(5) = (tempf(j) - degf2)*degf1
                 px(6) = (tempg(j) - degf2)*degf1
                 px(7) = (satt(j) - degf2)*degf1
                 px(8) = uf(j)*eng
                 px(9) = ug(j)*eng
                 write (output,2002) ipx(1),ipx(2),px(3),
     &           voidf(j),voidg(j),quala(j),(px(k),k=5,9),i
               else
                 write (output,2002) ipx(1),ipx(2),p(j),
     &           voidf(j),voidg(j),quala(j),tempf(j),tempg(j),satt(j),
     &           uf(j),ug(j),i
 2002  format (i5,'-',i6.6,1p,4g13.5,0p,3f11.3,1p,2g13.5,i8.7)
               endif
             endif
             j = j + ivskp
           enddo
   25      n = n + cmplen(n)
         enddo
       enddo
c
       if (iand(tstpct(curctl)%tsppac,256) .ne. 0) go to 22
       if (noncn .lt. 1) go to 601
       loop = lines
       j = filndx(4)
       do m = 1,nvols(j)
         if (iand(vctrlx(j),1) .ne. 0) then
         loop = loop + 1
         if (loop .ge. linep1) then
           loop = 0
           write (output,3001) (nctype(n),n=1,noncn)
 3001  format ('0   Vol.no.  part-press   direct htc   satt-tot',5x,
     & 'noncond.',3x,5(2x,a8,3x))
           write (output,3002) ('  ncond. qual',n=1,noncn)
 3002  format (52x,'vapor mass',1x,5a13)
           if (unito) then
             write (output,3003)
 3003  format (13x,'(Pa)         ','(Watts/m3-K)',2x,'(K)',10x,'(kg)')
           else
             write (output,3005)
 3005  format (13x,'(psia)       ','(B/s-ft3-F) ',1x,'(degF)',7x,'(lb)')
           endif
         endif
         ipx(1) = volno(j)/1000000
         ipx(2) = volno(j) - ipx(1)*1000000
         px(3) = tsatt(j)
         px(4) = v(j)*voidg(j)*rhog(j)*quala(j)
         px(5) = pps(j)
         px(6) = hgf(j)
         if (.not.unito) then
           px(3) = (px(3)-degf2)*degf1
           px(4) = px(4)*cvlb
           px(5) = px(5)*psia
           px(6) = px(6)*hconvr
         endif
         im = j + noncn - 1
         write (output,3004) ipx(1),ipx(2),px(5),px(6),px(3),px(4),
     &   (qualan(n),n=j,im)
 3004 format (i4,'-',i6.6,1p,9g13.5)
         endif
         j = j + ivskp
       enddo
  601  loop =lines
$if def,mmfld
       if (nonmf .ne. 0) then
         write (output,4991) (mctype(n),n=1,nonmf)
 4991  format('0   vol.no.  voidm',8x,'tempm',8x,'um',11x,6(a8,5x))
         if (.not.unito) then
           write (output,4992) ('met.ms.frac.',n=1,nonmf)
 4992  format(26x,'(degF)',7x,'(Btu/lb)',5x,6a13)
         else
           write (output,4993) ('met.ms.frac.',n=1,nonmf)
 4993  format(26x,'(K)',10x,'(J/kg)',7x,6a13)
         endif
         j = filndx(4)
         do 4004 m = 1,nvols(j)
           if( iand(vctrlx(j),1).ne.0 ) then
           ipx(1) = volno(j)/1000000
           ipx(2) = volno(j) - ipx(1)*1000000
           px(3) = tempmt(j)
           px(4) = um(j)
           if (.not.unito) then
             px(3) = (px(3)-degf2)*degf1
             px(4) = px(4)*eng
           endif
           im = j + nonmf - 1
           write (output,4994) ipx(1),ipx(2),voidm(j),px(3),px(4),
     &     (qualm(n),n=j,im)
 4994  format(i4,'-',i6.6,1p,9g13.5)
           endif
           j = j + ivskp
 4004    continue
         write (output,5991) (mctype(n),n=1,nonmf)
 5991  format('0   vol.no.  voidms',8x,'tempm',8x,'um',11x,6(a8,5x))
         if (.not.unito) then
           write (output,5992) ('met.ms.frac.',n=1,nonmf)
 5992  format(26x,'(degF)',7x,'(Btu/lb)',5x,6a13)
         else
           write (output,5993) ('met.ms.frac.',n=1,nonmf)
 5993  format(26x,'(K)',10x,'(J/kg)',7x,6a13)
         endif
         j = filndx(4)
         do 5004 m = 1,nvols(j)
           if( iand(vctrlx(j),1).ne.0 ) then
           ipx(1) = volno(j)/1000000
           ipx(2) = volno(j) - ipx(1)*1000000
           px(3) = tempmt(j)
           px(4) = um(j)
           if (.not.unito) then
             px(3) = (px(3)-degf2)*degf1
             px(4) = px(4)*eng
           endif
           im = j + nonmf - 1
           write (output,4994) ipx(1),ipx(2),voidms(j),px(3),px(4),
     &     (qualm(n),n=j,im)
 5994  format(i4,'-',i6.6,1p,9g13.5)
           endif
           j = j + ivskp
 5004    continue
       endif
$endif
       j = filndx(4)
       do 151 m = 1,nvols(j)
         if( iand(vctrlx(j),1).ne.0 ) then
         loop = loop + 1
         if (loop .ge. linep1) then
           loop = 0
           write (output,2009)
 2009  format ('0   Vol.no.   rhof',9x,'rhog',8x,'rho-mix',
     & 5x,'rho-boron',4x,'vel-liquid',3x,'vel-vapor ',4x,'sounde',4x,
     & '  quality ',1x,' quality ',3x,'quality')
           if (.not.unito) then
             write (output,2010)
 2010  format (13x,'(lb/ft3)',5x,'(lb/ft3)',5x,'(lb/ft3)',4x,
     & '(lb/ft3)',6x,2('(ft/sec)',5x),'(ft/sec)',4x,
     & 'mix-cup',3x,'static ',3x,'non-cond.')
           else
             write (output,2011)
 2011  format (13x,'(kg/m3) ',5x,'(kg/m3) ',5x,'(kg/m3) ',4x,
     & '(kg/m3) ',6x,2('(m/sec) ',5x),'(m/sec) ',4x,
     & 'mix-cup',3x,'static ',3x,'non-cond.')
           endif
         endif
         ipx(1) = volno(j)/1000000
         ipx(2) = volno(j) - ipx(1)*1000000
         if (.not.unito) then
           px(3) = rhof(j)*den
           px(4) = rhog(j)*den
           px(5) = rho(j)*den
           px(6) = boron(j)*den
           px(7) = velf(j)*ft
           px(8) = velg(j)*ft
           px(9) = sounde(j)*ft
           write (output,2012) ipx(1),ipx(2),(px(k),k=3,9),quale(j),
     &     quals(j),quala(j)
         else
           write (output,2012) ipx(1),ipx(2),rhof(j),rhog(j),rho(j),
     &     boron(j),velf(j),velg(j),sounde(j),quale(j),
     &     quals(j),quala(j)
 2012  format (i4,'-',i6.6,1p,7g13.5,3g10.3)
         endif
         do 110 k = 2,3
           loop = loop + 1
           if (iand(imap(j+k-1),16384) .ne. 0) then
             ir = iand(ishft(imap(j+k-1),-18),31)
             if (.not.unito) then
               px(5) = velf(j+k-1)*ft
               px(6) = velg(j+k-1)*ft
               write (output,2027) ipx(1),ipx(2),k,px(5),px(6),
     &                             nrg(ir+1)
 2027  format (i4,'-',i6.6,' coord.',i1,44x,1p,2g13.5,1x,a3)
             else
               write (output,2027) ipx(1),ipx(2),k,velf(j+k-1),
     &         velg(j+k-1),nrg(ir+1)
             endif
           endif
  110    continue
         endif
         j = j + ivskp
  151  continue
       loop =lines
       j = filndx(4)
       do 161 m = 1,nvols(j)
         if( iand(vctrlx(j),1).ne.0 ) then
         loop = loop + 1
         if (loop .ge. linep1) then
           loop = 0
           write (output,2060)
 2060  format ('0   Vol.no.  Q.wall.tot   Qwg.wall.gas  Vapor.gen ',
     & '  Gamma.boil   Hif.liq.int  Hig.vap.int  Mass.flux  ',
     & '  Reynolds   Reynolds    Flow')
           if (.not.unito) then
             write (output,2061)
 2061  format (13x,2('(Btu/sec)',4x),2('(lb/sec-ft3) '),
     & 2('(B/s-ft3-f) ',1x),'(lb/sec-ft2)',1x,'liquid',5x,'vapor',
     & 7x,'regi')
           else
             write (output,2062)
 2062  format (13x,2(' (Watts) ',4x),2('(kg/sec-m3)  '),
     & 2('(Watts/m3-K)',1x),'(kg/sec-m2) ',1x,'liquid',5x,'vapor',
     & 7x,'regi')
           endif
         endif
         gflux = ggas(j) + gliq(j)
         reygas = ggas(j)*diamv(j)/viscg(j)
         reyliq = gliq(j)*diamv(j)/viscf(j)
         ipx(1) = volno(j)/1000000
         ipx(2) = volno(j) - ipx(1)*1000000
         ir = iand(ishft(imap(j),-18),31)
         if (.not.unito) then
           px(3) = q(j)*btupsc
           px(4) = qwg(j)*btupsc
           px(5) = vapgen(j)*xmdt
           px(6) = gammaw(j)*xmdt
           px(7) = hif(j)*hconvr
           px(8) = hig(j)*hconvr
           px(9) = gflux*gconvr
           write (output,2063) ipx(1),ipx(2),(px(k),k=3,9),
     &     reyliq,reygas,nrg(ir+1)
         else
           write (output,2063) ipx(1),ipx(2),q(j),qwg(j),vapgen(j),
     &     gammaw(j),hif(j),hig(j),gflux,reyliq,reygas,nrg(ir+1)
 2063  format (i4,'-',i6.6,1p,7g13.5,1x,2g12.5,1x,a3)
         endif
         endif
         j = j + ivskp
  161  continue
c  Write level tracking parameters
       loop = lines
       j = filndx(4)
       do 181 m = 1,nvols(j)
         if (iand(vctrlx(j),1).ne.0 .and.
     &        iand(imdctl(1),1).ne.0 ) then
           ipx(1) = volno(j)/1000000
           ipx(2) = volno(j) - ipx(1)*1000000
           ipx(13) = iand(ishft(vctrlx(j),-7),1)
           if (ipx(13) .gt. 0) then
             loop = loop + 1
             if (loop .ge. linep1) then
               loop = 0
               write (output,7030)
 7030  format ('0   Vol.no.',7x,'voidla',7x,'voidlb',7x,'vollev',9x,
     & 'vlev')
               if (.not.unito) then
                 write(output,7031)
 7031  format (46x,'(ft)',5x,'(ft/sec)')
               else
                 write(output,7032)
 7032  format (47x,'(m)',6x,'(m/sec)')
               endif
             endif
             if (.not.unito) then
               px(3) = vollev(j)*ft
               px(4) = vlev(j)*ft
               write(output,7040) ipx(1),ipx(2),voidla(j),
     &         voidlb(j),px(3),px(4)
             else
               write (output,7040) ipx(1),ipx(2),voidla(j),
     &         voidlb(j),vollev(j),vlev(j)
             endif
           endif
         endif
         j = j + ivskp
  181  continue
c  Write thermal front tracking parameters
       loop = lines
       j = filndx(4)
       do 182 m = 1,nvols(j)
         if (iand(vctrlx(j),1).ne.0 .and.
     &        iand(vctrl(j),ishft(1,2)).ne.0 ) then
           ipx(1) = volno(j)/1000000
           ipx(2) = volno(j) - ipx(1)*1000000
           px(13) = dfront(j)
           if (px(13) .gt. 0.0) then
             loop = loop + 1
             if (loop .ge. linep1) then
               loop = 0
               write (output,7033)
 7033  format ('0   Vol.no.',9x,'ufla',9x,'uflb',7x,'dfront',
     &          7x,'vfront')
               if (.not.unito) then
                 write(output,7034)
 7034  format (46x,'(ft)',5x,'(ft/sec)')
               else
                 write(output,7035)
 7035  format (47x,'(m)',6x,'(m/sec)')
               endif
             endif
             if (.not.unito) then
               px(3) = dfront(j)*ft
               px(4) = vfront(j)*ft
               write(output,7040) ipx(1),ipx(2),ufla(j),
     &         uflb(j),px(3),px(4)
             else
               write (output,7040) ipx(1),ipx(2),ufla(j),
     &         uflb(j),dfront(j),vfront(j)
             endif
           endif
         endif
         j = j + ivskp
  182  continue
c  Write time advancement statistics.
   22  if (iand(tstpct(curctl)%tsppac,512).ne.0 .or. ncount.eq.0)
     & go to 23
 2034  format ('0   Vol.no.  lrgst.mass err.   reduce-quality   reduce-e
     &xtrap.      reduce-mass   reduce-propty.      min.courant   reduce
     &-courant'/11x,7(6x,'edit  total'))
       j = filndx(4)
       loop = lines
       do k = 1,nvols(j)
         if( iand(vctrlx(j),1).ne.0 ) then
         loop = loop + 1
         if (loop .ge. linep1) then
           write (output,2034)
           loop = 0
         endif
         ipx(1) = volno(j)/1000000
         ipx(2) = volno(j) - ipx(1)*1000000
         ipx(3) = statv(k)%stlte2
         ipx(4) = statv(k)%stlte1 + ipx(3)
         statv(k)%stlte1 = ipx(4)
         statv(k)%stlte2 = 0
         ipx(5) = statv(k)%strxl2
         ipx(6) = statv(k)%strxl1 + ipx(5)
         statv(k)%strxl1 = ipx(6)
         statv(k)%strxl2 = 0
         ipx(7) = statv(k)%strex2
         ipx(8) = statv(k)%strex1 + ipx(7)
         statv(k)%strex1 = ipx(8)
         statv(k)%strex2 = 0
         ipx(9) = statv(k)%strte2
         ipx(10) = statv(k)%strte1 + ipx(9)
         statv(k)%strte1 = ipx(10)
         statv(k)%strte2 = 0
         ipx(11) = statv(k)%strpe2
         ipx(12) = statv(k)%strpe1 + ipx(11)
         statv(k)%strpe1 = ipx(12)
         statv(k)%strpe2 = 0
         ipx(13) = statv(k)%stscl2
         ipx(14) = statv(k)%stscl1 + ipx(13)
         statv(k)%stscl1 = ipx(14)
         statv(k)%stscl2 = 0
         ipx(15) = statv(k)%strcl2
         ipx(16) = statv(k)%strcl1 + ipx(15)
         statv(k)%strcl1 = ipx(16)
         statv(k)%strcl2 = 0
         write (output,2033) (ipx(i),i=1,16)
 2033  format (i4,'-',i6.6,7(i10,i7))
         endif
         j = j + ivskp
       enddo
 2037  format ('0   Vol.no.   repeat-air app  repeat-del pres',
     &  '    repeat-packing',/11x,
     & 3(6x,'edit  total'))
       j = filndx(4)
       loop = lines
       do k = 1,nvols(j)
         if( iand(vctrlx(j),1).ne.0 ) then
         loop = loop + 1
         if (loop .ge. linep1) then
           write (output,2037)
           loop = 0
         endif
         ipx(1) = volno(j)/1000000
         ipx(2) = volno(j) - ipx(1)*1000000
         ipx(3) = statv(k)%strap2
         ipx(4) = statv(k)%strap1 + ipx(3)
         ipx(5) = statv(k)%strdp2
         ipx(6) = statv(k)%strdp1 + ipx(5)
         statv(k)%strap1 = ipx(4)
         statv(k)%strap2 = 0
         statv(k)%strdp1 = ipx(6)
         statv(k)%strdp1 = 0
         ipx(7) = statv(k)%stvpk2
         ipx(8) = statv(k)%stvpk1 + ipx(7)
         statv(k)%stvpk1 = ipx(8)
         statv(k)%stvpk2 = 0
         write (output,2033) (ipx(i),i=1,8)
         endif
         j = j + ivskp
       enddo
c  Edit junction information.
   23  if (filid(5) .eq. 0.0 .or.
     & iand(ihlppr(2),ishft(1,14)).eq.0 ) go to 401
       loop =lines
       n  = filndx(3)
       j  = filndx(5)
       k  = 1
       do is = 1,nloops
         write(output,2008) is,lpdat(is)%lsysnm
 2008    format('0System',i3,' ',a10)
         do it = 1,lpdat(is)%licn
           if (njc(n) .eq. 0) go to 27
           lpjcmp = .false.
           jj = j
           do m = 1,njc(n)
             if( iand(jcex(jj),ishft(1,20)).ne.0 ) lpjcmp = .true.
             jj = jj + ijskp
           enddo
           if (lpjcmp) then
           loop = loop + 1
           if (loop .ge. linep1) then
             loop = 0
             write (output,2013)
 2013  format ('0',4x,'Jun.no.',3x,'from vol.',5x,'to vol.',2x,
     & 'liq.j.vel.',3x,'vap.j.vel.',3x,'mass flow',4x,'jun.area',5x,
     & 'throat',6x,'jun-flag',2x,'flow',1x,'no. advs. choked')
             if (.not.unito) then
               write (output,2014)
 2014  format (38x,'(ft/sec)',5x,'(ft/sec)',5x,'(lb/sec)',5x,'(ft2)',8x,
     & 'ratio',7x,'jefvcahs',2x,'regi',1x,'last edit  total')
             else
               write (output,2015)
 2015  format (38x,'(m/sec)',6x,'(m/sec)',6x,'(kg/sec)',5x,'(m2)',9x,
     & 'ratio',7x,'jefvcahs',2x,'regi',1x,'last edit  total')
             endif
           endif
           write (output,2031) cmpnam(n),cmpalf(cmptyp(n))
           endif
           do l = 1,njc(n)
             if (iand(jcex(j),ishft(1,20)).ne.0) then
             loop = loop + 1
             ipx(1) = junno(j)/1000000
             ipx(2) = junno(j) - ipx(1)*1000000
             i3 = iand(jc(j),1)
             i =
     &       10000000*iand(ishft(jc(j),-25),1) +
     &       1000000*iand(ishft(jcex(j),-15),1) +
     &       100000*iand(ishft(jcex(j),-2),1) +
     &       10000*iand(ishft(jc(j),-17),3) +
     &       1000*iand(ishft(jc(j),-4),1) +
     &       100*iand(ishft(jc(j),-8),1) +
     &       100*iand(ishft(jcex(j),-29),1) +
     &       10*iand(ishft(jc(j),-9),1) +
     &       iand(ishft(jc(j),-12),3)
             i4 = junftl(j)/1000000
             i5 = junftl(j+1)/1000000
             i6 = i4
             if (iand(jc(j),4) .ne. 0) i6 = -i6
             i7 = i5
             if (iand(jc(j),8) .ne. 0) i7 = -i7
             i8 = junftl(j) - i4*1000000
             i9 = junftl(j+1) - i5*1000000
             ipx(7) = statj(k)%stjck2
             ipx(8) = statj(k)%stjck1 + ipx(7)
             statj(k)%stjck1 = ipx(8)
             statj(k)%stjck2 = 0
             ir = iand(ishft(jcex(j),-3),31)
$if def,selap
             if (iand(jc(j),32768).eq.0 .and. iand(jc(j),2).ne.0) then
               if (cmptyp(jcnfnd(j)).ne.9 .and. cmptyp(jcnfnd(j)).ne.12)
     &         then
                 ipx(1) = -ipx(1)
               endif
             endif
$endif
             if (.not.unito) then
               px(3) = velfj(j)*ft
               px(4) = velgj(j)*ft
               px(5) = mflowj(j)*xlb
               px(6) = ajun(j)*ft2
               write (output,2016) ipx(1),ipx(2),i6,i8,i7,i9,(px(jj),
     &         jj=3,6),athrot(j),i,nrg(ir+1),i3,ipx(7),ipx(8)
             else
               write (output,2016) ipx(1),ipx(2),i6,i8,i7,i9,velfj(j),
     &         velgj(j),mflowj(j),ajun(j),athrot(j),i,nrg(ir+1),
     &         i3,ipx(7),ipx(8)
 2016  format (i5,'-',i6.6,2(i5,'-',i6.6),1p,5g13.5,i9.8,3x,a3,1x,
     & i2,i7,i7)
             endif
             endif
             j = j + ijskp
             k = k + 1
           enddo
   27      n = n + cmplen(n)
         enddo
       enddo
c
       if (iand(tstpct(curctl)%tsppac,128) .ne. 0) go to 401
       j  = filndx(5)
       i  = 1
       loop =lines
       do m = 1,njuns(j)
         if (iand(jcex(j),ishft(1,20)) .ne. 0) then
         loop = loop + 1
         if (loop .ge. linep1) then
           loop = 0
           write (output,2017)
 2017  format ('0   Jun.no.  voidfj',7x,'voidgj',7x,
     & 'fij',10x,'fwalfj',5x,'fwalgj',5x,'fjunft',5x,'fjunrt',5x,
     & 'formfj',5x,'formgj',3x,'no.  advs.  ccfl')
           if (.not.unito) then
             write (output,2018)
 2018  format (39x,'(lb-s2/ft5)',66x,'last edit  total')
           else
             write (output,2019)
 2019  format (39x,'(N-s2/m5)',68x,'last edit  total')
           endif
         endif
         ipx(1) = junno(j)/1000000
         ipx(2) = junno(j) - ipx(1)*1000000
         ipx(4) = iand(ishft(jcex(j),-1),1)
         ipx(5) = statj(i)%stccf2
         ipx(6) = statj(i)%stccf1 + ipx(5)
         statj(i)%stccf1 = ipx(6)
         statj(i)%stccf2 = 0
         ipx(7) = iand(ishft(jcex(j),-19),1)
         ipx(8) = statj(i)%stjpk2
         ipx(9) = statj(i)%stjpk1 + ipx(8)
         statj(i)%stjpk1 = ipx(9)
         statj(i)%stjpk2 = 0
         if (.not.unito) then
           px(3) = fij(j)*0.5914096e-3
           write (output,2108) ipx(1),ipx(2),voidfj(j),voidgj(j),
     &     px(3),fwalfj(j),fwalgj(j),fjunft(j),fjunrt(j),formfj(j),
     &     formgj(j),ipx(4),ipx(5),ipx(6)
         else
           write (output,2108) ipx(1),ipx(2),voidfj(j),voidgj(j),
     &     fij(j),fwalfj(j),fwalgj(j),fjunft(j),fjunrt(j),formfj(j),
     &     formgj(j),ipx(4),ipx(5),ipx(6)
 2108  format (i4,'-',i6.6,1p,3g13.5,6g11.3,i2,i7,i7)
         endif
         endif
         j = j + ijskp
         i = i + 1
       enddo
$if def,mmfld
       if (nonmf .ne. 0) then
         write (output,4995)
 4995  format('0   jun.no.  voidmj',6x,' met.j.vel.',3x,
     & 'met.mass flow')
         if (.not.unito) then
           write (output,4996)
 4996  format(26x,'(ft/sec)',5x,'(lb/sec)')
         else
           write (output,4997)
 4997  format(26x,'( m/sec)',5x,'(kg/secs)')
         endif
         j = filndx(5)
         do 4008 m = 1,njuns(j)
           if( iand(jcex(j),ishft(1,20)).ne.0 ) then
           ipx(1) = junno(j)/1000000
           ipx(2) = junno(j) -ipx(1)*1000000
           px(3) = velmj(j)
           px(4) = mmflwj(j)
           if (.not.unito) then
             px(3) = px(3)*ft
             px(4) = px(4)*xlb
           endif
           write (output,4998) ipx(1),ipx(2),voidmj(j),px(3),px(4)
 4998      format(i4,'-',i6.6,1p,3g13.5)
           endif
           j = j + ijskp
 4008    continue
       endif
$endif
c  Edit heat structure information.
  401  if (filid(8) .ne. 0.0 .and.
     &   iand(ihlppr(2),ishft(1,15)).ne.0 ) then
c  Edit metal-water reaction.
         hygen = 0.0
         oxygen = 0.0
         kk = 1
         if (.not. unito) kk = 2
         icorro = 3
         ianymw = 0
         i = filndx(8)
         do 409 m = 1,nhtstr(i)
           j = ihtptr(i) + filndx(8)
           jj = htstno(j)
           ipx(1) = jj/1000
           ipx(2) = jj - ipx(1)*1000
c  Check for any mw calc to do.
           if (iand(imw(j),16384) .ne. 0) then
c  Check for first one of a set (htnusr ne 0).
             if (htnusr(j) .ne. 0) then
c Fetch the correlation number & set mw flag.
               icorr = ishft(iand(imw(j),32768) ,-15)
               ianymw = 1
               if (icorr .ne. icorro) write (output, 800) ld(kk)
  800  format ('0 Str.no.  side      penetration'/
     & '                     depth'/'                    ',a10)
             endif
             icorro = icorr
             ooxto = oxto(j)
             ooxti = oxti(j)
             hygen = h2gen(j) + hygen
             if (.not.unito) then
               ooxti = ooxti*ft
               ooxto = ooxto*ft
             endif
             write (output, 802) ipx(1), ipx(2), ls(1), ooxti
             write (output, 802) ipx(1), ipx(2), ls(2), ooxto
  802  format(i5, '-', i3.3, a10, 1p,g13.5, g13.5)
           endif
           i = i + 1
  409    continue
         if (.not. unito) hygen = hygen*xlb
c  Check if any mw calc were done.
         if (ianymw .ne. 0) write (output, 804) hygen, lmm(kk)
  804  format(1h0, 'Total hydrogen generated', 1p,g13.5, a10)
         loop =lines
         sumsou = 0.
         i = filndx(8)
         do 405 m = 1,nhtstr(i)
           loop = loop + 1
           if (loop .ge. linep1) then
             loop = 0
             j = 1
             if (.not.unito) j = 2
             write (output,'(''1'',a)') ptitle
             write(output,'('' '',a)') ctitle
             write (output,2026) timehy,
     &       lb10(j),lb1a(j),(lb2a(j),ii=1,2),lb3a(j),
     &       (lb1a(j),ii=1,2),lb10(j),(lb2b(j),ii=1,2),lb3b(j)
 2026  format ('0 HEAT STRUCTURE OUTPUT +++time= ',1p,g15.6,' sec'/
     & '  str.no.',1x,'side',3x,'bdry.vol.',2x,'surface',2x,
     & 'heat-trf.',4x,'heat-flux',4x,'critical',5x,'CHF   ht',3x,
     & 'heat-trf.',3x,'int.-heat',4x,'conv+rad',5x,'vol.ave.'/18x,
     & 'number',4x,'temp.',4x,'convection',3x,'convection',3x,
     & 'heat-flux',4x,'mul  mode  coef.conv',4x,'source',6x,'-source',
     & 7x,'temp.',/,28x,a6,3x,3(a9,4x),11x,a9,4x,a9,4x,a9,4x,a6/
     & 51x,2(a4,10x),8x,a9)
           endif
           j = ihtptr(i) + filndx(8)
           jj = htstno(j)
           ipx(1) = jj/1000
           ipx(2) = jj - ipx(1)*1000
           l = 0
           n = 0
           if (htbvc(j) .ge. 0) l = htbvc(j)
           if (htbvc(j+1) .ge. 0) n = htbvc(j+1)
           ll = htxft(j) + filndx(8)
           nn = ll + htnmpt(j) - 1
           px(3) = httmp(ll)
           px(12) = httmp(nn)
           l1 = l/1000000
           l2 = l - l1*1000000
           n1 = n/1000000
           n2 = n - n1*1000000
           px(4) = htsrfo(j)*htrnro(j)
           px(13) = htsrfn(j)*htrnrn(j)
           px(5) = htrnro(j)
           px(14) = htrnrn(j)
           px(6) = htchfo(j)
           px(15) = htchfn(j)
           ipx(7) = htmod(j)
           ipx(16) = htmod(j+1)
           px(8) = htbcao(j)
           px(17) = htbcan(j)
           px(18) = min(chfmuo(j),99.99)
           px(19) = min(chfmun(j),99.99)
           px(9) = htpown(j)*htfctr(j)*httots(j)*htsrfn(j)/
     &     arean(htgom(j)+filndx(8))
           sumsou = sumsou + px(9)
           px(10) = px(4) + px(13) - px(9)
c  px(10)=net loss(Watts); 4=conv left, 13=conv right
c  9=internal source
           if (filid(38) .gt. 0 .and.
     &      iand(ihlppr(2),ishft(1,16)).ne.0 ) then
             if (m .eq. 1) then
               jr = filndx(38)
               izr = jr + irhflx(jr) - 2
             endif
             izr = izr + 2
             qradlr = qlrad(izr)*htsrfo(j) + qrrad(izr)*htsrfn(j)
             px(10) = px(10) + qradlr
           endif
           px(11) = htvatp(j)
           if (.not.unito) then
             px(3) = (px(3) - degf2)*degf1
             px(12) = (px(12) - degf2)*degf1
             px(4) = px(4)*btupsc
             px(13) = px(13)*btupsc
             px(5) = px(5)*cv2
             px(14) = px(14)*cv2
             px(6) = px(6)*cv2
             px(15) = px(15)*cv2
             px(8) = px(8)*cv3
             px(17) = px(17)*cv3
             px(9) = px(9)*btupsc
             px(10) = px(10)*btupsc
             px(11) = (px(11) - degf2)*degf1
           endif
           write (output,2023) ipx(1),ipx(2),lr(1),l1,l2,(px(k),k=3,6),
     &     px(18),ipx(7),(px(k),k=8,11),lr(2),n1,n2,
     &     (px(k),k=12,15),px(19),ipx(16),px(17)
 2023  format (i5,'-',i3.3,a7,i4,'-',i6.6,f9.3,1p,3g13.5,0p,f5.2,
     & i4,2x,1p,3g13.5,0p,f7.2/9x,a7,i4,'-',i6.6,f9.3,1p,
     & 3g13.5,0p,f5.2,i4,2x,g13.5)
           i = i + 1
  405    continue
c
         if (unito) then
           j = 1
         else
           j = 2
           sumsou = sumsou*btupsc
         endif
         write (output,2070) sumsou,lb1a(j)
 2070  format(74x,'Sum of int.-heat-source= ',1p,g13.5,1x,a9)
         if (iand(tstpct(curctl)%tsppac,64) .eq. 0) then
           loop =lines
           i = filndx(8)
           do 411 m = 1,nhtstr(i)
             loop = loop + 1
             if (loop .ge. linep1) then
               loop = 0
               j = 1
               if (.not.unito) j = 2
               write (output,2020) timehy,lb10(j)
 2020  format ('0   At time= ',1p,g15.6,' sec       str.no.   mesh point
     & temperatures ',a10)
             endif
             j = ihtptr(i) + filndx(8)
             jj = htstno(j)
             ipx(1) = jj/1000
             ipx(2) = jj - ipx(1)*1000
             ll = htxft(j) + filndx(8)
             nn = ll + htnmpt(j) - 1
             if (unito) then
               write (output,2021) ipx(1),ipx(2),(fa(mx),mx=ll,nn)
 2021    format (i5,'-',i3.3,2x,1p,10g12.5,8(/11x,10g12.5))
             else
               k = ll
  413          jy = min(k+9,nn)
               it = 2
               do mx = k,jy
                 it = it + 1
                 px(it) = (fa(mx) - degf2)*degf1
               enddo
               if (k .le. (ll + 9)) then
                 write (output,2022) ipx(1),ipx(2),(px(mx),mx=3,it)
 2022    format (i5,'-',i3.3,2x,1p,10g12.5)
               else
                 write (output,2036) (px(mx),mx=3,it)
 2036    format (11x,1p,10g12.5)
               endif
               k = jy + 1
               if (k .le. nn) go to 413
             endif
             i = i + 1
  411      continue
         endif
c
c  Edit of fuel rod gap widths.
c  ihedpr = 1 if header has been printed.
         ihedpr = 0
c  iskp = 0 no print, 1 if print gas gap.
         iskp = 0
c  ifrst>0 first h.s. of a set, 0 otherwise.
         ifrst = 0
c  icount = number of h.s. with gas gaps.
         icount = 0
         i = filndx(8)
         do 3411 m = 1,nhtstr(i)
c  Get h.s. offset and number.
           j = ihtptr(i) + filndx(8)
           jj = htstno(j)
c  ipx(1) = cccg, heat structure-geom number.
c  ipx(2) = nnn , heat structure number.
           ipx(1) = jj/1000
           ipx(2) = jj - ipx(1)*1000
c  No rupture, outer clad radius.
           iburst = 1
           outcld = abs (cladex(j))
c  ifrst > 0 if first h.s..
           ifrst = htnusr(j)
           if (ifrst .gt. 0) then
c Yes, check for gas, get index.
             idxo = htgom(j) + filndx(8)
             pgasot = gpintp(idxo)
             if (pgasot .le. 0.0) then
c  No gas, so set flag, and skip print.
               iskp = 0
               go to 3412
             endif
             iskp = 1
             lvol = htgap(j+1)
             pgas = pgasot*max(satt(lvol),tempg(lvol))
             icount = icount + 1
c  irupt = 1 if rod has burst.
             irupt  = ishft( iand(imw(j),512) ,-9)
             if (irupt .le. 0) go to 3451
c  Rod has burst, set pgas = pfluid.
             irbv = htbvo(j+1)
             pgas = p(irbv)
           endif
c  cladex < 0 if this h.s. has ruptured.
           if (iskp .eq. 0) go to 3412
           if (cladex(j) .lt. 0.0) iburst = 2
c  j = 1 for si units, 2 for english
c  unito = .true. for si units
 3451      if (ihedpr .ne. 1) then
             jhed = 1
             if (.not.unito) jhed = 2
             write (output,3020) lb8(jhed), lb8(jhed), lb5(jhed)
 3020  format ('0 Str.no.  ','gas gap',10x,'clad radius',6x,
     & 'ruptured',9x,'pressure'/11x,a10,7x,a10,24x,a10)
             ihedpr = 1
           endif
           if (unito) then
c  Units are si.
             if (ifrst .gt. 0) write (output,3021) ipx(1),ipx(2),
     &       gapwd(j),outcld,inoyes(iburst),pgas
             if (ifrst .eq. 0) write (output,3021) ipx(1),ipx(2),
     &       gapwd(j),outcld,inoyes(iburst)
           else
             if (ifrst .gt. 0) write (output,3021) ipx(1),ipx(2),
     &       gapwd(j)*ft, outcld*ft,inoyes(iburst),pgas*psia
             if (ifrst .eq. 0) write (output,3021) ipx(1),ipx(2),
     &       gapwd(j)*ft,outcld*ft,inoyes(iburst)
 3021  format (i5,'-',i3.3,2x,1p,g12.5,5x,g12.5,5x,a10,7x,g12.5)
           endif
 3412      i = i + 1
 3411    continue
         if (filid(38) .ne. 0.0 .and.
     &    iand(ihlppr(2),ishft(1,16)).ne.0 ) then
           jr = filndx(38)
           jfl = jr
           nset = nrset(jfl)
c
           do 650 jj = 1,nset
             istrt = jfl + irhoff(jr)
             ifin  = istrt + (nrh(jr) - 1) * nrhskp
             px(1) = abs(timron(jr))
             write (output, 806) setno(jr),px(1),timrof(jr)
  806 format('0Radiation set ',i2,'.  last time when radiation calcul
     &ation became active was ',1p,g13.5,/20x,'last time when radiation
     &calculation became inactive was ',1p,g13.5)
c
             if (timrof(jr) .le. px(1)) then
c  Radiation ht is on now.
c  Write heading.
               junit = 1
               if (.not. unito) junit = 2
               write (output, 808) lb2a(junit),lb2b(junit),lb1a(junit)
  808  format (' Num   str.no.  side    radiation      radiation'/
     & 24x,'heat flux',6x,'energy'/
     & 22x, a10,a4,2x,a9 )
c  Write rad ht data.
               num = 0
               watts = 0.0
               do j = istrt,ifin,nrhskp
                 kdum = filndx(8) + iareof(j)
                 num = num + 1
                 asurf = htsrfo(kdum)
                 ad1 = qrad(j)
                 ad2 = ad1 * asurf
                 watts = watts + ad2
                 if (.not.unito) then
                   ad1 = ad1 * cv2
                   ad2 = ad2 * btupsc
                 endif
                 ipx(1) = jrh(j)/1000
                 ipx(2) = jrh(j) - ipx(1)*1000
                 jk = 1
                 if (jlr(j) .gt. 0) jk = 2
                 write (output, 803) num,ipx(1),'-',ipx(2),lr(jk),ad1,
     &           ad2
  803  format(1x,i3,3x,i4,a1,i3,1x,a5,1p,g13.5,2x,g13.5)
               enddo
               write(output,809) watts
  809  format ('0     The sum of the radiation energy= ',g10.2/)
             endif
             jr = jr + nrsskp
  650      continue
         endif
c
         if (filid(32) .ne. 0.0 .and.
     &   iand(ihlppr(2),ishft(1,17)).ne.0 ) then
           title =.false.
           ih = filndx(32)
           do 430 m = 1,nrflht(ih)
             lx = lhtrfl(ih) + filndx(8)
             jo = ihtptr(lx) + filndx(8)
             idrfl = iand(ishft(htopt(jo),-9),1)
             index = ihtptr(lx) + filndx(8)
crex         inds = htbntr(index+1-idrfl)
crex         if (inds .ne. 0) go to 460
             sum = 0.0
             i = lx
             do mx = 1,htnusr(jo)
               hindex = ihtptr(i) + filndx(8)
               idx = htbvo(hindex+idrfl)
               sum = sum + dl(idx)
               i = i + 1
             enddo
             if (ncount .eq. 0) then
               zbunht(ih) = sum
               zqtop(ih) = sum
               zqbot(ih) = 0.0
             endif
             if (iand(htopt(jo),2048) .ne. 0) then
               ipx(1) = htstno(jo)/1000
               ipx(2) = iglrfl(ih)
               ipx(3) = iglrfl(ih+1)
               px(4) = satt(idx)
               px(5) = tchfqf(ih)
               px(6) = trewet(ih)
               px(7) = zqbot(ih)
               px(8) = zqtop(ih)
               if (.not.title) then
                 title = .true.
                 write (output,2201) timehy
 2201  format('0',21x,'Reflood edit at time= ',1p,g15.6,' sec'/
     & 1x,'geom.no.',2x,
     & 'max-nodes  number',3x,'saturation',3x,'critical',4x,
     & 'rewetting',3x,'bot-quench   ',1x,'top-quench'
     & ,/11x,'allowed',4x,'current',2x,
     & 3('temp.',8x),1x,'position',6x,'position')
               endif
               if (unito) then
                 write (output,2202)
 2202  format(33x,3('(K)',10x),2('(m)',10x))
               else
                 px(7)=px(7)*ft
                 px(8)=px(8)*ft
                 do 422 j=4,6
                   px(j) = (px(j) - degf2)*degf1
  422            continue
                 write (output,2203)
 2203  format(31x,3('(degF)',7x),2('(ft)',9x))
               endif
               write (output,2204) (ipx(k),k=1,3),(px(k),k=4,8)
 2204  format(i5,8x,2(i5,3x),1p,5g13.5)
crex           idrfl = iand(ishft(htopt(jo),-9),1)
crex           k = lhtrfl(i) + filndx(8)
               sum = 0.
               int3 = filndx(1)
               inscr1 = filndx(1)
               inde = inxrfl(ih)
c  inde points to the information block. int3 pts to scratch storage
c  space.  k points to ihtptr array location.
c
c  Loop over the stack of heat structures in reflood set.
               fa(int3) = sum
               i = lx
               do ii=1,htnusr(jo)
                 knum = nmzht(inde)
                 hindex = ihtptr(i) + filndx(8)
                 idx = htbvo(hindex + idrfl)
                 dlmesh = dl(idx)/float(knum)
                 if(.not.unito) dlmesh = dlmesh*ft
c  Loop over intervals in a structure.
                 do jj=1,knum
                   sum = sum + dlmesh
                   int3 = int3 + 1
                   fa(int3) = sum
                 enddo
                 i = i + 1
                 inde = inde + 1
               enddo
               jj = 2
               if (unito) jj = 1
               write (output,2207) ld(jj),(fa(k),k=inscr1,int3)
 2207 format('0Present position of axial mesh (0.0 is bottom) '
     &, a6,1p,30(/11x,10g12.5))
             endif
             ih = ih + nhtga
  430      continue
           if (title .and. iand(tstpct(curctl)%tsppac,64).eq.0) then
             j = 1
             if (.not.unito) j = 2
             write (output,2205) lb10(j)
 2205  format('0geom.no.',2x,'surface axial mesh point temperatures ',
     & a/' and side')
             ih = filndx(32)
             do 450 m = 1,nrflht(ih)
               jo = ihtptr(lhtrfl(ih)+filndx(8)) + filndx(8)
               if (iand(htopt(jo),2048) .ne. 0) then
                 ipx(1) = htstno(jo)/1000
c  Writeout the surface temperatures for all axial mesh pts.
c  Pick up temperatures from reflood file.  Store in scratch
c  space for editing.  itp is number of axial points.  ii points
c  to start of new nodal temperature array.  jj points to last
c  column of nodal temperatures in new nodal temperature array.
c  iglrfl(ih) = maximum allowed number of axial fine mesh points
c  iglrfl(ih+i) = current number of axial fine mesh points
                 itp = iglrfl(ih+1)
                 ii = inxrfl(ih+2) + iglrfl(ih)*htnmpt(jo)
                 jj = ii + itp * (htnmpt(jo) - 1)
                 ie = inscr1 + itp * 2 -1
                 do k=inscr1,ie,2
                   fa(k) = tmprfn(ii)
                   fa(k+1) = tmprfn(jj)
                   ii = ii + 1
                   jj = jj + 1
                 enddo
                 if (.not.unito) then
                   do k = inscr1,ie
                     fa(k) = (fa(k) - degf2)*degf1
                   enddo
                 endif
                 write (output,2206) ipx(1),lr(1),(fa(k),k=inscr1,ie,2)
 2206  format(i5,1x,a5,1p,10g12.5,18(/11x,10g12.5))
                 write (output,2206) ipx(1),lr(2),(fa(k+1),
     &           k=inscr1,ie,2)
               endif
               ih = ih + nhtga
  450        continue
           endif
         endif
       endif
  460  continue
$if def,selap
c  Edit scdap results.
       if (iand(ihlppr(2),ishft(1,24)).ne.0) then
       if (scntrl(1)) call majscd
       call upsout
c  Edit fission product transport information.
       if (filid(34) .ne. 0.0 .and.
     &  iand(ihlppr(2),ishft(1,18)).ne.0 ) then
         i34 = filndx(34)
         if (fpactv(i34)) then
           write (output,'(1H0,40x,a)') 'Fission product transport'
           nbin = fpnbin(i34)
           nsp = fpnsp(i34)
           isysk = fpsysk(i34)
           ivolk = fpvolk(i34)
           isrfk = fpsrfk(i34)
           ispvk = fpspvk(i34)
           ispsk = fpspsk(i34)
           isys1 = i34 + fpsyso(i34)
           isysn = isys1 + (fpnsys(i34)-1)*isysk
           do 60 isys = isys1,isysn,isysk
             write (output,"('0',a,i3)")
     &       'Hydrodynamic system',fpsysn(isys)
             ivol1 = i34 + fpvolo(isys)
             ivoln = ivol1 + (fpnvol(isys)-1)*ivolk
             do ivol = ivol1, ivoln, ivolk
               ipx(1) = fpvoln(ivol)/1000000
               ipx(2) = fpvoln(ivol) - ipx(1)*1000000
               write (output,'(i4,1H-,i6.6)') (ipx(j),j=1,2)
               ch = '+'
               ksp = i34
               isp1 = ivol
               ispn = isp1 + (nsp-1)*ispvk
               do isp = isp1,ispn,ispvk
                 write (output,'(a,16x,a5,1p,4(2x,a,g12.4),
     &           2(i5,g12.4)/(22x,6(i5,g12.4)))')
     &           ch, fpsp(ksp),
     &           'src', fpsrc(isp), 'tot', fpvtm(isp),
     &           'liq', fpliq(isp), 'vap', fpvap(isp),
     &           (ibin,fpbin(isp+ibin-1),ibin=1,nbin)
                 ch = ' '
                 ksp = ksp + 1
               enddo
               nsrf = fpnsrf(ivol)
               if (nsrf .gt. 0) then
                 isrf1 = i34 + fpsrfo(ivol)
                 isrfn = isrf1 + (nsrf-1)*isrfk
                 do isrf = isrf1, isrfn, isrfk
                   ipx(1) = fpsrfn(isrf)/1000
                   ipx(2) = fpsrfn(isrf) - ipx(1)*1000
                   ipx(3) = fpsflr(isrf) + 1
                   write (output,'(17x,i5,1H-,i3.3,2x,a5)')
     &             (ipx(j),j=1,2),lr(ipx(3))
                   ksp = i34
                   ch = '+'
                   isp1 = isrf
                   ispn = isp1 + (nsp-1)*ispsk
                   do isp = isp1,ispn,ispsk
                     write (output,'(a,32x,a6,1p,3(3x,a,g12.4))')
     &               ch, fpsp(ksp), 'mc', fpsfmc(isp),
     &               'ma', fpsfma(isp), 'mp', fpsfmp(isp)
                     ch = ' '
                     ksp = ksp + 1
                   enddo
                 enddo
               endif
             enddo
             write (output,'(1H ,a)') 'System totals'
             ch = '+'
             ksp = i34
             isp1 = isys
             ispn = isp1 + (nsp-1)
             do 66 isp = isp1,ispn
               write (output,'(a,16x,a5,1p,2x,a,g12.4)')
     &         ch, fpsp(ksp), 'tot', fpsysm(isp)
               ch = ' '
               ksp = ksp + 1
   66        continue
   60      continue
         endif
       endif
       if (scntrl(1)) then
         if (ncpmsh .gt. 0) then
c  Edit couple output.
           call majcou
         endif
         if (nrlc .gt. 0) then
           write (output,1100) nrlc, timehy
 1100  format ('0  Couple wall creep damage terms for', i3,
     & ' locations at time =', g15.6)
           idam = 0
           do i=1,nrlcmx
             if (nel(i) .gt. 0) then
               if (dcrepc(i) .gt. 0.0) then
                 idam = idam + 1
                 write (output,1120) i, dcrepc(i)
 1120  format ('0  location', 10x, i3, '   couple wall   ', 10x,
     & '   damage term =', e13.5)
               endif
             endif
           enddo
           if (idam .eq. 0) then
             write (output,1170)
 1170  format ('0    All couple wall creep damage terms = 0.0')
           endif
         endif
c
         if (nrlh .gt. 0) then
           write (output,1200) nrlh, timehy
 1200  format ('0  Heat structure creep damage terms for', i3,
     & ' locations at time =', g15.6)
           idam = 0
           do i=1,nrlhmx
             if (nhs(i) .gt. 0) then
               if (dcreph(i) .gt. 0.0) then
                 idam = idam + 1
                 write (output,1230) i, nhs(i), dcreph(i)
 1230  format ('0  location', i3, '   heat structure', i8,
     & '   damage term =', e13.5)
               endif
             endif
           enddo
           if (idam .eq. 0) then
             write (output,1270)
 1270  format ('0    All heat structure creep damage terms = 0.0')
           endif
         endif
       endif
       endif
$endif
c  Edit control system information.
       if (filid(27) .ne. 0.0 .and.
     &  iand(ihlppr(2),ishft(1,19)).ne.0 ) then
         write (output,2039) timehy
 2039  format ('0',20x,'Control variable edit; at time= ',1p,g15.6
     &,'  sec')
         i = filndx(27)
         it = 1
  501    itl = min(it+1,cnvnum(filndx(27)))
         k = 0
         do j = it,itl
           k = k + 1
           ipx(4*k-3) = cnvpnm(i)
           px(4*k-2) = cnvnam(i)
           chwrd(k) = cnvtpa(cnvtyp(i))
           px(4*k) = cnvarn(i)*cnvaro(i)
           i = i + cnvlen(i)
         enddo
         write (output,2038) (ipx(4*j-3),px(4*j-2),chwrd(j),px(4*j),
     &   j=1,k)
 2038  format (i5,2a13,1p,g17.6,10x,i5,2a13,g17.6)
         it = it + 2
         if (it .le. cnvnum(filndx(27))) go to 501
         if (iand(cnvopt(filndx(27)),4) .ne. 0) then
           if (unito) then
             write (output,2041)
 2041  format ('0Generator     torque (N-m)     input power (Watt)')
           else
             write (output,2042)
 2042  format ('0Generator     torque (ft-lbf)  input power (Watt)')
           endif
           i = filndx(27)
           do m = 1,cnvnum(i)
             if (cnvtyp(i).eq.19 .and. iand(cnvnop(i),16).ne.0) then
               k = i +4*cnvnpa(i)
               px(1) = gentrq(k)
               if (.not.unito) px(1) = px(1)*ctrq
               write (output,2043) cnvpnm(i),px(1),genpow(k)
 2043  format (i10,1p,2g17.6)
             endif
             i = i + cnvlen(i)
           enddo
         endif
       endif
       return
 7040  format(i4,'-',i6.6,4g13.5)
      end
