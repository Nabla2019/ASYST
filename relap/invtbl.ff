       module invtbl
!  Holds data for inverted heat junction data.
!
!  Cognizant engineer: rjw.
!
       implicit none
       integer, parameter, private :: kr=selected_real_kind(12,200)
       type invjt
         integer invjun,invvno,invvnx
       end type invjt
!
!  invjun  Reverse coordinate direction flag, 0 if normal, 1 if reverse
!          (1 bit); connection flag, 0 if inlet, 1 if outlet (2 bit);
!          from/to flag, 0 if from, 1 if to (4 bit); momentum flux off
!          flag, 0 if momentum flux on, 1 if momentum flux off (8 bit).
!  invvno  Position number of junction in junction block.
!  invvnx  Index of junction.
!
       integer invofs,invtno
!  invofs  Offset used to compute indexes sotred in invvnx.
!  invtno  Total number of sets in file.
       type (invjt), allocatable :: invj(:)
!
       contains
!
       subroutine invtblclear
!  Deallocates inverted junction tables.
!
       if (allocated(invj)) deallocate (invj)
       return
       end subroutine invtblclear
!
       subroutine getinvjsp
!  Allocates space for inverted heat structure data block.
!
       implicit none
!
       allocate (invj(invtno))
       return
       end subroutine getinvjsp
!
       subroutine delinvjsp
!  Deallocates space for inverted heat structure data block.
!
       implicit none
!
       deallocate (invj)
       return
       end subroutine delinvjsp
!
       subroutine invtblread (fl)
!  Reads inverted heat structure data from restart records, obtaining
!  space if necessary.
!
       implicit none
       logical fl
       include 'ufiles.h'
!
       integer iwrd,len,lent
       character*8 filname
!
       read (rstplt) len,iwrd
       inquire (iolength=lent) filname,invofs,invtno
       read (rstplt) filname,invofs,invtno
       if (fl) then
         if (allocated(invj)) call delinvjsp
         call getinvjsp
       endif
       if (invtno .ne. 0) then
         read (rstplt) len,iwrd
         inquire (iolength=lent) invj
         read (rstplt) invj
       endif
       return
       end subroutine invtblread
!
       subroutine invtblwrite
!  Writes inverted heat structure data from restart records.
!
       implicit none
       include 'ufiles.h'
!
       integer :: iwrd=1,len
       character*8 :: filname='invtbl'
!
       inquire (iolength=len) filname,invofs,invtno
       write (rstplt) len,iwrd
       write (rstplt) filname,invofs,invtno
       if (invtno .ne. 0) then
         inquire (iolength=len) invj
         write (rstplt) len,iwrd
         write (rstplt) invj
       endif
       return
       end subroutine invtblwrite
       end module invtbl
