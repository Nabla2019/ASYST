       subroutine display01
$if def,gui
!  Puts up display of volume to volume connections.
$if -def,ifortc,1
       use opengl_gl
$if def,ifortc,1
       use ifopngl
       use hynmod
       use invtbl
       implicit none
       include 'contrl.h'
       include 'comctl.h'
       include 'fast.h'
       include 'jundat.h'
       include 'voldat.h'
!
       real*8 rate(4),srate(4,0:1)
       real*8, parameter :: xlb=2.204622622
       real*8, parameter :: eng=4.2992261e-4
       real valy
       integer i,ip,j,l,n,nf
       character :: pbuf0*14='(Enter number)'
       character :: pbuf1*43='Volume Connections To Volume '
       character :: pbuf2*78
       character frto(0:1)*5,otin(0:1)*5
       character lablm(2)*13,lablu(2)*13
!
       data frto/'  to ','from '/,otin/'  in ',' out '/
       data lablm/'       (kg/s)','      (lbm/s)'/
       data lablu/'      (Watts)','      (Btu/s)'/
!
       call displaytp
!
       valy = hx - 40
       if (intyp .ne. 2) then
         if (itemnum .eq. 0) then
           pbuf1(30:43) = pbuf0
           call prints (2.0,valy,pbuf1(1:43),1)
         else
           write (pbuf1(30:39),"(i10.9)") itemnum
           call prints (2.0,valy,pbuf1(1:39),1)
         endif
         if (itemindx .ne. 0) then
           valy = valy - 20
           write (pbuf2,"(4x,'Jun.no',19x,'Lq mass rt  Lq enrgy rt   Vp 
     &mass rt  Vp enrgy rt')")
           call prints (2.0,valy,pbuf2,1)
           valy = valy - 20
           if (unito) then
             ip = 1
           else
             ip = 2
           endif
           write (pbuf2,"(26x,4a13)") (lablm(ip),lablu(ip),i=1,2)
           call prints (2.0,valy,pbuf2,1)
           valy = valy - 20
           srate = 0.0
           l = invfnd(2,itemindx)
           do n = 1,invcnt(2,itemindx)
             j = invj(l)%invvnx
             rate(1) = voidfj(j)*rhofj(j)*velfj(j)
             rate(2) = rate(1)*ufj(j)
             rate(3) = voidgj(j)*rhogj(j)*velgj(j)
             rate(4) = rate(3)*ugj(j)
             if (.not.unito) then
               rate(1:3:2) = rate(1:3:2)*xlb
               rate(2:4:2) = rate(2:4:2)*eng
             endif
             if (iand(invj(l)%invjun,4) .eq. 0) then
               rate = -rate
               ip = ij2nx(2,j)
               nf = 0
             else
               ip = ij1nx(2,j)
               nf = 1
             endif
             write (pbuf2,"(i10.9,x,a5,i10.9,4es13.5)") 
     &       junno(2,j),frto(nf),volno(2,ip),rate
             call prints (2.0,valy,pbuf2,1)
             valy = valy - 20
             if (rate(1) .ge. 0.0) then
               srate(1:2,0) = srate(1:2,0) + rate(1:2)
             else
               srate(1:2,1) = srate(1:2,1) + rate(1:2)
             endif
             if (rate(3) .ge. 0.0) then
               srate(3:4,0) = srate(3:4,0) + rate(3:4)
             else
               srate(3:4,1) = srate(3:4,1) + rate(3:4)
             endif
             l = l + 1
           enddo
           do ip = 1,0,-1
             write (pbuf2,"('     Total ',a5,10x,4es13.5)")
     &       otin(ip),srate(:,ip)
             call prints (2.0,valy,pbuf2,1)
             valy = valy - 20
           enddo
           srate(:,0) = srate(:,0) + srate(:,1)
           write (pbuf2,"('       Net',16x,4es13.5)") srate(:,0)
           call prints (2.0,valy,pbuf2,1)
         endif
       endif
$endif
       return
       end subroutine display01
