*mlist
       function tempifc(teempi)
c  Define an equation to relate the interfacial temperature
c  and interfacial vapor pressure with other given RELAP
c  variables.
c
c  Coginzant engineer: rar.
c  argument:
c
c  INPUT:       IVL     -       volume index
c               QUALA   -       noncondensable mass fraction
c               P       -       pressure
c               Tf
c               Tg
c
c  OUTPUT:      tempifc(teempi)
c
c***************************************************************
c
c  Calling routine:
c			tempi
c                       zbrent
c
c***************************************************************
c
       implicit none
       real tempifc,teempi
       include 'fast.h'
       include 'cmpdac.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'mxnfcd.h'
       include 'statec.h'
       include 'stcblk.h'
       include 'stcom.h'
       include 'trpblk.h'
       include 'ufiles.h'
       include 'voldat.h'
       include 'jundat.h'
       include 'lvectr.h'
       include 'scrtch.h'
c
       real psati,mstar,sannu,wmolex,molh2o,molnoncnd,func,mflux
       logical err
c
       common /testa1/ hd,omega,gamaf,gamag,mstar,psati,ivl
       common /testa2/ mflux,kuf,kug,kum,func,wmolex
       real hd,s(26),omega,gamaf,gamag,deltah
       real higdot,hifdot,kug,kuf,kum
       integer ivl
c
       data err/.false./
       data molh2o,molnoncnd /18.0, 29.0/
c
c  To calculate the ratio of the molecular weight.
c      mstar = molh2o/molnoncnd
       mstar = molh2o/wmolex
c
c  Calculate properties at tempi.
c
c  To obtain the properties for the interface gas.
c
       s(1) = teempi
       s(9) = 1.0
       call sth2x1(fa(ndxstd),s,err)
c
       psati = s(2)
c  deltah = extv01(ivl).
       deltah = 1000000.0
       sannu = 80.0
c
c  Define the interfacial temparature equation.
       omega = ((.62*psati/(p(ivl)-psati)+1))/
     & (.62*pps(ivl)/(p(ivl)-pps(ivl))+1)
c  0.383 come from the molar based to mass based fraction in mass flux
c  calculation conversion.
       mflux = 0.383*hd*rhog(ivl)*log((omega))
       if (floreg(ivl).eq.6 .and. sannu .ne. 0.0) then
          higdot = hig(ivl)/sannu
          hifdot = hif(ivl)/sannu
        else
c  If in the vertical stratified flow regime.
          higdot = hig(ivl)*dl(ivl)
          hifdot = hif(ivl)*dl(ivl)
        endif
        kuf = hifdot*(teempi-tempf(ivl))
        kug = higdot*(tempg(ivl)-teempi)
        kum = -mflux*deltah
c     endif
c
      func = kug -kuf +kum
      tempifc = func
      return
      end
