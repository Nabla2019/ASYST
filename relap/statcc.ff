*mlist
       module statcc
!  Holds statistics information for volumes and junctions.
!
!  Cognizant engineer: rjw.
!
       implicit none
       integer, parameter, private :: kr=selected_real_kind(12,200)
!
       type statvt
         integer stlte1,stlte2,strap1,strap2,strcl1,strcl2,strdp1,
     &   strdp2,strex1,strex2,strpe1,strpe2,strte1,strte2,strxl1,
     &   strxl2,stscl1,stscl2,stvpk1,stvpk2
       end type statvt
!  stlte1  Number of times volume had largest mass error in entire
!          problem.
!  stlte2  Number of times volume had largest mass error in this major
!          print interval.
!  strap1  Number of time step repeats due to air appearance in this
!          volume in entire problem.
!  strap2  Number of time step repeats due to air appearance in this
!          volume in this major print interval.
!  strcl1  Number of times courant limit for this volume caused reduced
!          time step in entire problem.
!  strcl2  Number of times courant limit for this volume caused reduced
!          time step in this major print interval.
!  strdp1  Number of time step repeats due to pressure change in this
!          volume in entire problem
!  strdp2  Number of time step repeats due to pressure change in this
!          volume in this major print interval
!  strex1  Number of times state extrapolation in volume caused reduced
!          time steps in entire problem.
!  strex2  Number of times state extrapolation in volume caused reduced
!          time steps in this major print interval.
!  strpe1  Number of times water property error in volume caused
!          reduced time steps in entire problem.
!  strpe2  Number of times water property error in volume caused
!          reduced time steps during this major print interval.
!  strte1  Number of times mass error in volume caused reduced time
!          steps in entire problem.
!  strte2  Number of times mass error in volume caused reduced time
!          steps during this major print interval.
!  strxl1  Number of times quality adjustment in volume caused reduced
!          time steps in entire problem.
!  strxl2  Number of times quality adjustment in volume caused reduced
!          time steps in this major print interval.
!  stscl1  Number of times volume had smallest courant limit in entire
!          problem.
!  stscl2  Number of times volume had smallest courant limit in this
!          major print interval.
!
       type statjt
         integer stccf1,stccf2,stjck1,stjck2,stjpk1,stjpk2
       end type statjt
!  stccf1  Number of times junction used ccfl correlation in entire
!          problem.
!  stccf2  Number of times junction used ccfl correlation in this major
!          print interval.
!  stjck1  Number of times junction choked in entire problem.
!  stjck2  Number of times junction choked in this major print
!          interval.
!
       real(kr) stscpu,stsdta,stsdtn,stsdtx
!  stscpu  Cpu time required.
!  stsdta  Sum of time steps for averge over edit.
!  stsdtn  Minimum time step during edit.
!  stsdtx  Maximum time step during edit.
       integer strdc1,strdc2,stsatp,stsreq
!  strdc1  Number of repeated time steps in entire problem.
!  strdc2  Number of repeated time steps in this major print interval.
!  stsatp  Total number of advancements.
!  stsreq  Total number of requested advancements.
!
       type (statvt), allocatable :: statv(:)
       type (statjt), allocatable :: statj(:)
!
       contains
!
       subroutine statcclear
!  Deallocates volume and junction statistics information.
       implicit none
!
       if (allocated(statv)) deallocate (statv)
       if (allocated(statj)) deallocate (statj)
       end subroutine statcclear
!
       subroutine statccread (fl)
!  Reads statistics information for volumes from the restart-plot file.
       implicit none
       logical fl
       include 'ufiles.h'
!
       integer iwrd,len,lent,nv,nj
!
       read (rstplt) len,iwrd
       inquire (iolength=lent) stscpu,stsdta,stsdtn,stsdtx,strdc1,
     & strdc2,stsatp,stsreq,nv,nj
       if (lent .ne. len*iwrd) call fabend
       read (rstplt) stscpu,stsdta,stsdtn,stsdtx,strdc1,strdc2,stsatp,
     & stsreq,nv,nj
       if (fl) then
         if (allocated(statv)) deallocate (statv)
         if (nv .ne. 0) allocate (statv(nv))
         if (allocated(statj)) deallocate (statj)
         if (nj .ne. 0) allocate (statj(nj))
       endif
       if (nv .ne. 0) then
         read (rstplt) len,iwrd
         inquire (iolength=lent) statv
         if (lent .ne. len*iwrd) call fabend
         read (rstplt) statv
       endif
       if (nj .ne. 0) then
         read (rstplt) len,iwrd
         inquire (iolength=lent) statj
         if (lent .ne. len*iwrd) call fabend
         read (rstplt) statj
       endif
       return
       end subroutine statccread
!
       subroutine statccwrite
!  Writes statistics information for volumes to the restart-plot file.
       implicit none
       include 'comctl.h'
       include 'fast.h'
       include 'jundat.h'
       include 'ufiles.h'
       include 'voldat.h'
!
       integer, parameter :: iwrd=1
       integer len
!
       inquire (iolength=len) stscpu,stsdta,stsdtn,stsdtx,strdc1,
     & strdc2,stsatp,stsreq,nvols(filndx(4)),njuns(filndx(5))
       write (rstplt) len,iwrd
       write (rstplt) stscpu,stsdta,stsdtn,stsdtx,strdc1,strdc2,stsatp,
     & stsreq,nvols(filndx(4)),njuns(filndx(5))
       if (nvols(filndx(4)) .ne. 0) then
         inquire (iolength=len) statv
         write (rstplt) len,iwrd
         write (rstplt) statv
       endif
       if (njuns(filndx(5)) .ne. 0) then
         inquire (iolength=len) statj
         write (rstplt) len,iwrd
         write (rstplt) statj
       endif
       return
       end subroutine statccwrite
!
       end module statcc
