*mlist
       subroutine trip
c
c
c  Tests trip conditions and sets trip conditions and time of trip.
c
c  Cognizant engineer: rjw.
c
       implicit none
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       include 'trpblk.h'
c
       integer i,l,n
       real timx,xl1,xl2
       logical ltrip,rtrip
c
       l = filndx(18)
       timx = timehy
       timehy = timehy - dt
c  Variable trips.
       do 10 i = 1,ntrpnv(filndx(18))
         xl1 = fa(ntrpc1(l+1))
         if (ntrpc2(l+1) .ne. 0) go to 36
         xl2 = trpcon(l)
         go to 33
   36    xl2 = fa(ntrpc2(l+1))
   34    if ((iand(ntrpop(l),4).ne.0 .and. xl1.lt.0.0) .or.
     &   (iand(ntrpop(l),8).ne.0 .and. xl2.lt.0.0)) go to 15
         xl2 = xl2 + trpcon(l)
   33    n = ishft(ntrpop(l),-24)
         go to (21,22,23,24,25,26), n
         call fabend
   21    ltrip = xl1 .eq. xl2
         go to 13
   22    ltrip = xl1 .ne. xl2
         go to 13
   23    ltrip = xl1 .gt. xl2
         go to 13
   24    ltrip = xl1 .ge. xl2
         go to 13
   25    ltrip = xl1 .lt. xl2
         go to 13
   26    ltrip = xl1 .le. xl2
c
   13    rtrip = trptim(l) .ge. 0.0
         if (.not.rtrip .and. ltrip) then
           trptim(l) = timehy
         else if (iand(ntrpop(l),2).eq.0 .and. rtrip .and. .not.ltrip)
     &   then
           trptim(l) = -1.0
         endif
   15    l = l + ntvskp
   10  continue
c
c  Logical trips.
       if (ntrpnl(filndx(18)) .eq. 0) go to 100
       do 60 i = 1,ntrpnl(filndx(18))
         ltrip = trptm(ntrtr1(l+1)).ge.0.0 .neqv. iand(ntrpop(l),16)
     &   .ne.0
         rtrip = trptm(ntrtr2(l+1)).ge.0.0 .neqv. iand(ntrpop(l),32)
     &   .ne.0
         n = ishft(ntrpop(l),-24)
         if (n - 2) 71,72,73
   71    ltrip = ltrip .or. rtrip
         go to 63
   72    ltrip = ltrip .and. rtrip
         go to 63
   73    ltrip = ltrip .neqv. rtrip
c
   63    rtrip = trptim(l) .ge. 0.0
         if (.not.rtrip .and. ltrip) then
           trptim(l) = timehy
         else if (iand(ntrpop(l),2).eq.0 .and. rtrip .and. .not.ltrip)
     &   then
           trptim(l) = -1.0
         endif
         l = l + ntlskp
   60  continue
c
  100  timehy = timx
       return
       end
