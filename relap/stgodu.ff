*mlist
       subroutine stgodu
c  Sets junction and volume flags for using second-order Godunov method.
c
c  Cognizant engineer: kuo.
c
       use invtbl
       implicit none
       include 'fast.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'jundat.h'
       include 'lvectr.h'
       include 'scrtch.h'
       include 'statec.h'
       include 'stcom.h'
       include 'tsctlc.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables
       integer i,j,jcexfr,jcexto,kv,l,ls,loop,lv,m,
     & ncnf1,ncnf2,ncnf3,ncnf4,ncnf5,ncnf6,
     & vctrl5,vctrl6,jcex23,jcex24,inv4
c
       if (help .ne. 0) write(output,"(' ##### stgodu print out #####'/)
     &")
c
c  Over volume in the system.
       l = 1
       i = filndx(4)
       do m = 1,nvols(i)
         ncnf1 = 0
         ncnf2 = 0
         ncnf3 = 0
         ncnf4 = 0
         ncnf5 = 0
         ncnf6 = 0
c
         if (help .ne. 0) write(output,"(' volno =' i15)") volno(i)
c
c  First junction loop.
         ls = l
c  Loop over junctions in the volume.
         do loop = 1,invcnt(i)
           j = invj(l)%invvnx
           kv = ij1nx(j)
           lv = ij2nx(j)
           jcexfr = iand(ishft(jcex(j),-12),7)
           jcexto = iand(ishft(jcex(j),-9), 7)
c  From junction.
           if (iand(invj(l)%invjun,4) .eq. 0) then
             if (volno(i) .eq. volno(kv)) then
               if (jcexfr .eq. 0) ncnf1 = ncnf1 + 1
               if (jcexfr .eq. 1) ncnf2 = ncnf2 + 1
               if (jcexfr .eq. 2) ncnf3 = ncnf3 + 1
               if (jcexfr .eq. 3) ncnf4 = ncnf4 + 1
               if (jcexfr .eq. 4) ncnf5 = ncnf5 + 1
               if (jcexfr .eq. 5) ncnf6 = ncnf6 + 1
             endif
             if (volno(i) .eq. volno(lv)) then
               if (jcexto .eq. 0) ncnf1 = ncnf1 + 1
               if (jcexto .eq. 1) ncnf2 = ncnf2 + 1
               if (jcexto .eq. 2) ncnf3 = ncnf3 + 1
               if (jcexto .eq. 3) ncnf4 = ncnf4 + 1
               if (jcexto .eq. 4) ncnf5 = ncnf5 + 1
               if (jcexto .eq. 5) ncnf6 = ncnf6 + 1
             endif
c  To junction.
           else
             if (volno(i) .eq. volno(kv)) then
               if (jcexto .eq. 0) ncnf1 = ncnf1 + 1
               if (jcexto .eq. 1) ncnf2 = ncnf2 + 1
               if (jcexto .eq. 2) ncnf3 = ncnf3 + 1
               if (jcexto .eq. 3) ncnf4 = ncnf4 + 1
               if (jcexto .eq. 4) ncnf5 = ncnf5 + 1
               if (jcexto .eq. 5) ncnf6 = ncnf6 + 1
             endif
             if (volno(i) .eq. volno(lv)) then
               if (jcexfr .eq. 0) ncnf1 = ncnf1 + 1
               if (jcexfr .eq. 1) ncnf2 = ncnf2 + 1
               if (jcexfr .eq. 2) ncnf3 = ncnf3 + 1
               if (jcexfr .eq. 3) ncnf4 = ncnf4 + 1
               if (jcexfr .eq. 4) ncnf5 = ncnf5 + 1
               if (jcexfr .eq. 5) ncnf6 = ncnf6 + 1
             endif
           endif
           l = l + 1
         enddo
c
c  Second junction loop.
c  Set junction flag for used in godunov method for boron.
         l = ls
c  Loop over junctions in the volume.
         do loop = 1,invcnt(i)
           j = invj(l)%invvnx
           kv = ij1nx(j)
           lv = ij2nx(j)
c  Set junction flag to zero jcex bit pos.23,24.
           jcex(j) = iand(jcex(j),not(ishft(1,22)))
           jcex(j) = iand(jcex(j),not(ishft(1,23)))
c
           jcexfr = iand(ishft(jcex(j),-12),7)
           jcexto = iand(ishft(jcex(j),-9), 7)
c
           if ((ncnf1.eq.1).and.(ncnf2.eq.1).and.
     &     (ncnf3.eq.0).and.(ncnf4.eq.0).and.
     &     (ncnf5.eq.0).and.(ncnf6.eq.0)) then
             if ((jcexto.le.1) .and. (jcexfr.le.1))
     &       jcex(j) = ior(jcex(j), ishft(1,22))
           endif
           if ((ncnf1.eq.1).and.(ncnf2.eq.1)) then
             if ((jcexto.le.1) .and. (jcexfr.le.1))
     &       jcex(j) = ior(jcex(j), ishft(1,23))
           endif
c
           if (help .ne. 0) then
             inv4 = iand(invj(l)%invjun,4)
             jcex23 = iand(ishft(jcex(j),-22),1)
             jcex24 = iand(ishft(jcex(j),-23),1)
             write (output,"(' junno(j),inv4,jcexfr,jcexto,jcex23,jcex
     &24,ncnf1,ncnf2,ncnf3,ncnf4,ncnf5,ncnf6 =',i10,3i3,2x,2i4,2x,6i3)")
     &       junno(j),inv4,jcexfr,jcexto,jcex23,jcex24, ncnf1,ncnf2,
     &       ncnf3,ncnf4,ncnf5,ncnf6
           endif
           l = l + 1
         enddo
c
c  Zero the volume flag vctrlx pos.5,6.
         vctrlx(i) = iand(vctrlx(i),not(ishft(1,4)))
         vctrlx(i) = iand(vctrlx(i),not(ishft(1,5)))
c
c  Set volume flag to use godunov method.
         if (ncnf1.eq.1 .and. ncnf2.eq.1 .and. ncnf3.eq.0 .and.
     &   ncnf4.eq.0 .and. ncnf5.eq.0 .and. ncnf6.eq.0)
     &   vctrlx(i) = ior(vctrlx(i),ishft(1,4))
c
         if (ncnf1.eq.1 .and. ncnf2.eq.1)
     &   vctrlx(i) = ior(vctrlx(i),ishft(1,5))
c
         if (help .ne. 0) then
           vctrl5 = iand(ishft(vctrlx(i),-4),1)
           vctrl6 = iand(ishft(vctrlx(i),-5),1)
           write (output,"(' vctrl5 =',i5,3x,'vctrl6 ='i5)")
     &     vctrl5, vctrl6
         endif
         i = i + ivskp
       enddo
       return
       end
