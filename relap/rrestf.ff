*mlist
       subroutine rrestf (nogof)
cmpfversion_aptplot_latest
c  Reads restart input file.
c
c  Cognizant engineer: rjw.
c
*in32 irsno
*in32 ihlpsv
*in32 iw
*in32 ia4
*in32end
c
       use hynmod
       use gentblc
       use intrac
       use invhtb
       use invtbl
       use jundat
       use lpdatc
       use scdmod
       use statcc
       use tstpctc
$if def,iua
       use uncdata
$endif
       use usrvarc
       use voldat
       implicit none
c
       logical nogof
       include 'comctl.h'
       include 'contrl.h'
       include 'fast.h'
       integer(8) ia8(lfsiz)
       integer*4 ha(2*lfsiz)
       integer*4 ia4(lfsiz)
       equivalence (ia8(1),ha(1),fa(1),ia4(1))
$if def,iua
       integer, allocatable :: cpyrst(:)
$endif
       include 'genrl.h'
       include 'machls.h'
       include 'maxmem.h'
       include 'scntl.h'
       include 'ufiles.h'
       include 'ufilef.h'
c
       integer l3a(7),l3b(10),iroutx,ncasx,
     & iccm(ncoms),iccs(ncoms),iccf(ncoms),filszo(nfiles),inx(nfiles)
       integer i,ias,in,inxx,iost,ipr,irsno(7),isiz,iw(10),ix,ixb,l1,
     & lcntgs,lcontg,len,lenb,lenc,lx
       integer ihlpsv(2)
       real rsno(7),fil(nfiles),iv
       integer(8) rw(10)
       equivalence (rsno(1),irsno(1)),(rw(1),iw(1))
       real fid,fsav,ftbnid
       logical :: cpy=.false.,fl,frst,hit,lperr,rdc,rdebug,tfail
       character ihldc*108,ihldp*64,crstrc*24,labl1(2)*9,chwrd*8
       character*8 blnk,dummy
       integer iwrd
       integer j
c
       data l3a/104,0,0,1,0,1,-1/
       data l3b/103,0,1,7,0,1,0,2,-1,-1/
       data crstrc/'restart-plot file'/
       data labl1/'steady st','transient'/
       data blnk/'        '/
       include 'machlf.h'
c
       rdebug = .false.
       rdc = .false.
c  Process input control card.
       fil = 0.0
       inx = 0
       nogof = .false.
       l3b(6) = 1
       call inp2 (fa(filndx(1)),rsno,l3b)
       if (l3b(6) .gt. 0) go to 30
   31  nogof = .true.
       go to 41
   30  if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2024) irsno(1)
 2024  format ('0Desired restart number is',i9,'.')
c
       if (l3b(6) .gt. 1) then
         write (chwrd,'(a8)') rsno(2)
       else
         chwrd = 'ncmpress'
       endif
       if (chwrd .eq. 'cmpress') then
         print = ior(print,8192)
         if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     &   write (output,2101)
 2101  format ('0Compressed option is not available, uncompressed restar
     &-plot file is assumed.')
       elseif (chwrd .eq. 'ncmpress') then
         if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     &   write (output,2102)
 2102  format ('0Uncompressed restart-plot file is assumed.')
       else
         nogof = .true.
         go to 41
       endif
       if (l3b(6) .gt. 2) then
         if (l3b(6) .lt. 7) then
           read (blnk,'(a8)') rsno(2)
           do j = l3b(6)+1,7
             rsno(j) = rsno(2)
           enddo
         endif
         if (iand(ihlppr(2),ishft(1,22)).ne.0) then
           write (filsch(5)(1:40),'(5a8)') (rsno(j),j=3,7)
           write (output,2107) trim(filsch(5))
 2107  format ('0Restart-plot file name changed to: ',a)
         endif
       endif
c
$if def,iua
       len = 0
       if (uncmode0) then
         open (unit=inpout,file=filsch0,status='old',
     &   form='unformatted',iostat=len)
         if (len .ne. 0) stop "rrestf/marina -1"
         open (unit=rstplt,file=filsch(5),status='new',
     &   form='unformatted',iostat=len)
         if (len .ne. 0) stop "rrestf/marina -2"
         do
           read (inpout,iostat=iost) len,iwrd
           if (iost .gt. 0) stop "rrestf/marina -3"
           if (iost .lt. 0) exit
           write (rstplt) len,iwrd
           if (iwrd .eq. 8) len = len + len
           allocate (cpyrst(len))
           read (inpout) cpyrst(1:len)
           write (rstplt) cpyrst(1:len)
           deallocate (cpyrst)
         enddo
         close (inpout); close (rstplt)
       endif
$endif
       len = 0
       open (unit=rstplt,file=filsch(5),status='old',
     & form='unformatted',iostat=len)
       if (len .ne. 0) then
         write (tty,2013) len,trim(filsch(5))
 2013  format ('Open failure number',i8,' on file ',a,', perhaps file is
     & not available.')
         write (output,2014) len,trim(filsch(5))
 2014  format ('0******** Open failure number',i8,' on file ',a,' perhap
     &s file is not available.')
         go to 31
       endif
   21  rewind rstplt
       read (rstplt,iostat=iost,end=27,err=28) len,iwrd
       read (rstplt,iostat=iost,end=27,err=28) rw(1:10)
       if (len .eq. 10) go to 39
       write (output,2016)
 2016  format ('0******** Wrong length on first record of restart input
     &file.')
       go to 31
   27  write (output,2010)
 2010  format ('0******** Eof encountered on first read of restart input
     & file, no file available.')
       go to 31
   28  write (output,"('0******** Read error,',i5,' on first record on f
     &ile rstplt.')") iost
       go to 31
   39  write (ihldc(1:24),'(3a8)') rw(4:6)
       if (ihldc(1:24) .eq. crstrc) go to 40
       write (output,2017)
 2017  format ('0******** Label in first record of restart input file is
     & incorrect.')
       go to 31
   40  if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2018) rw(1:3),rw(7:9),labl1(iw(10))
 2018  format ('0Restart input file was written by program ',3a8,' on ',
     & 3a8,', ',a9,' run.')
       call aatl
c  Process restart output control card.
   41  if (.not.rdebug) then
         l3a(6) = 1
         call inp2 (fa(filndx(1)),iv,l3a)
         if (l3a(6)) 10,11,12
   12    write (chwrd,'(a8)') iv
         if (chwrd .eq. 'none') then
           if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     &     write (output,2005)
 2005  format ('0No restart-plot file is to be written.')
           go to 19
         else
           write (output,2001)
 2001  format ('0Incorrect option on card 104.')
           go to 10
         endif
   11    if (iand(ihlppr(2),ishft(1,22)).ne.0 .or. (iand(iroute,63).ne.3
     &   .and. iand(iroute,63).ne.4)) write (output,2002)
 2002  format ('0Restart-plot file will be written.')
         print = ior(print,1)
         go to 19
   10    fail = .true.
c  Save information from common that will be overlaid by restart reads.
   19    newrst = ishft(iroute,-6) .ne. iw(10)
         if (nogof) then
           fail = .true.
           return
         endif
         ihlpsv(1) = ihlppr(1)
         ihlpsv(2) = ihlppr(2)
         ipr = print
         iroutx = iroute
         ncasx = ncase
         tfail = fail
         ihldc = ctitle
         ihldp = ptitle
         do i = 1,ncoms
           iccm(i) = comdat(i)
           iccs(i) = comdln(i)
           iccf(i) = filflg(i)
         enddo
         fsav = filid(1)
         inxx = filndx(1)
         isiz = filsiz(1)
c  Get space for first restart record or plot record.
         fid = ftbnid(1)
       else
         do i = 1,nfiles
           if (fil(i) .ne. 0.0) then
             call ftbdel (fil(i))
             fil(i) = 0.0
             inx(i) = 0
           endif
         enddo
         call ftbdel (fid)
       endif
       call ftbrsv (fid,5,-1,ix)
       ias = locf4(fa(1)) - 1
       frst = .true.
       lenb = 0
       lperr = .false.
c  Read restart record or plot record.
   63  read (rstplt,iostat=iost,end=74,err=62) lx,iwrd
       read (rstplt,end=74,iostat=iost,err=62) (ia8(in+ix-1),in=1,lx)
       if (rdebug) write (output,3001) lx,ia8(ix:ix+2)
 3001  format (' ',i10,a10,2i10)
       write (chwrd,'(a8)') ia8(ix)
       if (chwrd .ne. 'plotrec') go to 70
       if (lx .eq. lenc) go to 63
       go to 56
   70  if (chwrd .ne. 'plotinf') go to 57
       if (lx .ne. 3) go to 56
       do i = 1,nfiles
         if (fil(i) .eq. 0.0) cycle
         call ftbdel (fil(i))
         fil(i) = 0.0
         inx(i) = 0
       enddo
       if (rdc) then
         call ftbexp (0,maxscm,maxlcm)
         rdc = .false.
         call ftbsft (2.0,isiz,1,inxx)
       endif
   60  lenb = ia4(ix+1)
       l1 = lenb + 2
       lenc = ia4(ix+2)
       if (lcntgs(fid,1) .lt. l1) go to 78
       call ftbsft (fid,l1,2,ix)
       l1 = lcontg(1)
       go to 63
   57  if (chwrd.ne.'plotalf' .and. chwrd.ne.'plotnum') go to 58
       if (lx .eq. lenb) go to 63
   56  if (lperr) go to 63
       write (output,2041)
 2041  format ('0******** Wrong length record in plotinf, plotalf, plotn
     &um, or plotrec record of rstplt file.')
       lperr = .true.
       tfail = .true.
       go to 63
   58  if (chwrd .ne. 'restart') go to 65
       if (lx .ne. 3) go to 59
c  Read restart information and copy to new restart file.
       fl = iand(ia8(ix+1),16) .ne. 0
       if (fl) then
         read (rstplt,iostat=iost,end=74,err=62) lx,iwrd
         read (rstplt,iostat=iost,end=74,err=62) (ia8(i+ix+2),i=1,lx)
         if (rdebug) write (output,3002) lx,ia8(ix+3)
 3002  format ('         20',i10,a10)
         if (lx .ne. 20) go to 66
         write (ptitle,'(8a8)') (ia8(i+ix+2),i=1,8)
         write (ctitle,'(12a8)') (ia8(i+ix+2),i=9,20)
       endif
       do i = 1,nfiles
         filszo(i) = filsiz(i)
       enddo
       if (frst .and. .not.fl) call fabend
       do i = 1,ncoms
         if (frst) then
           if (i .eq. 6) then
             if (comdat(6) .eq. 0) iccm(6) = 0
           endif
         endif
         if (iccm(i) .eq. 0) exit
         if (.not.fl) then
           if (iand(iccf(i),4) .eq. 0) cycle
         endif
         ixb = iccm(i) - ias
         read (rstplt,iostat=iost,end=74,err=62) lx,iwrd
         read (rstplt,iostat=iost,end=74,err=62) (ha(in+ixb-1),
     &   in=1,lx)
         if (rdebug) write (output,3003) iccs(i),lx
 3003  format (' cb',i8,i10)
         if (lx .ne. iccs(i)) go to 66
       enddo
       hit = .false.
       do i = 1,nfiles
         hit = hit .or. filsiz(i) .ne. filszo(i)
       enddo
       if (rdc .and. hit) then
         call ftbexp(0,maxscm,maxlcm)
         rdc = .false.
         do i = 1,nfiles
           if (fil(i) .ne. 0.0) then
             call ftbdel (fil(i))
             fil(i) = 0.0
             inx(i) = 0
           endif
         enddo
         call ftbsft (2.0,isiz,1,inxx)
         l1 = lcontg(1)
       endif
       do i = 1,nfiles
         if (filid(i) .eq. 0.0) cycle
         if (filid(i) .lt. 0.0) then
           if (.not.fl .or. iand(filflg(i),1).eq.0) cycle
         endif
         if (inx(i) .eq. 0) then
           l1 = l1 - filsiz(i)
           if (l1 .lt. 0) go to 64
           fil(i) = ftbnid(1)
           if (iand(filflg(i),1) .ne. 0) fil(i) = -fil(i)
           call ftbrsv (fil(i),filsiz(i),-1,inx(i))
         endif
         read (rstplt,iostat=iost,end=74,err=62) lx,iwrd
         read (rstplt,iostat=iost,end=74,err=62) (ia8(in+inx(i)-1),
     &   in=1,lx)
         if (rdebug) write (output,3004) filsiz(i),lx
 3004  format (' db',i8,i10)
         if (lx .ne. filsiz(i)) go to 66
       enddo
       call gentblread (cpy,fl)
       call intraread (fl)
       call invhtbread (fl)
       call invtblread (fl)
       call junspread (fl)
       call lpdatread (fl)
       if (fl) call hynodread (cpy)
       call statccread (fl)
       call tstpctcread (fl)
       if (fl) call usrvarread (cpy)
       call volspread (fl)
$if def,selap,1
       if (scntrl(1)) call scdread (fl)
       if (frst) frst = .false.
       if (.not.rdc) then
         call ftbsft (2.0,isiz,2,inxx)
         call ftbrdc
         rdc = .true.
       endif
c  Determine if desired restart record has been read.
       if (irsno(1) - ia8(ix+2)) 69,90,63
c
   62  write (output,"('0******** Read error,',i5,' on file rstplt occur
     &red before reading requested restart data.')") iost
       go to 76
   74  write (output,2023)
 2023  format ('0******** End of file on file rstplt occurred before rea
     &ding requested restart data.')
   76  tfail = .true.
       if (frst) go to 77
       if (.not.rdc) go to 97
       write (output,2034)
 2034  format ('0******** Data previously read will be used, data may be
     & a combination of indicated restart record and previous record.')
       go to 90
   77  write (output,2038)
 2038  format ('0******** Error occurred before first restart record was
     & read.')
       go to 68
   97  write (output,2028)
 2028  format ('0******** Error occurred at restart record following a r
     &enodaliztion.')
       go to 68
   78  write (output,2026)
 2026  format ('0******** Insufficient space to handle restart, problem
     &will be terminated.')
       tfail = .true.
       go to 68
   64  write (output,2026)
       tfail = .true.
   68  nogof = .true.
       go to 89
c
   65  write (output,2036)
 2036  format ('0******** Wrong information in header of restart record.
     & ')
       go to 76
c
   66  write (output,2042)
 2042  format ('0******** Wrong length record in common or dynamic resta
     &rt record.')
       if (rdebug) go to 76
       rdebug = .true.
       write (output,3005)
 3005  format ('0******** Rereading rstplt with diagnostics enabled.')
       go to 21
   59  write (output,2037)
 2037  format ('0******** Wrong length record in header of restart recor
     &d.')
       go to 76
c
   69  write (output,2039)
 2039  format ('0******** Desired restart record is not on file, using r
     &ecord just read.')
       tfail = .true.
c  Return temporary file.
   90  continue
c  Restore print control flags.
       ihlppr(1) = ihlpsv(1)
       ihlppr(2) = ihlpsv(2)
       if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2040) ia8(ix+2)
 2040  format ('0Restart record',i8,' entered.')
   89  if (.not.rdc) go to 92
       call ftbexp (0,maxscm,maxlcm)
       call ftbsft (2.0,isiz,1,inxx)
   92  call ftbdel (fid)
c  Restore saved information to common.
       print = ior(iand(print,not(17)),ipr)
       if( iand(ihlppr(2),ishft(1,22)).ne.0 )
     & write (output,2021) ctitle(1:80)
 2021  format ('0Problem title card of restart record being used is:',
     & a)
       iroute = iroutx
       ncase = ncasx
       ctitle = ihldc
       ptitle = ihldp
       do i = 1,ncoms
         comdat(i) = iccm(i)
         comdln(i) = iccs(i)
       enddo
       fail = tfail
       filid(1) = fsav
       filndx(1) = inxx
       filsiz(1) = isiz
       do i = 2,nfiles
         filid(i) = fil(i)
         filndx(i) = inx(i)
       enddo
       call fmvlwr
c
c  If write initial conditions run, open stripf file.
       if (iand(iroute,63) .eq. 4) then
         open (unit=stripf,file=filsch(6),status='new',form='formatted',
     &   iostat=len)
         if (len .ne. 0) then
           write (output,"('Open error number',i8,' on file ',a,', perha
     &ps file already exists.')") len,trim(filsch(6))
           write (output,"('******** Open error number',i8,' on file ',
     & a,', perhaps file already exists.')") len,trim(filsch(6))
           fail = .true.
         endif
       endif
c  Rewind rstplt and read over first record if switching between
c  steady state and transient.
       if (iand(iroute,63).eq.3 .or. iand(iroute,63).eq.4 .or.
     & .not.newrst) return
       rewind rstplt
       read (ptitle(1:38),'(3a8)') rw(1:3)
       read (crstrc,'(3a8)') rw(4:6)
       read (ctitle(82:105),'(3a8)') rw(7:9)
       iw(10) = ishft(iroute,-6)
       lx = 10
       write (rstplt) lx,iwrd
       write (rstplt) rw(1:10)
       end
