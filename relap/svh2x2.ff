*mlist
       subroutine svh2x2 (a,ixvfa,ihld,nh,s)
c
c  Computes water thermodynamic properties as a function of pressure
c  and quality.
c
c  Cognizant engineer: rjw.
c
*in32 ihld
*in32end
c
c  Vector subroutine that can only be called from statep.
c
c  Cognizant engineer: rjw.
c
       implicit none
       integer ixvfa,ihld(*),nh
       real a(*),s(*)
       include 'fast.h'
c
       common /sth2xc/ nt,np,ns,ns2,klp,klp2,llp,nt5,jpl
       integer nt,np,ns,ns2,klp,klp2,llp,nt5,jpl
       save /sth2xc/
       include 'scrtch.h'
       include 'voldat.h'
c
$if -def,in32,2
       integer msk
       parameter (msk=1073741823)
       real c1,c2,c3,d1,d2,dpdt1,dpdt2,f11,f22,fr,fr1,hfg1,hfg2,px
       integer i,ih,ih7,ih8,ih9,iip,ix,jja,jjb,jp,jpp,kp,kp2,m,nh7,nh8,
     & nh9
       logical s2,s3
       real k(9),c(9),b(6),cc(3),crp,crt,plow,pxx1,pxx2,pxxx,pxxy
c
       data k/-7.691234564e0,-26.08023696e0,-168.1706546e0,
     &         6.423285504e1,-1.189646225e2, 4.167117320e0,
     &         2.097506760e1, 1.e9,          6.e0/
       data crt/647.3e0/,crp/22120000.e0/
       data pxxx/1378.951459e0/,pxxy/3102640.782e0/,
     & pxx1/1.450377377e-3/,pxx2/1.450377377e-4/
       data plow/611.2444e0/
       data c/274.9043833e0,13.66254889e0,1.176781611e0,
     & -.189693e0,8.74535666e-2,-1.7405325e-2,2.147682333e-3,
     & -1.383432444e-4,3.800086611e-6/
       data b/6669.352222e0,-4658.899e0,1376.536722e0,
     & -201.9126167e0,14.82832111e0,-.4337434056e0/
       data cc/0.84488898e0,2.9056480e0,219.74589e0/
c
       ih = ixvfa
cdir$ ivdep
       do 13 m = 1,nh
         i = ihld(ih)
         ix = vctrls(i)
c  Temporary patch to stay above the triple point.
         s(ix+1) = max(min(s(ix+1),crp),plow)
         s(ix+9) = s(ix+1)
         ih = ih + scskp
   13  continue
c  Compute saturation temperature given pressure.
       ih = ixvfa
       ih7 = ixvfa
       ih8 = ixvfa
       ih9 = ixvfa
       nh7 = 0
       nh8 = 0
       nh9 = 0
cdir$ ivdep
       do 19 m = 1,nh
         i = ihld(ih)
         ix = vctrls(i)
         if (s(ix+1) .lt. pxxx) then
           ihld9(ih9) = i
           ih9 = ih9 + scskp
           nh9 = nh9 + 1
         else if (s(ix+1) .gt. pxxy) then
           ihld8(ih8) = i
           ih8 = ih8 + scskp
           nh8 = nh8 + 1
         else
           ihld7a(ih7) = i
           ih7 = ih7 + scskp
           nh7 = nh7 + 1
         endif
         ih = ih + scskp
   19  continue
       if (nh7 .ne. 0) then
         ih7 = ixvfa
cdir$ ivdep
         do 21 m = 1,nh7
           i = ihld7a(ih7)
           ix = vctrls(i)
           fr = log(pxx1*s(ix+1))
           s(ix) = (((((((fr*c(9) + c(8))*fr + c(7))*fr + c(6))*fr +
     &     c(5))*fr + c(4))*fr + c(3))*fr + c(2))*fr + c(1)
           ih7 = ih7 + scskp
   21    continue
       endif
       if (nh8 .ne. 0) then
         ih8 = ixvfa
cdir$ ivdep
         do 17 m = 1,nh8
           i = ihld8(ih8)
           ix = vctrls(i)
           fr = log(pxx2*s(ix+1))
           s(ix) = min(((((fr*b(6) + b(5))*fr + b(4))*fr + b(3))*fr +
     &     b(2))*fr + b(1),crt)
           ih8 = ih8 + scskp
   17    continue
       endif
       if (nh9 .ne. 0) then
         ih9 = ixvfa
cdir$ ivdep
         do 18 m = 1,nh9
           i = ihld9(ih9)
           ix = vctrls(i)
           fr = log(s(ix+1))
           s(ix) = (cc(1)*fr + cc(2))*fr + cc(3)
           ih9 = ih9 + scskp
   18    continue
       endif
       ih = ixvfa
cdir$ ivdep
       do 14 m = 1,nh
         i = ihld(ih)
         ix = vctrls(i)
         fr = s(ix)/crt
         fr1 = 1.0 - fr
         d1 = ((((k(5)*fr1 + k(4))*fr1 + k(3))*fr1 + k(2))*fr1 +
     &   k(1))*fr1
         d2 = (((5.0*k(5)*fr1 + 4.0*k(4))*fr1 + 3.0*k(3))*fr1 +
     &   2.0*k(2))*fr1 + k(1)
         c2 = k(7)*fr1
         c1 = (c2 + k(6))*fr1 + 1.0
         c2 = 2.0*c2 + k(6)
         f22 = k(8)*fr1
         f11 = 1.0/(f22*fr1 + k(9))
         f22 = 2.0*f22
         hfg1 = 1.0/(fr*c1)
         hfg2 = fr1*f11
         px = crp*exp(d1*hfg1 - hfg2)
         s(ix) = max(s(ix) + (s(ix+1)-px)*crt/(px*((d1*hfg1*(fr*c2 - c1)
     &   - d2)*hfg1 + (1.0 - hfg2*f22)*f11)),273.16)
         ih = ih + scskp
   14  continue
c  Search both saturation tables to get closest bracketing.
       ih = ixvfa
       do 15 m = 1,nh
         i = ihld(ih)
         ix = vctrls(i)
$if -def,in32,2
         iip = ishft(is23(ix),-30)
         jp = iand(is23(ix),msk)
$if def,in32,2
         iip = is23(1,ix)
         jp = is23(2,ix)
         s2 = .false.
         s3 = .false.
         if (iip.le.0 .or. iip.ge.ns) iip = 1
         if (jp.le.0 .or. jp.ge.ns2) jp = 1
c  Set indexes in temperature and pressure tables for saturation
c  computations.
   11    if (s(ix) .ge. a(iip)) go to 10
         iip = iip - 1
         go to 11
   10    if (s(ix) .lt. a(iip+1)) go to 12
         iip = iip + 1
         go to 10
   12    jpp = jp + nt
  111    if (s(ix+9) .ge. a(jpp)) go to 110
         jpp = jpp - 1
         if (jpp .gt. nt) go to 111
         s3 = .true.
         go to 112
  110    if (s(ix+9) .lt. a(jpp+1)) go to 112
         jpp = jpp + 1
         if (jpp .lt. jpl) go to 110
         s2 = .true.
  112    jp = jpp - nt
         kp2 = klp2 + jp*13
         kp = klp + iip*13
         if (s3 .or. a(jpp).le. a(kp)) go to 113
         paa(ix) = a(jpp)
         taa(ix) = a(kp2)
         jja = kp2
         go to 115
  113    taa(ix) = a(iip)
         paa(ix) = a(kp)
         jja = kp
  115    if (s2 .or. a(jpp+1).ge.a(kp+13)) go to 116
         pbb(ix) = a(jpp+1)
         tbb(ix) = a(kp2+13)
         jjb = kp2 + 13
         go to 117
  116    tbb(ix) = a(iip+1)
         pbb(ix) = a(kp+13)
         jjb = kp + 13
  117    ja(ix) = jja
         jb(ix) = jjb
$if -def,in32,1
         is23(ix) = ior(ishft(iip,30),jp)
$if def,in32,2
         is23(1,ix) = iip
         is23(2,ix) = jp
         ih = ih + scskp
   15  continue
c  Perform interpolation for two phase quantities.
       ih = ixvfa
cdir$ ivdep
       do 16 m = 1,nh
         i = ihld(ih)
         ix = vctrls(i)
         jja = ja(ix)
         jjb = jb(ix)
         fr1 = s(ix) - taa(ix)
         fr = fr1/(tbb(ix) - taa(ix))
         hfg1 = a(jja+8) - a(jja+2) + paa(ix)*(a(jja+7) - a(jja+1))
         hfg2 = a(jjb+8) - a(jjb+2) + pbb(ix)*(a(jjb+7) - a(jjb+1))
         dpdt1 = hfg1/(taa(ix)*(a(jja+7) - a(jja+1)))
         dpdt2 = hfg2/(tbb(ix)*(a(jjb+7) - a(jjb+1)))
         f11 = a(jja+1)*(a(jja+3) - a(jja+4)*dpdt1)
         f22 = a(jjb+1)*(a(jjb+3) - a(jjb+4)*dpdt2)
         d1 = f11*(tbb(ix) - taa(ix))
         d2 = f22*(tbb(ix) - taa(ix))
         c2 = 3.0*(a(jjb+1) - a(jja+1)) - d2 - 2.0*d1
         c3 = d2 + d1 - 2.0*(a(jjb+1) - a(jja+1))
         s(ix+10) = a(jja+1) + fr*(d1 + fr*(c2 + fr*c3))
         f11 = a(jja+7)*(a(jja+9) - a(jja+10)*dpdt1)
         f22 = a(jjb+7)*(a(jjb+9) - a(jjb+10)*dpdt2)
         d1 = f11*(tbb(ix) - taa(ix))
         d2 = f22*(tbb(ix) - taa(ix))
         c2 = 3.0*(a(jjb+7) - a(jja+7)) - d2 - 2.0*d1
         c3 = d2 + d1 - 2.0*(a(jjb+7) - a(jja+7))
         s(ix+11) = a(jja+7) + fr*(d1 + fr*(c2 + fr*c3))
         s(ix+12) = a(jja+2) + (a(jjb+2) - a(jja+2))*fr
         s(ix+13) = a(jja+8) + (a(jjb+8) - a(jja+8))*fr
         s(ix+14) = s(ix+12) + s(ix+9)*s(ix+10)
         s(ix+15) = s(ix+13) + s(ix+9)*s(ix+11)
         s(ix+16) = a(jja+3) + (a(jjb+3) - a(jja+3))*fr
         s(ix+17) = a(jja+9) + fr*tbb(ix)/s(ix)*(a(jjb+9) - a(jja+9))
         s(ix+18) = a(jja+4) + (a(jjb+4) - a(jja+4))*fr
         s(ix+19) = a(jja+10) + (s(ix+9) - paa(ix))/(pbb(ix) - paa(ix))*
     &   pbb(ix)/s(ix+9)*(a(jjb+10) - a(jja+10))
         s(ix+20) = a(jja+5) + (a(jjb+5) - a(jja+5))*fr
         s(ix+21) = a(jja+11) + (a(jjb+11) - a(jja+11))*fr
         ih = ih + scskp
   16  continue
$if def,nanscr
c  Naned jaa,jbb
       call nanscv(33,34)
c  Naned ihld9,ihld8
       call nanscv(48,49)
c  Naned paa,pbb,taa,tbb
       call nanscv(77,80)
c  Naned ihld7a
       call nanscv(101,101)
$endif
       return
       end
