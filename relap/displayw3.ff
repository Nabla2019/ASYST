       subroutine displayw3
$if def,gui
$if -def,ifortc,2
       use opengl_gl
       use opengl_glut
$if def,ifortc,2
       use ifopngl
       use opengl_glut
       use hynmod
       implicit none
       integer, parameter :: kr=selected_real_kind(12,200)
       integer n
       character :: wch1*26='volume number (cccvvvvvf).'
       character :: wch1a*16='volume variable.'
       character :: wch2*28='junction number (cccjjjjjj).'
       character :: wch2a*18='junction variable.'
       character :: wch3*32='heat structure number (cccg0ss).'
       character :: wch3a*24='heat structure variable.'
       character :: wch3b*25='reflood related variable.'
       character :: wch4*42='heat structure-surface number (cccg0ssnn).'
       character :: wch5*39='heat structure-mesh number (cccg0ssnn).'
       character :: wch6*36='hydrodynamic component number (ccc).'
       character :: wch6a*32='hydrodynamic component variable.'
       character :: wch7*28='Scdap component number (jj).'
       character :: wch8*36='Scdap component-axial number (kkjj).'
       character :: wch9*47='Scdap component-fission product number (nn)
     &.'
       character :: wcha*46='Scdap component-axial-mesh number (iikkjj).
     &'
       character :: wchb*33='Couple creep rupture number (nn).'
       character :: wchc*33='Relap5 creep rupture number (nn).'
       character :: wchd*27='Couple node number (nnn01).'
       character :: wche*48='Couple fission product-node number (iinnn01
     &).'
       character :: wchf*30='Couple element number (nnn01).'
       character :: wchg*36='Couple heat transfer number (nnn01).'
       character :: wchh*29='variable testda indices (nn).'
       character :: wchi*19='system number (nn).'
       character :: wchj*31='control variable number (nnnn).'
       character :: wchk*22='guitrip number (-nnn).'
       character :: wchl*15='guitrip number.'
       character :: wchm*23='guitrip operation code.'
       character :: wchn*22='guitrip variable type.'
       character :: wcho*30='guitrip logical variable type.'
       character :: wchp*19='Relap5 trip number.'
       character :: wchq*23='latch and stop options.'
       character :: wchr*26='reactor kinetics variable.'
       character :: wchs*17='general variable.'
       character :: wcht*22='Scdap bundle variable.'
       character :: wchu*25='Scdap component variable.'
       character :: wchv*22='lower plenum variable.'
       character :: wchw*9='constant.'
       character :: wchx*28='characters defining constant.'
       character :: pwch*48
!
       call fglMatrixMode (GL_PROJECTION)
       call fglLoadIdentity
       call fgluOrtho2d (0.0_kr,windw3w,0.0_kr,windw3h)
       call fglMatrixMode (GL_MODELVIEW)
       call fglLoadIdentity
       call fglClear (GL_COLOR_BUFFER_BIT)
!
       call fglColor3f (0.0_4,0.0_4,0.0_4)
       select case (fhoption)
       case (29,31,401:471)
         pwch = wch1
       case (30,32,501:526)
         pwch = wch2
       case (52)
         pwch = wchk
       case (53,61,64,71,74)
         pwch = wchl
       case (56)
         pwch = wchm
       case (60,63)
         pwch = wchn
       case (70,73)
         pwch = wcho
       case (62,65,72,75)
         pwch = wchp
       case (80)
         pwch = wchw
       case (87)
         pwch = wchs
       case (88)
         pwch = wch6a
       case (89)
         pwch = wch1a
       case (90)
         pwch = wch2a
       case (91)
         pwch = wch3a
       case (92)
         pwch = wch3b
       case (93)
         pwch = wchr
       case (95)
         pwch = wcht
       case (96)
         pwch = wchu
       case (97)
         pwch = wchv
       case (99)
         pwch = wchq
       case (100)
         pwch = wchx
       case (260)
         pwch = wchh
       case (66,67,261:262)
         pwch = wchi
       case (551,571,575)
         pwch = wch3
       case (552:554,556:560)
         pwch = wch4
       case (555,570)
         pwch = wch5
       case (601:636)
         pwch = wch6
       case (701:707)
         pwch = wch7
       case (708,710:734)
         pwch = wch8
       case (709)
         pwch = wch9
       case (735,799)
         pwch = wcha
       case (736)
         pwch = wchb
       case (737)
         pwch = wchc
       case (829)
         pwch = wchd
       case (830)
         pwch = wche
       case (831:836)
         pwch = wchf
       case (837:839)
         pwch = wchg
       case (10000)
         pwch = wchj
       end select
       n = len_trim(pwch)
c      call prints (5.0_kr,40.0_kr,
       call prints (5.0_kr,windw3h - 20.0_kr,
     & 'Click right mouse button in this window to select ' //
     &  pwch(1:n),1)
       if (fhoption .eq. 100) call prints (20.0_kr,windw3h - 40.0_kr,
     & 'Constant: ' // bcd(1:23),1)
       call fglFlush
       call glutSwapBuffers
$endif
       end subroutine displayw3
