*mlist
       subroutine incond
c
c
c  Write out initial conditions in input data format.
c
c  Cognizant engineer: rjw.
c
       implicit none
       include 'fast.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'convarc.h'
       include 'cnvtpa.h'
       include 'genrl.h'
       include 'htsrcm.h'
       include 'jundat.h'
       include 'rcompc.h'
       include 'ufiles.h'
       include 'voldat.h'
c
c  Local variables.
       integer ccc,ebt,i,j,k,m,mn,mx,n
       real cinrt,crpm,ctorq,cunp,cuntp,cunu,cunv,hold(99)
c
       data cinrt/0.04214011009/,crpm/0.10471975512/,ctorq/1.355817948/,
     & cunp/1.4503774e-4/,cuntp/255.37222222222222/,cunu/4.2992261e-4/,
     & cunv/3.2808399/
c
       write (stripf,"('*',a)") ctitle(1:79)
c  Write out hydrodynamic volume and junction initial data cards.
       if (filid(3) .ne. 0.0) then
         write (stripf,"('*  Hydrodynamic volume and junction data')")
         n = filndx(3)
         do mn = 1,ncmps(n)
           write (stripf,"('*  Component',i4,4x,a8,4x,a8)")
     &     cmpnum(n),cmpnam(n),cmpalf(cmptyp(n))
           select case (cmptyp(n))
c  Pipe, annulus, and prizer components.
           case (1,7,17)
             mx = 0
             i = nvco(n) + filndx(4)
             do m = 1,nvc(n)
               if (boron(i) .ne. 0.0) then
                 mx = 10
                 exit
               endif
               i = i + ivskp
             enddo
             ccc = cmpnum(n)*10000 + 1200
             i = nvco(n) + filndx(4)
             ebt = volmat(i)*100 + mx
             if (quala(i) .ne. 0.0) ebt = ebt + 6
             do m = 1,nvc(n)
               if (uniti) then
                 write (stripf,"(i7.7,i4,2es20.12/'+',6x,3es20.12,i3)")
     &           ccc+m,ebt,p(i),uf(i),ug(i),voidg(i),quala(i),m
               else
                 hold(1) = p(i)*cunp
                 hold(2) = uf(i)*cunu
                 hold(3) = ug(i)*cunu
                 write (stripf,"(i7.7,i4,2es20.12/'+',6x,3es20.12,i3)")
     &           ccc+m,ebt,hold(1:3),voidg(i),quala(i),m
               endif
               i = i + ivskp
             enddo
             if (mx .ne. 0) then
               ebt = ccc + 800
               i = nvco(n) + filndx(4)
               do m = 1,nvc(n)
                 write (stripf,"(i7.7,es20.12,i3)")
     &           ebt+m,boron(i)/rhof(i),m
                 i = i + ivskp
               enddo
             endif
             if (njc(n) .gt. 0) then
               ccc = ccc + 100
               write (stripf,"(i7.7,'  0')") ccc
               j = njco(n) + filndx(5)
               do m = 1,njc(n)
                 if (uniti) then
                   write (stripf,"(i7.7,2es20.12,' 0.0',i3)")
     &             ccc+m,velfj(j),velgj(j),m
                 else
                   hold(1) = velfj(j)*cunv
                   hold(2) = velgj(j)*cunv
                   write (stripf,"(i7.7,2es20.12,' 0.0',i3)")
     &             ccc+m,hold(1:2),m
                 endif
                 j = j + ijskp
               enddo
             endif
c  Multiple junction component.
           case (3)
             ccc = cmpnum(n)*10000 + 1
             write (stripf,"(i7.7,i6,'  0')") ccc,njc(n)
             ccc = ccc + 1010
             j = njco(n) + filndx(5)
             if (uniti) then
               write (stripf,
     &         "(i7.7,2es20.12,i5,:/('+',6x,2es20.12,i5))")
     &         ccc,(velfj((k-1)*ijskp+j),velgj((k-1)*ijskp+j),k,
     &         k=1,njc(n))
             else
               write (stripf,
     &         "(i7.7,2es20.12,i5,:/('+',6x,2es20.12,i5))")
     &         ccc,(velfj((k-1)*ijskp+j)*cunv,velgj((k-1)*ijskp+j)*cunv,
     &         k,k=1,njc(n))
             endif
c  Pump component.
           case (4)
             k = cmpnum(n)*10000
             ccc = k + 200
             i = nvco(n) + filndx(4)
             ebt = volmat(i)*100 + 10
             if (uniti) then
               hold(1) = p(i)
               hold(2) = uf(i)
               hold(3) = ug(i)
             else
               hold(1) = p(i)*cunp
               hold(2) = uf(i)*cunu
               hold(3) = ug(i)*cunu
             endif
             if (quala(i) .eq. 0.0) then
               write (stripf,"(i7.7,i4,3es20.12/'+',6x,2es20.12)")
     &         ccc,ebt,hold(1:3),voidg(i),boron(i)/rhof(i)
             else
               ebt = ebt + 6
               write (stripf,"(i7.7,i4,3es20.12/'+',6x,3es20.12)")
     &         ccc,ebt,hold(1:3),voidg(i),quala(i),boron(i)/rhof(i)
             endif
             k = k*100
             j = njco(n) + filndx(5)
             do m = 1,njc(n)
               if (uniti) then
                 write (stripf,"(i7.7,2es20.12,' 0.0')")
     &           ccc+i,velfj(j),velgj(j)
               else
                 hold(1) = velfj(j)*cunv
                 hold(2) = velgj(j)*cunv
                 write (stripf,"(i7.7,'  0',2es20.12,' 0.0')")
     &           ccc+m,hold(1:2)
               endif
               j = j + ijskp
             enddo
c  Branch, jetmixer, separatr, turbine, and eccmix components.
           case (5,6,8,14,15)
             k = cmpnum(n)*10000
             write (stripf,"(i7.7,i4,'  0')") k+1,njc(n)
             ccc = k + 200
             i = nvco(n) + filndx(4)
             ebt = volmat(i)*100 + 10
             if (uniti) then
               hold(1) = p(i)
               hold(2) = uf(i)
               hold(3) = ug(i)
             else
               hold(1) = p(i)*cunp
               hold(2) = uf(i)*cunu
               hold(3) = ug(i)*cunu
             endif
             if (quala(i) .eq. 0.0) then
               write (stripf,"(i7.7,i4,3es20.12/'+',6x,2es20.12)")
     &         ccc,ebt,hold(1:3),voidg(i),boron(i)/rhof(i)
             else
               ebt = ebt + 6
               write (stripf,"(i7.7,i4,3es20.12/'+',6x,3es20.12)")
     &         ccc,ebt,hold(1:3),voidg(i),quala(i),boron(i)/rhof(i)
             endif
             ccc = ccc + 1
             k = k*100
             j = njco(n) + filndx(5)
             do m = 1,njc(n)
               i = (junno(j) - k)/10
               if (uniti) then
                 write (stripf,"(i7.7,2es20.12,' 0.0')")
     &           ccc+i,velfj(j),velgj(j)
               else
                 hold(1) = velfj(j)*cunv
                 hold(2) = velgj(j)*cunv
                 write (stripf,"(i7.7,2es20.12,' 0.0')")
     &           ccc+i,hold(1:2)
               endif
               j = j + ijskp
             enddo
c  Single volume component.
           case (10)
             ccc = cmpnum(n)*10000 + 200
             i = nvco(n) + filndx(4)
             ebt = volmat(i)*100 + 10
             if (uniti) then
               hold(1) = p(i)
               hold(2) = uf(i)
               hold(3) = ug(i)
             else
               hold(1) = p(i)*cunp
               hold(2) = uf(i)*cunu
               hold(3) = ug(i)*cunu
             endif
             if (quala(i) .eq. 0.0) then
               write (stripf,"(i7.7,i4,3es20.12/'+',6x,2es20.12)")
     &         ccc,ebt,hold(1:3),voidg(i),boron(i)/rhof(i)
             else
               ebt = ebt + 6
               write (stripf,"(i7.7,i4,3es20.12/'+',6x,3es20.12)")
     &         ccc,ebt,hold(1:3),voidg(i),quala(i),boron(i)/rhof(i)
             endif
c  Single junction and valve components.
           case (11,12)
             ccc = cmpnum(n)*10000 + 201
             j = njco(n) + filndx(5)
             if (uniti) then
               write (stripf,"(i7.7,' 0',2es20.12,' 0.0')")
     &         ccc,velfj(j),velgj(j)
             else
               hold(1) = velfj(j)*cunv
               hold(2) = velgj(j)*cunv
               write (stripf,"(i7.7,' 0',2es20.12,' 0.0')")
     &         ccc,hold(1:2)
             endif
           end select
           n = n + cmplen(n)
         enddo
       endif
c  Write out heat conduction initial condition data cards.
       if (filid(8) .ne. 0.0) then
         write (stripf,"('*  Heat structure initial condition data')")
         i = filndx(8)
         mx = nhtstr(i)
         do
           j = ihtptr(i) + filndx(8)
           ccc = (htstno(j)/1000)*1000 + 10000000
           hold(1) = htrado(j)
           if (.not.uniti) hold(1) = hold(1)*cunv
           if (htrflg(j) .eq. 0) then
             write (stripf,"(i8,i3,i3,i2,' 0',es20.12)")
     &       ccc,htnusr(j),htnmpt(j),iand(ishft(htopt(j),-24),3),
     &       hold(1)
           else
             write (stripf,"(i8,i3,i3,i2,' 0',es20.12,i6,i2,i4)")
     &       ccc,htnusr(j),htnmpt(j),iand(ishft(htopt(j),-24),3),
     &       hold(1),htrflg(j),iand(ishft(htopt(j),-8),1),htnaxl(j)
           endif
           ccc = ccc + 400
           write (stripf,"(i8,' -1')") ccc
           do m = 1,htnusr(j)
             j = ihtptr(i) + filndx(8)
             k = htxft(j) + filndx(8)
             if (uniti) then
               write (stripf,"(i8,3es20.12,:/('+',7x,3es20.12))")
     &         ccc + m,(httmp(n+k-1),n=1,htnmpt(j))
             else
               do n = 1,htnmpt(j)
                 hold(n) = (httmp(n+k-1) - cuntp)*1.8
               enddo
               write (stripf,"(i8,3es20.12,:/('+',7x,3es20.12))")
     &         ccc + m,hold(1:htnmpt(j))
             endif
             i = i + 1
             mx = mx - 1
           enddo
           if (mx .le. 0) exit
         enddo
       endif
c  Write out control component initialization data cards.
       if (filid(27) .ne. 0.0) then
         write (stripf,"('*  Control component initialization data.')") 
         i = filndx(27)
         if (iand(cnvopt(i),2) .eq. 0) then
           mx = 100
         else
           mx = 10
         endif
         do m = 1,cnvnum(i)
           if (cnvtyp(i) .ne. 18) then
             ccc = cnvpnm(i)*mx + 20500000
             write (stripf,"(i8,x,'''',a8,'''',x,a8,2es20.12,'  0')")
     &       ccc,cnvnam(i),cnvtpa(cnvtyp(i)),cnvscl(i),
     &       cnvarn(i)*cnvaro(i)
             k = iand(ishft(cnvnop(i),-2),3)
             select case (k)
             case (1)
               write (stripf,"('+',i3,es20.12)")
     &         k,cnvmin(i)*cnvaro(i)
             case (2)
               write (stripf,"('+',i3,es20.12)")
     &         k,cnvmax(i)*cnvaro(i)
             case (3)
               write (stripf,"('+',i3,2es20.12)")
     &         k,cnvmin(i)*cnvaro(i),cnvmax(i)*cnvaro(i)
             end select
             if (cnvtyp(i) .eq. 19) then
               if (iand(cnvnop(i),16) .ne. 0) then
                 k = i
                 do mn = 1,cnvnpa(i)
                   if (cnvscp(k) .eq. 3) then
                     j = cnvscp(k+3)
                     if (uniti) then
                       hold(1) = genvel(j)
                       hold(2) = gensvl(j)
                       hold(3) = genint(j)
                       hold(4) = genfr(j)
                     else
                       hold(1) = genvel(j)/crpm
                       hold(2) = gensvl(j)/crpm
                       hold(3) = genint(j)/cinrt
                       hold(4) = genfr(j)/ctorq
                     endif
                     write (stripf,"(i8,3es20.12/8x,es20.12,i10)")
     &               ccc + 6,hold(1:4),gentrp(j),gendtr(j)
                   endif
                   k = k + 4
                 enddo
               endif
             endif
           endif
           i = i + cnvlen(i)
         enddo
       endif
       write (output,"('0$$$$$$$$ Write of initial conditions completed
     &.')")
       write (tty,"('$$$$$$$$ Write of initial conditions completed.')")
       return
       end
