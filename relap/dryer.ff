*mlist
       subroutine dryer (i1, n, i)
c
c  Computes the exit vapor volume fraction of a dryer using the GE
c  dryer model.
c
c  Cognizant engineer: wlw.
c  Written by   w l weaver       sept. 1984 (for TRACB).
c
       implicit none
c
       integer i1,n,i
       include 'fast.h'
       include 'cmpdat.h'
       include 'comctl.h'
       include 'contrl.h'
       include 'jundat.h'
       include 'lvectr.h'
       include 'przdat.h'
       include 'separ.h'
       include 'statec.h'
       include 'ufiles.h'
       include 'voldat.h'
c
       integer i1j, i2j, i3j, k, l
       real alpgj1, alpfj1, alpgj2, alpfj2
       real rolj, rovj
       real cdim, vvj, dim, alpj, gdry
       real vel
c
c  Junction 1 is i, 2 is i2j, 3 is i3j.
       i1j = i
       i2j = i + ijskp
       i3j = i + 2*ijskp
c  k is the from volume, l is the to volume.
       k = ij1nx(i3j)
       l = ij2nx(i3j)
c      vvj = velg(l)
       vvj = velgj(i3j)
       vvj = max(vvj , 0.0)
       alpj = voidg(l)
       rolj = rhof(l)
       rovj = rhog(l)
!  Compute dryer capacity factor and donor void fraction.
       cdim = 1. - (vvj - vdryl(n))/(vdryu(n) - vdryl(n))
       cdim = max(0.0, min(1.0 ,cdim))
!  Store dryer critical inlet moisture in same location as separator
!  carryunder quality.
       xcu(n) = cdim
       dim = 1. - alpj/(alpj + (1. - alpj)*rolj/rovj)
!  Store dryer inlet moisture in same location as separator inlet
!  quality.
       xim(n) = dim
       gdry = 1.
       if (dim .gt. cdim) then
         gdry = 1. + (cdim - dim)/deldim(n)
         gdry = max(0.0, gdry)
       endif
c    store dryer capacity is same location as separator carryover
c    quality
       xco(n) = gdry
c  Now compute exit volume fractions.
       if (velfj(i1j) .gt. 1.e-3) then
         alpgj1 = gdry + alpj*(1.0 - gdry)
         vel = max(abs(velgj(i1j)), 1.0e-20)
         alpgj1 = min(alpgj1, 0.9*voidg(l)*v(l)/(ajun(i1j)*vel*dt))
         alpfj1 = 1.0 - alpgj1
         vel = max(abs(velfj(i2j)),1.0e-20)
         alpfj2 = min(1.0,0.9*voidf(l)*v(l)/(ajun(i2j)*vel*dt))
         alpgj2 = 1.0 - alpfj2
       endif
c
       if (velfj(i1j) .gt. 1.e-3) then
         voidgj(i1j) = alpgj1
         vodgjr(i1j) = voidgj(i1j)/voidg(l)
         voidfj(i1j) = alpfj1
         vodfjr(i1j) = voidfj(i1j)/voidf(l)
       endif
       if( velgj(i2j) .gt. 1.e-3) then
         voidgj(i2j) = alpgj2
         vodgjr(i2j) = voidgj(i2j)/voidg(l)
         voidfj(i2j) = alpfj2
         vodfjr(i2j) = voidfj(i2j)/voidf(l)
       endif
       return
       end
